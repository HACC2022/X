{"version":3,"sources":["meteor://ðŸ’»app/packages/service-configuration/service_configuration_common.js"],"names":["ServiceConfiguration","configurations","Mongo","Collection","_preventAutopublish","connection","Meteor","isClient","Accounts","ConfigError","serviceName","loginServicesConfigured","message","prototype","Error","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,OAAOA,oBAAP,KAAgC,WAApC,EAAiD;AAC/CA,sBAAoB,GAAG,EAAvB;AACD,C,CAED;AACA;;;AACAA,oBAAoB,CAACC,cAArB,GAAsC,IAAIC,KAAK,CAACC,UAAV,CACpC,2CADoC,EAEpC;AACEC,qBAAmB,EAAE,IADvB;AAEEC,YAAU,EAAEC,MAAM,CAACC,QAAP,GAAkBC,QAAQ,CAACH,UAA3B,GAAwCC,MAAM,CAACD;AAF7D,CAFoC,CAAtC,C,CAOA;AACA;AACA;AACA;AACA;AAEA;;AACAL,oBAAoB,CAACS,WAArB,GAAmC,UAASC,WAAT,EAAsB;AACvD,MAAIJ,MAAM,CAACC,QAAP,IAAmB,CAACC,QAAQ,CAACG,uBAAT,EAAxB,EAA4D;AAC1D,SAAKC,OAAL,GAAe,4CAAf;AACD,GAFD,MAEO,IAAIF,WAAJ,EAAiB;AACtB,SAAKE,OAAL,GAAe,aAAaF,WAAb,GAA2B,iBAA1C;AACD,GAFM,MAEA;AACL,SAAKE,OAAL,GAAe,wBAAf;AACD;AACF,CARD;;AASAZ,oBAAoB,CAACS,WAArB,CAAiCI,SAAjC,GAA6C,IAAIC,KAAJ,EAA7C;AACAd,oBAAoB,CAACS,WAArB,CAAiCI,SAAjC,CAA2CE,IAA3C,GACE,kCADF,C","file":"/packages/service-configuration.js","sourcesContent":["if (typeof ServiceConfiguration === 'undefined') {\n  ServiceConfiguration = {};\n}\n\n// Table containing documents with configuration options for each\n// login service\nServiceConfiguration.configurations = new Mongo.Collection(\n  'meteor_accounts_loginServiceConfiguration',\n  {\n    _preventAutopublish: true,\n    connection: Meteor.isClient ? Accounts.connection : Meteor.connection,\n  }\n);\n// Leave this collection open in insecure mode. In theory, someone could\n// hijack your oauth connect requests to a different endpoint or appId,\n// but you did ask for 'insecure'. The advantage is that it is much\n// easier to write a configuration wizard that works only in insecure\n// mode.\n\n// Thrown when trying to use a login service which is not configured\nServiceConfiguration.ConfigError = function(serviceName) {\n  if (Meteor.isClient && !Accounts.loginServicesConfigured()) {\n    this.message = 'Login service configuration not yet loaded';\n  } else if (serviceName) {\n    this.message = 'Service ' + serviceName + ' not configured';\n  } else {\n    this.message = 'Service not configured';\n  }\n};\nServiceConfiguration.ConfigError.prototype = new Error();\nServiceConfiguration.ConfigError.prototype.name =\n  'ServiceConfiguration.ConfigError';\n"]}