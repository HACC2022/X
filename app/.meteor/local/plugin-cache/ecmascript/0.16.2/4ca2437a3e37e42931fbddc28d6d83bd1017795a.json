{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\imports\\ui\\components\\Refine.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/components/Refine.jsx","filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\imports\\ui\\components\\Refine.jsx","inputSourceMap":{"version":3,"sources":["imports/ui/components/Refine.jsx"],"names":["React","useState","Form","Col","Row","Refine","value","setValue","map","type","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Col, Row } from 'react-bootstrap';\r\n\r\nconst Refine = () => {\r\n  const [value, setValue] = useState(0);\r\n  return (\r\n    <Form>\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label><strong>Horizontal axis</strong></Form.Label>\r\n        <br />\r\n        <Form.Label column sm=\"3\">Select column</Form.Label>\r\n        <Col sm=\"6\">\r\n          <Form.Select size=\"sm\">\r\n            <option>X.1</option>\r\n          </Form.Select>\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <br />\r\n        <Form.Label column sm=\"3\">Custom range</Form.Label>\r\n        <Col sm=\"3\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"min\" /></Col>\r\n        to\r\n        <Col sm=\"3\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"max\" /></Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <br />\r\n        <Form.Label column sm=\"3\">Custom ticks</Form.Label>\r\n        <Col sm=\"6\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. 2000,2005,2012\" /></Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\">Tick format</Form.Label>\r\n        <Col sm=\"6\">\r\n          <Form.Select size=\"sm\">\r\n            <option>(automatic)</option>\r\n            <option>1000[.00]</option>\r\n            <option>0</option>\r\n            <option>0.0</option>\r\n            <option>0.00</option>\r\n            <option>0.000</option>\r\n            <option>0.[0]</option>\r\n            <option>0.[00]</option>\r\n            <option>0%</option>\r\n            <option>0.0%</option>\r\n            <option>0.00%</option>\r\n            <option>0.[0]%</option>\r\n            <option>0.[00]%</option>\r\n            <option>10,000</option>\r\n            <option>1st</option>\r\n            <option>123k</option>\r\n            <option>123.4k</option>\r\n            <option>123.45k</option>\r\n            <option>(custom)</option>\r\n          </Form.Select>\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Grid lines</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"show\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"hide\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"tick marks\"\r\n            name=\"group3\"\r\n            type={type}\r\n            id={`inline-${type}-3`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <hr />\r\n      <Form.Label column sm=\"3\"><strong>Vertical axis</strong></Form.Label>\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Grid lines</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"linear\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"logarithmic\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <br />\r\n        <Form.Label column sm=\"3\">Custom range</Form.Label>\r\n        <Col sm=\"3\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"min\" /></Col>\r\n        to\r\n        <Col sm=\"3\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"max\" /></Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <br />\r\n        <Form.Label column sm=\"3\">Custom ticks</Form.Label>\r\n        <Col sm=\"6\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. 10,20,50\" /></Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\">Number format</Form.Label>\r\n        <Col sm=\"6\">\r\n          <Form.Select size=\"sm\">\r\n            <option>(automatic)</option>\r\n            <option>1000[.00]</option>\r\n            <option>0</option>\r\n            <option>0.0</option>\r\n            <option>0.00</option>\r\n            <option>0.000</option>\r\n            <option>0.[0]</option>\r\n            <option>0.[00]</option>\r\n            <option>0%</option>\r\n            <option>0.0%</option>\r\n            <option>0.00%</option>\r\n            <option>0.[0]%</option>\r\n            <option>0.[00]%</option>\r\n            <option>10,000</option>\r\n            <option>1st</option>\r\n            <option>123k</option>\r\n            <option>123.4k</option>\r\n            <option>123.45k</option>\r\n            <option>(custom)</option>\r\n          </Form.Select>\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Grid lines</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"show\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"hide\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"tick marks\"\r\n            name=\"group3\"\r\n            type={type}\r\n            id={`inline-${type}-3`}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Grid labels</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"show\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"hide\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"tick marks\"\r\n            name=\"group3\"\r\n            type={type}\r\n            id={`inline-${type}-3`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"left\"\r\n            name=\"group4\"\r\n            type={type}\r\n            id={`inline-${type}-4`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"right\"\r\n            name=\"group5\"\r\n            type={type}\r\n            id={`inline-${type}-5`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <hr />\r\n      <Form.Label column sm=\"3\"><strong>Customize lines</strong></Form.Label>\r\n      <br />\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\" htmlFor=\"exampleColorInput\">Base color</Form.Label>\r\n        <Col sm=\"6\"><Form.Control\r\n          type=\"color\"\r\n          id=\"exampleColorInput\"\r\n          defaultValue=\"#563d7c\"\r\n          title=\"Choose your color\"\r\n        />\r\n        </Col>\r\n      </Form.Group>\r\n      <Form.Group><Form.Label column sm=\"3\">Line width</Form.Label></Form.Group>\r\n      <Form.Group><Form.Label column sm=\"3\">Line dashes</Form.Label></Form.Group>\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\">Interpolation</Form.Label>\r\n        <Col sm=\"6\">\r\n          <Form.Select size=\"sm\">\r\n            <option>linear</option>\r\n            <option>curved</option>\r\n            <option>curved(cardinal)</option>\r\n            <option>curved(natural)</option>\r\n            <option>steps(after)</option>\r\n            <option>steps(before)</option>\r\n            <option>steps</option>\r\n          </Form.Select>\r\n        </Col>\r\n      </Form.Group>\r\n      <hr />\r\n      <Form.Label column sm=\"3\"><strong>Labeling</strong></Form.Label>\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Line labels</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"top\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"right\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"none\"\r\n            name=\"group3\"\r\n            type={type}\r\n            id={`inline-${type}-3`}\r\n          />\r\n        </div>\r\n      ))}\r\n      {['checkbox'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Check\r\n            label=\"Draw lines connecting labels to lines\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            label=\"Use line color for labels\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\">Label margin</Form.Label>\r\n        <Col sm=\"3\">\r\n          <Form.Range\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            min={0}\r\n            max={600}\r\n          />\r\n        </Col>\r\n        <Col sm=\"1\">\r\n          <Form.Control size=\"sm\" value={value} type=\"text\" onChange={e => setValue(e.target.value)} />\r\n        </Col>\r\n        <Col><Form.Text>px (0 = auto)</Form.Text></Col>\r\n      </Form.Group>\r\n      {['checkbox'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Check\r\n            label=\"Show tooltips\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <hr />\r\n      <Form.Label column sm=\"3\"><strong>Customize symbols</strong></Form.Label>\r\n      {['checkbox'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Check\r\n            label=\"Line symbols\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <Form.Label column sm=\"3\"><strong>Fill area between lines</strong></Form.Label>\r\n      <hr />\r\n    </Form>\r\n\r\n  );\r\n};\r\nexport default Refine;\r\n"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","root":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\imports\\ui\\components\\Refine.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/components/Refine.jsx"}},"code":"!function (module1) {\n  let React, useState;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    },\n\n    useState(v) {\n      useState = v;\n    }\n\n  }, 0);\n  let Form, Col, Row;\n  module1.link(\"react-bootstrap\", {\n    Form(v) {\n      Form = v;\n    },\n\n    Col(v) {\n      Col = v;\n    },\n\n    Row(v) {\n      Row = v;\n    }\n\n  }, 1);\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n\n  var _s = $RefreshSig$();\n\n  const Refine = () => {\n    _s();\n\n    const [value, setValue] = useState(0);\n    return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(Form.Label, null, /*#__PURE__*/React.createElement(\"strong\", null, \"Horizontal axis\")), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Select column\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\"\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      size: \"sm\"\n    }, /*#__PURE__*/React.createElement(\"option\", null, \"X.1\")))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Custom range\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      type: \"text\",\n      placeholder: \"min\"\n    })), \"to\", /*#__PURE__*/React.createElement(Col, {\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      type: \"text\",\n      placeholder: \"max\"\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Custom ticks\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\"\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      type: \"text\",\n      placeholder: \"e.g. 2000,2005,2012\"\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Tick format\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\"\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      size: \"sm\"\n    }, /*#__PURE__*/React.createElement(\"option\", null, \"(automatic)\"), /*#__PURE__*/React.createElement(\"option\", null, \"1000[.00]\"), /*#__PURE__*/React.createElement(\"option\", null, \"0\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.0\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.00\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.000\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.[0]\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.[00]\"), /*#__PURE__*/React.createElement(\"option\", null, \"0%\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.0%\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.00%\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.[0]%\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.[00]%\"), /*#__PURE__*/React.createElement(\"option\", null, \"10,000\"), /*#__PURE__*/React.createElement(\"option\", null, \"1st\"), /*#__PURE__*/React.createElement(\"option\", null, \"123k\"), /*#__PURE__*/React.createElement(\"option\", null, \"123.4k\"), /*#__PURE__*/React.createElement(\"option\", null, \"123.45k\"), /*#__PURE__*/React.createElement(\"option\", null, \"(custom)\")))), ['radio'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: \"inline-\".concat(type),\n      className: \"mb-3\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Grid lines\"), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"show\",\n      name: \"group1\",\n      type: type,\n      id: \"inline-\".concat(type, \"-1\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"hide\",\n      name: \"group2\",\n      type: type,\n      id: \"inline-\".concat(type, \"-2\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"tick marks\",\n      name: \"group3\",\n      type: type,\n      id: \"inline-\".concat(type, \"-3\")\n    }))), /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Vertical axis\")), ['radio'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: \"inline-\".concat(type),\n      className: \"mb-3\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Grid lines\"), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"linear\",\n      name: \"group1\",\n      type: type,\n      id: \"inline-\".concat(type, \"-1\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"logarithmic\",\n      name: \"group2\",\n      type: type,\n      id: \"inline-\".concat(type, \"-2\")\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Custom range\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      type: \"text\",\n      placeholder: \"min\"\n    })), \"to\", /*#__PURE__*/React.createElement(Col, {\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      type: \"text\",\n      placeholder: \"max\"\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Custom ticks\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\"\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      type: \"text\",\n      placeholder: \"e.g. 10,20,50\"\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Number format\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\"\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      size: \"sm\"\n    }, /*#__PURE__*/React.createElement(\"option\", null, \"(automatic)\"), /*#__PURE__*/React.createElement(\"option\", null, \"1000[.00]\"), /*#__PURE__*/React.createElement(\"option\", null, \"0\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.0\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.00\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.000\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.[0]\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.[00]\"), /*#__PURE__*/React.createElement(\"option\", null, \"0%\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.0%\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.00%\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.[0]%\"), /*#__PURE__*/React.createElement(\"option\", null, \"0.[00]%\"), /*#__PURE__*/React.createElement(\"option\", null, \"10,000\"), /*#__PURE__*/React.createElement(\"option\", null, \"1st\"), /*#__PURE__*/React.createElement(\"option\", null, \"123k\"), /*#__PURE__*/React.createElement(\"option\", null, \"123.4k\"), /*#__PURE__*/React.createElement(\"option\", null, \"123.45k\"), /*#__PURE__*/React.createElement(\"option\", null, \"(custom)\")))), ['radio'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: \"inline-\".concat(type),\n      className: \"mb-3\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Grid lines\"), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"show\",\n      name: \"group1\",\n      type: type,\n      id: \"inline-\".concat(type, \"-1\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"hide\",\n      name: \"group2\",\n      type: type,\n      id: \"inline-\".concat(type, \"-2\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"tick marks\",\n      name: \"group3\",\n      type: type,\n      id: \"inline-\".concat(type, \"-3\")\n    }))), ['radio'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: \"inline-\".concat(type),\n      className: \"mb-3\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Grid labels\"), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"show\",\n      name: \"group1\",\n      type: type,\n      id: \"inline-\".concat(type, \"-1\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"hide\",\n      name: \"group2\",\n      type: type,\n      id: \"inline-\".concat(type, \"-2\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"tick marks\",\n      name: \"group3\",\n      type: type,\n      id: \"inline-\".concat(type, \"-3\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"left\",\n      name: \"group4\",\n      type: type,\n      id: \"inline-\".concat(type, \"-4\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"right\",\n      name: \"group5\",\n      type: type,\n      id: \"inline-\".concat(type, \"-5\")\n    }))), /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Customize lines\")), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\",\n      htmlFor: \"exampleColorInput\"\n    }, \"Base color\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\"\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"color\",\n      id: \"exampleColorInput\",\n      defaultValue: \"#563d7c\",\n      title: \"Choose your color\"\n    }))), /*#__PURE__*/React.createElement(Form.Group, null, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Line width\")), /*#__PURE__*/React.createElement(Form.Group, null, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Line dashes\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Interpolation\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"6\"\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      size: \"sm\"\n    }, /*#__PURE__*/React.createElement(\"option\", null, \"linear\"), /*#__PURE__*/React.createElement(\"option\", null, \"curved\"), /*#__PURE__*/React.createElement(\"option\", null, \"curved(cardinal)\"), /*#__PURE__*/React.createElement(\"option\", null, \"curved(natural)\"), /*#__PURE__*/React.createElement(\"option\", null, \"steps(after)\"), /*#__PURE__*/React.createElement(\"option\", null, \"steps(before)\"), /*#__PURE__*/React.createElement(\"option\", null, \"steps\")))), /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Labeling\")), ['radio'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: \"inline-\".concat(type),\n      className: \"mb-3\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Line labels\"), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"top\",\n      name: \"group1\",\n      type: type,\n      id: \"inline-\".concat(type, \"-1\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"right\",\n      name: \"group2\",\n      type: type,\n      id: \"inline-\".concat(type, \"-2\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      label: \"none\",\n      name: \"group3\",\n      type: type,\n      id: \"inline-\".concat(type, \"-3\")\n    }))), ['checkbox'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: \"inline-\".concat(type),\n      className: \"mb-3\"\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      label: \"Draw lines connecting labels to lines\",\n      name: \"group1\",\n      type: type,\n      id: \"inline-\".concat(type, \"-1\")\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      label: \"Use line color for labels\",\n      name: \"group2\",\n      type: type,\n      id: \"inline-\".concat(type, \"-2\")\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\"\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, \"Label margin\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(Form.Range, {\n      value: value,\n      onChange: e => setValue(e.target.value),\n      min: 0,\n      max: 600\n    })), /*#__PURE__*/React.createElement(Col, {\n      sm: \"1\"\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      value: value,\n      type: \"text\",\n      onChange: e => setValue(e.target.value)\n    })), /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(Form.Text, null, \"px (0 = auto)\"))), ['checkbox'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: \"inline-\".concat(type),\n      className: \"mb-3\"\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      label: \"Show tooltips\",\n      name: \"group1\",\n      type: type,\n      id: \"inline-\".concat(type, \"-1\")\n    }))), /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Customize symbols\")), ['checkbox'].map(type => /*#__PURE__*/React.createElement(\"div\", {\n      key: \"inline-\".concat(type),\n      className: \"mb-3\"\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      label: \"Line symbols\",\n      name: \"group1\",\n      type: type,\n      id: \"inline-\".concat(type, \"-1\")\n    }))), /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: \"3\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Fill area between lines\")), /*#__PURE__*/React.createElement(\"hr\", null));\n  };\n\n  _s(Refine, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n  _c = Refine;\n  module1.exportDefault(Refine);\n\n  var _c;\n\n  $RefreshReg$(_c, \"Refine\");\n}.call(this, module);","map":{"version":3,"mappings":"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","names":["Refine","_s","value","setValue","useState","Row","map","type","e","target"],"sources":["imports/ui/components/Refine.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Col, Row } from 'react-bootstrap';\r\n\r\nconst Refine = () => {\r\n  const [value, setValue] = useState(0);\r\n  return (\r\n    <Form>\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label><strong>Horizontal axis</strong></Form.Label>\r\n        <br />\r\n        <Form.Label column sm=\"3\">Select column</Form.Label>\r\n        <Col sm=\"6\">\r\n          <Form.Select size=\"sm\">\r\n            <option>X.1</option>\r\n          </Form.Select>\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <br />\r\n        <Form.Label column sm=\"3\">Custom range</Form.Label>\r\n        <Col sm=\"3\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"min\" /></Col>\r\n        to\r\n        <Col sm=\"3\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"max\" /></Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <br />\r\n        <Form.Label column sm=\"3\">Custom ticks</Form.Label>\r\n        <Col sm=\"6\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. 2000,2005,2012\" /></Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\">Tick format</Form.Label>\r\n        <Col sm=\"6\">\r\n          <Form.Select size=\"sm\">\r\n            <option>(automatic)</option>\r\n            <option>1000[.00]</option>\r\n            <option>0</option>\r\n            <option>0.0</option>\r\n            <option>0.00</option>\r\n            <option>0.000</option>\r\n            <option>0.[0]</option>\r\n            <option>0.[00]</option>\r\n            <option>0%</option>\r\n            <option>0.0%</option>\r\n            <option>0.00%</option>\r\n            <option>0.[0]%</option>\r\n            <option>0.[00]%</option>\r\n            <option>10,000</option>\r\n            <option>1st</option>\r\n            <option>123k</option>\r\n            <option>123.4k</option>\r\n            <option>123.45k</option>\r\n            <option>(custom)</option>\r\n          </Form.Select>\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Grid lines</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"show\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"hide\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"tick marks\"\r\n            name=\"group3\"\r\n            type={type}\r\n            id={`inline-${type}-3`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <hr />\r\n      <Form.Label column sm=\"3\"><strong>Vertical axis</strong></Form.Label>\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Grid lines</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"linear\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"logarithmic\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <br />\r\n        <Form.Label column sm=\"3\">Custom range</Form.Label>\r\n        <Col sm=\"3\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"min\" /></Col>\r\n        to\r\n        <Col sm=\"3\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"max\" /></Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <br />\r\n        <Form.Label column sm=\"3\">Custom ticks</Form.Label>\r\n        <Col sm=\"6\"><Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. 10,20,50\" /></Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\">Number format</Form.Label>\r\n        <Col sm=\"6\">\r\n          <Form.Select size=\"sm\">\r\n            <option>(automatic)</option>\r\n            <option>1000[.00]</option>\r\n            <option>0</option>\r\n            <option>0.0</option>\r\n            <option>0.00</option>\r\n            <option>0.000</option>\r\n            <option>0.[0]</option>\r\n            <option>0.[00]</option>\r\n            <option>0%</option>\r\n            <option>0.0%</option>\r\n            <option>0.00%</option>\r\n            <option>0.[0]%</option>\r\n            <option>0.[00]%</option>\r\n            <option>10,000</option>\r\n            <option>1st</option>\r\n            <option>123k</option>\r\n            <option>123.4k</option>\r\n            <option>123.45k</option>\r\n            <option>(custom)</option>\r\n          </Form.Select>\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Grid lines</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"show\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"hide\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"tick marks\"\r\n            name=\"group3\"\r\n            type={type}\r\n            id={`inline-${type}-3`}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Grid labels</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"show\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"hide\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"tick marks\"\r\n            name=\"group3\"\r\n            type={type}\r\n            id={`inline-${type}-3`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"left\"\r\n            name=\"group4\"\r\n            type={type}\r\n            id={`inline-${type}-4`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"right\"\r\n            name=\"group5\"\r\n            type={type}\r\n            id={`inline-${type}-5`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <hr />\r\n      <Form.Label column sm=\"3\"><strong>Customize lines</strong></Form.Label>\r\n      <br />\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\" htmlFor=\"exampleColorInput\">Base color</Form.Label>\r\n        <Col sm=\"6\"><Form.Control\r\n          type=\"color\"\r\n          id=\"exampleColorInput\"\r\n          defaultValue=\"#563d7c\"\r\n          title=\"Choose your color\"\r\n        />\r\n        </Col>\r\n      </Form.Group>\r\n      <Form.Group><Form.Label column sm=\"3\">Line width</Form.Label></Form.Group>\r\n      <Form.Group><Form.Label column sm=\"3\">Line dashes</Form.Label></Form.Group>\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\">Interpolation</Form.Label>\r\n        <Col sm=\"6\">\r\n          <Form.Select size=\"sm\">\r\n            <option>linear</option>\r\n            <option>curved</option>\r\n            <option>curved(cardinal)</option>\r\n            <option>curved(natural)</option>\r\n            <option>steps(after)</option>\r\n            <option>steps(before)</option>\r\n            <option>steps</option>\r\n          </Form.Select>\r\n        </Col>\r\n      </Form.Group>\r\n      <hr />\r\n      <Form.Label column sm=\"3\"><strong>Labeling</strong></Form.Label>\r\n      {['radio'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Label column sm=\"3\">Line labels</Form.Label>\r\n          <Form.Check\r\n            inline\r\n            label=\"top\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"right\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"none\"\r\n            name=\"group3\"\r\n            type={type}\r\n            id={`inline-${type}-3`}\r\n          />\r\n        </div>\r\n      ))}\r\n      {['checkbox'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Check\r\n            label=\"Draw lines connecting labels to lines\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n          <Form.Check\r\n            label=\"Use line color for labels\"\r\n            name=\"group2\"\r\n            type={type}\r\n            id={`inline-${type}-2`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label column sm=\"3\">Label margin</Form.Label>\r\n        <Col sm=\"3\">\r\n          <Form.Range\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            min={0}\r\n            max={600}\r\n          />\r\n        </Col>\r\n        <Col sm=\"1\">\r\n          <Form.Control size=\"sm\" value={value} type=\"text\" onChange={e => setValue(e.target.value)} />\r\n        </Col>\r\n        <Col><Form.Text>px (0 = auto)</Form.Text></Col>\r\n      </Form.Group>\r\n      {['checkbox'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Check\r\n            label=\"Show tooltips\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <hr />\r\n      <Form.Label column sm=\"3\"><strong>Customize symbols</strong></Form.Label>\r\n      {['checkbox'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Check\r\n            label=\"Line symbols\"\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n        </div>\r\n      ))}\r\n      <Form.Label column sm=\"3\"><strong>Fill area between lines</strong></Form.Label>\r\n      <hr />\r\n    </Form>\r\n\r\n  );\r\n};\r\nexport default Refine;\r\n"]},"sourceType":"module","externalDependencies":{},"hash":"4ca2437a3e37e42931fbddc28d6d83bd1017795a"}
