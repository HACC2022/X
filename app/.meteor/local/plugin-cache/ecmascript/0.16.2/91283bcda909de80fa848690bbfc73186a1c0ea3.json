{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\client\\kadira.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/montiapm:agent/lib/client/kadira.js","filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\client\\kadira.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","root":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\client\\kadira.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/client/kadira.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet getErrorParameters;\nmodule.link(\"../common/utils\", {\n  getErrorParameters(v) {\n    getErrorParameters = v;\n  }\n\n}, 0);\n\nKadira.enableErrorTracking = function () {\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function () {\n  if (!Kadira.options.enableErrorTracking) {\n    return;\n  }\n\n  const {\n    message,\n    subType,\n    stack\n  } = getErrorParameters(arguments);\n\n  if (message) {\n    var now = new Date().getTime();\n    Kadira.errors.sendError({\n      appId: Kadira.options.appId,\n      name: message,\n      startTime: now,\n      type: 'client',\n      subType: subType || 'Monti.trackError',\n      info: getBrowserInfo(),\n      stacks: JSON.stringify([{\n        at: now,\n        events: [],\n        stack\n      }])\n    });\n  }\n}; // Create new NTP object and error model immediately so it can be used\n// endpoints is set later using __meteor_runtime_config__ or publication\n\n\nKadira.syncedDate = new Ntp(null);\nKadira.errors = new ErrorModel({\n  waitForNtpSyncInterval: 1000 * 5,\n  // 5 secs\n  intervalInMillis: 1000 * 60 * 1,\n  // 1minutes\n  maxErrorsPerInterval: 5\n}); // __meteor_runtime_config__ cannot be dynamically set for cordova apps\n// using a null subscription to send required options to client\n\nif (Meteor.isCordova) {\n  var SettingsCollection = new Meteor.Collection('kadira_settings');\n  SettingsCollection.find().observe({\n    added: initialize\n  });\n} else {\n  initialize(__meteor_runtime_config__.kadira);\n}\n\nvar initialized = false;\n\nfunction initialize() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (initialized) {\n    return;\n  }\n\n  initialized = true;\n  Kadira.options = _objectSpread({\n    errorDumpInterval: 1000 * 60,\n    maxErrorsPerInterval: 10,\n    collectAllStacks: false,\n    enableErrorTracking: false\n  }, options);\n\n  if (Kadira.options.appId && Kadira.options.endpoint) {\n    // update endpoint after receiving correct data\n    Kadira.syncedDate.setEndpoint(Kadira.options.endpoint);\n    Kadira.connected = true;\n    Meteor.startup(function () {\n      // if we don't do this this might block the initial rendering\n      // or, it will show up bottom of the page, which is not cool\n      setTimeout(function () {\n        Kadira.syncedDate.sync();\n      }, Kadira.options.clientEngineSyncDelay);\n    });\n  }\n\n  if (Kadira.connected && Kadira.options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  }\n\n  if (window.Zone && Zone.inited) {\n    Zone.collectAllStacks = Kadira.options.collectAllStacks;\n  }\n}","map":{"version":3,"sources":["packages/montiapm:agent/lib/client/kadira.js"],"names":["_objectSpread","module","link","default","v","getErrorParameters","Kadira","enableErrorTracking","options","disableErrorTracking","trackError","message","subType","stack","arguments","now","Date","getTime","errors","sendError","appId","name","startTime","type","info","getBrowserInfo","stacks","JSON","stringify","at","events","syncedDate","Ntp","ErrorModel","waitForNtpSyncInterval","intervalInMillis","maxErrorsPerInterval","Meteor","isCordova","SettingsCollection","Collection","find","observe","added","initialize","__meteor_runtime_config__","kadira","initialized","errorDumpInterval","collectAllStacks","endpoint","setEndpoint","connected","startup","setTimeout","sync","clientEngineSyncDelay","window","Zone","inited"],"mappings":"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","sourcesContent":["import { getErrorParameters  } from \"../common/utils\";\n\nKadira.enableErrorTracking = function () {\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function () {\n  if (!Kadira.options.enableErrorTracking) {\n    return;\n  }\n  \n  const { message, subType, stack } = getErrorParameters(arguments);\n\n  if (message) {\n    var now = (new Date()).getTime();\n\n    Kadira.errors.sendError({\n      appId: Kadira.options.appId,\n      name: message,\n      startTime: now,\n      type: 'client',\n      subType: subType || 'Monti.trackError',\n      info: getBrowserInfo(),\n      stacks: JSON.stringify([{ at: now, events: [], stack }]),\n    });\n  }\n};\n\n// Create new NTP object and error model immediately so it can be used\n// endpoints is set later using __meteor_runtime_config__ or publication\nKadira.syncedDate = new Ntp(null);\nKadira.errors = new ErrorModel({\n  waitForNtpSyncInterval: 1000 * 5, // 5 secs\n  intervalInMillis: 1000 * 60 * 1, // 1minutes\n  maxErrorsPerInterval: 5\n});\n\n// __meteor_runtime_config__ cannot be dynamically set for cordova apps\n// using a null subscription to send required options to client\nif (Meteor.isCordova) {\n  var SettingsCollection = new Meteor.Collection('kadira_settings');\n  SettingsCollection.find().observe({ added: initialize });\n} else {\n  initialize(__meteor_runtime_config__.kadira);\n}\n\nvar initialized = false;\nfunction initialize(options = {}) {\n  if (initialized) { return }\n  initialized = true;\n\n  Kadira.options = {\n    errorDumpInterval: 1000 * 60,\n    maxErrorsPerInterval: 10,\n    collectAllStacks: false,\n    enableErrorTracking: false,\n    ...options,\n  };\n\n  if (Kadira.options.appId && Kadira.options.endpoint) {\n    // update endpoint after receiving correct data\n    Kadira.syncedDate.setEndpoint(Kadira.options.endpoint);\n    Kadira.connected = true;\n    Meteor.startup(function () {\n      // if we don't do this this might block the initial rendering\n      // or, it will show up bottom of the page, which is not cool\n      setTimeout(function () {\n        Kadira.syncedDate.sync();\n      }, Kadira.options.clientEngineSyncDelay);\n    });\n  }\n\n  if (Kadira.connected && Kadira.options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  }\n\n  if (window.Zone && Zone.inited) {\n    Zone.collectAllStacks = Kadira.options.collectAllStacks;\n  }\n}\n"]},"sourceType":"module","externalDependencies":{},"hash":"91283bcda909de80fa848690bbfc73186a1c0ea3"}
