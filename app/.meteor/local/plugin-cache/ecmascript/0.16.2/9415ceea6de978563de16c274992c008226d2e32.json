{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\imports\\ui\\pages\\AddStuff.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/pages/AddStuff.jsx","filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\imports\\ui\\pages\\AddStuff.jsx","inputSourceMap":{"version":3,"sources":["imports/ui/pages/AddStuff.jsx"],"names":["React","Card","Col","Container","Row","AutoForm","ErrorsField","NumField","SelectField","SubmitField","TextField","swal","Meteor","SimpleSchema2Bridge","SimpleSchema","Stuffs","formSchema","name","String","quantity","Number","condition","type","allowedValues","defaultValue","bridge","AddStuff","submit","data","formRef","owner","user","username","collection","insert","error","message","reset","fRef","ref"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { AutoForm, ErrorsField, NumField, SelectField, SubmitField, TextField } from 'uniforms-bootstrap5';\r\nimport swal from 'sweetalert';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport SimpleSchema2Bridge from 'uniforms-bridge-simple-schema-2';\r\nimport SimpleSchema from 'simpl-schema';\r\nimport { Stuffs } from '../../api/stuff/Stuff';\r\n\r\n// Create a schema to specify the structure of the data to appear in the form.\r\nconst formSchema = new SimpleSchema({\r\n  name: String,\r\n  quantity: Number,\r\n  condition: {\r\n    type: String,\r\n    allowedValues: ['excellent', 'good', 'fair', 'poor'],\r\n    defaultValue: 'good',\r\n  },\r\n});\r\n\r\nconst bridge = new SimpleSchema2Bridge(formSchema);\r\n\r\n/* Renders the AddStuff page for adding a document. */\r\nconst AddStuff = () => {\r\n\r\n  // On submit, insert the data.\r\n  const submit = (data, formRef) => {\r\n    const { name, quantity, condition } = data;\r\n    const owner = Meteor.user().username;\r\n    Stuffs.collection.insert(\r\n      { name, quantity, condition, owner },\r\n      (error) => {\r\n        if (error) {\r\n          swal('Error', error.message, 'error');\r\n        } else {\r\n          swal('Success', 'Item added successfully', 'success');\r\n          formRef.reset();\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  // Render the form. Use Uniforms: https://github.com/vazco/uniforms\r\n  let fRef = null;\r\n  return (\r\n    <Container className=\"py-3\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs={5}>\r\n          <Col className=\"text-center\"><h2>Add Stuff</h2></Col>\r\n          <AutoForm ref={ref => { fRef = ref; }} schema={bridge} onSubmit={data => submit(data, fRef)}>\r\n            <Card>\r\n              <Card.Body>\r\n                <TextField name=\"name\" />\r\n                <NumField name=\"quantity\" decimal={null} />\r\n                <SelectField name=\"condition\" />\r\n                <SubmitField value=\"Submit\" />\r\n                <ErrorsField />\r\n              </Card.Body>\r\n            </Card>\r\n          </AutoForm>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddStuff;\r\n"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","root":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\imports\\ui\\pages\\AddStuff.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/pages/AddStuff.jsx"}},"code":"!function (module1) {\n  let React;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    }\n\n  }, 0);\n  let Card, Col, Container, Row;\n  module1.link(\"react-bootstrap\", {\n    Card(v) {\n      Card = v;\n    },\n\n    Col(v) {\n      Col = v;\n    },\n\n    Container(v) {\n      Container = v;\n    },\n\n    Row(v) {\n      Row = v;\n    }\n\n  }, 1);\n  let AutoForm, ErrorsField, NumField, SelectField, SubmitField, TextField;\n  module1.link(\"uniforms-bootstrap5\", {\n    AutoForm(v) {\n      AutoForm = v;\n    },\n\n    ErrorsField(v) {\n      ErrorsField = v;\n    },\n\n    NumField(v) {\n      NumField = v;\n    },\n\n    SelectField(v) {\n      SelectField = v;\n    },\n\n    SubmitField(v) {\n      SubmitField = v;\n    },\n\n    TextField(v) {\n      TextField = v;\n    }\n\n  }, 2);\n  let swal;\n  module1.link(\"sweetalert\", {\n    default(v) {\n      swal = v;\n    }\n\n  }, 3);\n  let Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor(v) {\n      Meteor = v;\n    }\n\n  }, 4);\n  let SimpleSchema2Bridge;\n  module1.link(\"uniforms-bridge-simple-schema-2\", {\n    default(v) {\n      SimpleSchema2Bridge = v;\n    }\n\n  }, 5);\n  let SimpleSchema;\n  module1.link(\"simpl-schema\", {\n    default(v) {\n      SimpleSchema = v;\n    }\n\n  }, 6);\n  let Stuffs;\n  module1.link(\"../../api/stuff/Stuff\", {\n    Stuffs(v) {\n      Stuffs = v;\n    }\n\n  }, 7);\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n\n  // Create a schema to specify the structure of the data to appear in the form.\n  const formSchema = new SimpleSchema({\n    name: String,\n    quantity: Number,\n    condition: {\n      type: String,\n      allowedValues: ['excellent', 'good', 'fair', 'poor'],\n      defaultValue: 'good'\n    }\n  });\n  const bridge = new SimpleSchema2Bridge(formSchema);\n  /* Renders the AddStuff page for adding a document. */\n\n  const AddStuff = () => {\n    // On submit, insert the data.\n    const submit = (data, formRef) => {\n      const {\n        name,\n        quantity,\n        condition\n      } = data;\n      const owner = Meteor.user().username;\n      Stuffs.collection.insert({\n        name,\n        quantity,\n        condition,\n        owner\n      }, error => {\n        if (error) {\n          swal('Error', error.message, 'error');\n        } else {\n          swal('Success', 'Item added successfully', 'success');\n          formRef.reset();\n        }\n      });\n    }; // Render the form. Use Uniforms: https://github.com/vazco/uniforms\n\n\n    let fRef = null;\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"py-3\"\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\"\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 5\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center\"\n    }, /*#__PURE__*/React.createElement(\"h2\", null, \"Add Stuff\")), /*#__PURE__*/React.createElement(AutoForm, {\n      ref: ref => {\n        fRef = ref;\n      },\n      schema: bridge,\n      onSubmit: data => submit(data, fRef)\n    }, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Card.Body, null, /*#__PURE__*/React.createElement(TextField, {\n      name: \"name\"\n    }), /*#__PURE__*/React.createElement(NumField, {\n      name: \"quantity\",\n      decimal: null\n    }), /*#__PURE__*/React.createElement(SelectField, {\n      name: \"condition\"\n    }), /*#__PURE__*/React.createElement(SubmitField, {\n      value: \"Submit\"\n    }), /*#__PURE__*/React.createElement(ErrorsField, null)))))));\n  };\n\n  _c = AddStuff;\n  module1.exportDefault(AddStuff);\n\n  var _c;\n\n  $RefreshReg$(_c, \"AddStuff\");\n}.call(this, module);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AACA,QAAMA,UAAU,GAAG,IAAIC,YAAJ,CAAiB;AAClCC,QAAI,EAAEC,MAD4B;AAElCC,YAAQ,EAAEC,MAFwB;AAGlCC,aAAS,EAAE;AACTC,UAAI,EAAEJ,MADG;AAETK,mBAAa,EAAE,CAAC,WAAD,EAAc,MAAd,EAAsB,MAAtB,EAA8B,MAA9B,CAFN;AAGTC,kBAAY,EAAE;AAHL;AAHuB,GAAjB,CAAnB;AAUA,QAAMC,MAAM,GAAG,IAAIC,mBAAJ,CAAwBX,UAAxB,CAAf;AAEA;;AACA,QAAMY,QAAQ,GAAG,MAAM;AAErB;AACA,UAAMC,MAAM,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAChC,YAAM;AAAEb,YAAF;AAAQE,gBAAR;AAAkBE;AAAlB,UAAgCQ,IAAtC;AACA,YAAME,KAAK,GAAGC,MAAM,CAACC,IAAPD,GAAcE,QAA5B;AACAC,YAAM,CAACC,UAAPD,CAAkBE,MAAlBF,CACE;AAAElB,YAAF;AAAQE,gBAAR;AAAkBE,iBAAlB;AAA6BU;AAA7B,OADFI,EAEGG,KAAD,IAAW;AACT,YAAIA,KAAJ,EAAW;AACTC,cAAI,CAAC,OAAD,EAAUD,KAAK,CAACE,OAAhB,EAAyB,OAAzB,CAAJD;AADF,eAEO;AACLA,cAAI,CAAC,SAAD,EAAY,yBAAZ,EAAuC,SAAvC,CAAJA;AACAT,iBAAO,CAACW,KAARX;AACD;AARL;AAHF,MAHqB,CAmBrB;;;AACA,QAAIY,IAAI,GAAG,IAAX;AACA,wBACE,oBAAC,SAAD;AAAW,iBAAU;AAArB,oBACE,oBAAC,GAAD;AAAK,iBAAU;AAAf,oBACE,oBAAC,GAAD;AAAK,UAAI;AAAT,oBACE,oBAAC,GAAD;AAAK,iBAAU;AAAf,oBAA6B,4CAA7B,CADF,eAEE,oBAAC,QAAD;AAAU,WAAKC,GAAG,IAAI;AAAED,YAAI,GAAGC,GAAPD;AAAV,OAAd;AAAuC,cAAQjB,MAA/C;AAAuD,gBAAUI,IAAI,IAAID,MAAM,CAACC,IAAD,EAAOa,IAAP;AAA/E,oBACE,oBAAC,IAAD,qBACE,oBAAC,IAAD,CAAM,IAAN,qBACE,oBAAC,SAAD;AAAW,YAAK;AAAhB,MADF,eAEE,oBAAC,QAAD;AAAU,YAAK,UAAf;AAA0B,eAAS;AAAnC,MAFF,eAGE,oBAAC,WAAD;AAAa,YAAK;AAAlB,MAHF,eAIE,oBAAC,WAAD;AAAa,aAAM;AAAnB,MAJF,eAKE,oBAAC,WAAD,OALF,CADF,CADF,CAFF,CADF,CADF,CADF;AArBF;;OAAMf;wBA2CSA","names":["formSchema","SimpleSchema","name","String","quantity","Number","condition","type","allowedValues","defaultValue","bridge","SimpleSchema2Bridge","AddStuff","submit","data","formRef","owner","Meteor","user","username","Stuffs","collection","insert","error","swal","message","reset","fRef","ref"],"sources":["imports/ui/pages/AddStuff.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { AutoForm, ErrorsField, NumField, SelectField, SubmitField, TextField } from 'uniforms-bootstrap5';\r\nimport swal from 'sweetalert';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport SimpleSchema2Bridge from 'uniforms-bridge-simple-schema-2';\r\nimport SimpleSchema from 'simpl-schema';\r\nimport { Stuffs } from '../../api/stuff/Stuff';\r\n\r\n// Create a schema to specify the structure of the data to appear in the form.\r\nconst formSchema = new SimpleSchema({\r\n  name: String,\r\n  quantity: Number,\r\n  condition: {\r\n    type: String,\r\n    allowedValues: ['excellent', 'good', 'fair', 'poor'],\r\n    defaultValue: 'good',\r\n  },\r\n});\r\n\r\nconst bridge = new SimpleSchema2Bridge(formSchema);\r\n\r\n/* Renders the AddStuff page for adding a document. */\r\nconst AddStuff = () => {\r\n\r\n  // On submit, insert the data.\r\n  const submit = (data, formRef) => {\r\n    const { name, quantity, condition } = data;\r\n    const owner = Meteor.user().username;\r\n    Stuffs.collection.insert(\r\n      { name, quantity, condition, owner },\r\n      (error) => {\r\n        if (error) {\r\n          swal('Error', error.message, 'error');\r\n        } else {\r\n          swal('Success', 'Item added successfully', 'success');\r\n          formRef.reset();\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  // Render the form. Use Uniforms: https://github.com/vazco/uniforms\r\n  let fRef = null;\r\n  return (\r\n    <Container className=\"py-3\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs={5}>\r\n          <Col className=\"text-center\"><h2>Add Stuff</h2></Col>\r\n          <AutoForm ref={ref => { fRef = ref; }} schema={bridge} onSubmit={data => submit(data, fRef)}>\r\n            <Card>\r\n              <Card.Body>\r\n                <TextField name=\"name\" />\r\n                <NumField name=\"quantity\" decimal={null} />\r\n                <SelectField name=\"condition\" />\r\n                <SubmitField value=\"Submit\" />\r\n                <ErrorsField />\r\n              </Card.Body>\r\n            </Card>\r\n          </AutoForm>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddStuff;\r\n"]},"sourceType":"module","externalDependencies":{},"hash":"9415ceea6de978563de16c274992c008226d2e32"}
