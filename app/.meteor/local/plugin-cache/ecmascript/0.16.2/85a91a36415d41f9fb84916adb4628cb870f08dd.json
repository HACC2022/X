{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\kadira.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/kadira.js","filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\kadira.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","root":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\kadira.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/kadira.js"}},"code":"let HttpModel;\nmodule.link(\"./models/http\", {\n  default(v) {\n    HttpModel = v;\n  }\n\n}, 0);\nlet packageMap;\nmodule.link(\"./.meteor-package-versions\", {\n  default(v) {\n    packageMap = v;\n  }\n\n}, 1);\nlet getErrorParameters;\nmodule.link(\"./common/utils\", {\n  getErrorParameters(v) {\n    getErrorParameters = v;\n  }\n\n}, 2);\nlet WaitTimeBuilder;\nmodule.link(\"./wait_time_builder\", {\n  WaitTimeBuilder(v) {\n    WaitTimeBuilder = v;\n  }\n\n}, 3);\n\nvar hostname = Npm.require('os').hostname();\n\nvar logger = Npm.require('debug')('kadira:apm');\n\nvar Fibers = Npm.require('fibers');\n\nvar KadiraCore = Npm.require('monti-apm-core').Kadira;\n\nKadira.models = {};\nKadira.options = {};\nKadira.env = {\n  currentSub: null,\n  // keep current subscription inside ddp\n  kadiraInfo: new Meteor.EnvironmentVariable()\n};\nKadira.waitTimeBuilder = new WaitTimeBuilder();\nKadira.errors = [];\nKadira.errors.addFilter = Kadira.errors.push.bind(Kadira.errors);\nKadira.models.methods = new MethodsModel();\nKadira.models.pubsub = new PubsubModel();\nKadira.models.system = new SystemModel();\nKadira.models.http = new HttpModel();\nKadira.docSzCache = new DocSzCache(100000, 10);\nKadira.syncedDate = new Ntp(); // If the agent is not connected, we still want to build the payload occasionally\n// since building the payload does some cleanup to prevent memory leaks\n// Once connected, this interval is cleared\n\nlet buildInterval = Meteor.setInterval(() => {\n  Kadira._buildPayload();\n}, 1000 * 60);\n\nKadira.connect = function (appId, appSecret, options) {\n  options = options || {};\n  options.appId = appId;\n  options.appSecret = appSecret;\n  options.payloadTimeout = options.payloadTimeout || 1000 * 20;\n  options.endpoint = options.endpoint || \"https://engine.montiapm.com\";\n  options.clientEngineSyncDelay = options.clientEngineSyncDelay || 10000;\n  options.thresholds = options.thresholds || {};\n  options.isHostNameSet = !!options.hostname;\n  options.hostname = options.hostname || hostname;\n  options.proxy = options.proxy || null;\n  options.recordIPAddress = options.recordIPAddress || 'full';\n  options.eventStackTrace = options.eventStackTrace || false;\n\n  if (options.documentSizeCacheSize) {\n    Kadira.docSzCache = new DocSzCache(options.documentSizeCacheSize, 10);\n  } // remove trailing slash from endpoint url (if any)\n\n\n  if (_.last(options.endpoint) === '/') {\n    options.endpoint = options.endpoint.substr(0, options.endpoint.length - 1);\n  } // error tracking is enabled by default\n\n\n  if (options.enableErrorTracking === undefined) {\n    options.enableErrorTracking = true;\n  } // uploading sourcemaps is enabled by default in production\n\n\n  if (options.uploadSourceMaps === undefined && Meteor.isProduction) {\n    options.uploadSourceMaps = true;\n  }\n\n  Kadira.options = options;\n  Kadira.options.authHeaders = {\n    'KADIRA-APP-ID': Kadira.options.appId,\n    'KADIRA-APP-SECRET': Kadira.options.appSecret\n  };\n\n  if (appId && appSecret) {\n    options.appId = options.appId.trim();\n    options.appSecret = options.appSecret.trim();\n    Kadira.coreApi = new KadiraCore({\n      appId: options.appId,\n      appSecret: options.appSecret,\n      endpoint: options.endpoint,\n      hostname: options.hostname,\n      agentVersion: packageMap['montiapm:agent'] || '<unknown>'\n    });\n\n    Kadira.coreApi._checkAuth().then(function () {\n      logger('connected to app: ', appId);\n      console.log('Monti APM: Successfully connected');\n\n      Kadira._sendAppStats();\n\n      Kadira._schedulePayloadSend();\n    }).catch(function (err) {\n      if (err.message === \"Unauthorized\") {\n        console.log('Monti APM: authentication failed - check your appId & appSecret');\n      } else {\n        console.log('Monti APM: unable to connect. ' + err.message);\n      }\n    });\n  } else {\n    throw new Error('Monti APM: required appId and appSecret');\n  }\n\n  Kadira.syncedDate = new Ntp(options.endpoint);\n  Kadira.syncedDate.sync();\n  Kadira.models.error = new ErrorModel(appId); // handle pre-added filters\n\n  var addFilterFn = Kadira.models.error.addFilter.bind(Kadira.models.error);\n  Kadira.errors.forEach(addFilterFn);\n  Kadira.errors = Kadira.models.error; // setting runtime info, which will be sent to kadira\n\n  __meteor_runtime_config__.kadira = {\n    appId: appId,\n    endpoint: options.endpoint,\n    clientEngineSyncDelay: options.clientEngineSyncDelay,\n    recordIPAddress: options.recordIPAddress\n  };\n\n  if (options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  } else {\n    Kadira.disableErrorTracking();\n  } // start tracking errors\n\n\n  Meteor.startup(function () {\n    TrackUncaughtExceptions();\n    TrackUnhandledRejections();\n    TrackMeteorDebug();\n  });\n  Meteor.publish(null, function () {\n    var options = __meteor_runtime_config__.kadira;\n    this.added('kadira_settings', Random.id(), options);\n    this.ready();\n  }); // notify we've connected\n\n  Kadira.connected = true;\n}; //track how many times we've sent the data (once per minute)\n\n\nKadira._buildPayload = function () {\n  var payload = {\n    host: Kadira.options.hostname,\n    clientVersions: getClientVersions()\n  };\n\n  var buildDetailedInfo = Kadira._isDetailedInfo();\n\n  _.extend(payload, Kadira.models.methods.buildPayload(buildDetailedInfo));\n\n  _.extend(payload, Kadira.models.pubsub.buildPayload(buildDetailedInfo));\n\n  _.extend(payload, Kadira.models.system.buildPayload());\n\n  _.extend(payload, Kadira.models.http.buildPayload());\n\n  if (Kadira.options.enableErrorTracking) {\n    _.extend(payload, Kadira.models.error.buildPayload());\n  }\n\n  return payload;\n};\n\nKadira._countDataSent = 0;\nKadira._detailInfoSentInterval = Math.ceil(1000 * 60 / Kadira.options.payloadTimeout);\n\nKadira._isDetailedInfo = function () {\n  return Kadira._countDataSent++ % Kadira._detailInfoSentInterval == 0;\n};\n\nKadira._sendAppStats = function () {\n  var appStats = {};\n  appStats.release = Meteor.release;\n  appStats.protocolVersion = '1.0.0';\n  appStats.packageVersions = [];\n  appStats.clientVersions = getClientVersions();\n\n  _.each(Package, function (v, name) {\n    appStats.packageVersions.push({\n      name: name,\n      version: packageMap[name] || null\n    });\n  });\n\n  Kadira.coreApi.sendData({\n    startTime: new Date(),\n    appStats: appStats\n  }).then(function (body) {\n    handleApiResponse(body);\n  }).catch(function (err) {\n    console.error('Monti APM Error on sending appStats:', err.message);\n  });\n};\n\nKadira._schedulePayloadSend = function () {\n  clearInterval(buildInterval);\n  setTimeout(function () {\n    Kadira._schedulePayloadSend();\n\n    Kadira._sendPayload();\n  }, Kadira.options.payloadTimeout);\n};\n\nKadira._sendPayload = function () {\n  new Fibers(function () {\n    var payload = Kadira._buildPayload();\n\n    Kadira.coreApi.sendData(payload).then(function (body) {\n      handleApiResponse(body);\n    }).catch(function (err) {\n      console.log('Monti APM Error:', err.message);\n    });\n  }).run();\n}; // this return the __kadiraInfo from the current Fiber by default\n// if called with 2nd argument as true, it will get the kadira info from\n// Meteor.EnvironmentVariable\n//\n// WARNNING: returned info object is the reference object.\n//  Changing it might cause issues when building traces. So use with care\n\n\nKadira._getInfo = function (currentFiber, useEnvironmentVariable) {\n  currentFiber = currentFiber || Fibers.current;\n\n  if (currentFiber) {\n    if (useEnvironmentVariable) {\n      return Kadira.env.kadiraInfo.get();\n    }\n\n    return currentFiber.__kadiraInfo;\n  }\n}; // this does not clone the info object. So, use with care\n\n\nKadira._setInfo = function (info) {\n  Fibers.current.__kadiraInfo = info;\n};\n\nKadira.startContinuousProfiling = function () {\n  MontiProfiler.startContinuous(function onProfile(_ref) {\n    let {\n      profile,\n      startTime,\n      endTime\n    } = _ref;\n\n    if (!Kadira.connected) {\n      return;\n    }\n\n    Kadira.coreApi.sendData({\n      profiles: [{\n        profile,\n        startTime,\n        endTime\n      }]\n    }).catch(e => console.log('Monti: err sending cpu profile', e));\n  });\n};\n\nKadira.enableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = true;\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = false;\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function () {\n  if (!Kadira.options.enableErrorTracking) {\n    return;\n  }\n\n  const {\n    message,\n    subType,\n    stack,\n    type\n  } = getErrorParameters(arguments);\n\n  if (message) {\n    var trace = {\n      type: type || 'server-internal',\n      subType: subType || 'server',\n      name: message,\n      errored: true,\n      at: Kadira.syncedDate.getTime(),\n      events: [['start', 0, {}], ['error', 0, {\n        error: {\n          message,\n          stack\n        }\n      }]],\n      metrics: {\n        total: 0\n      }\n    };\n    Kadira.models.error.trackError({\n      message,\n      stack\n    }, trace);\n  }\n};\n\nKadira.ignoreErrorTracking = function (err) {\n  err._skipKadira = true;\n};\n\nKadira.startEvent = function (name) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var kadiraInfo = Kadira._getInfo();\n\n  if (kadiraInfo) {\n    return Kadira.tracer.event(kadiraInfo.trace, 'custom', data, {\n      name\n    });\n  }\n\n  return false;\n};\n\nKadira.endEvent = function (event, data) {\n  var kadiraInfo = Kadira._getInfo(); // The event could be false if it could not be started.\n  // Handle it here instead of requiring the app to.\n\n\n  if (kadiraInfo && event) {\n    Kadira.tracer.eventEnd(kadiraInfo.trace, event, data);\n  }\n};","map":{"version":3,"sources":["packages/montiapm:agent/lib/kadira.js"],"names":["HttpModel","module","link","default","v","packageMap","getErrorParameters","WaitTimeBuilder","hostname","Npm","require","logger","Fibers","KadiraCore","Kadira","models","options","env","currentSub","kadiraInfo","Meteor","EnvironmentVariable","waitTimeBuilder","errors","addFilter","push","bind","methods","MethodsModel","pubsub","PubsubModel","system","SystemModel","http","docSzCache","DocSzCache","syncedDate","Ntp","buildInterval","setInterval","_buildPayload","connect","appId","appSecret","payloadTimeout","endpoint","clientEngineSyncDelay","thresholds","isHostNameSet","proxy","recordIPAddress","eventStackTrace","documentSizeCacheSize","_","last","substr","length","enableErrorTracking","undefined","uploadSourceMaps","isProduction","authHeaders","trim","coreApi","agentVersion","_checkAuth","then","console","log","_sendAppStats","_schedulePayloadSend","catch","err","message","Error","sync","error","ErrorModel","addFilterFn","forEach","__meteor_runtime_config__","kadira","disableErrorTracking","startup","TrackUncaughtExceptions","TrackUnhandledRejections","TrackMeteorDebug","publish","added","Random","id","ready","connected","payload","host","clientVersions","getClientVersions","buildDetailedInfo","_isDetailedInfo","extend","buildPayload","_countDataSent","_detailInfoSentInterval","Math","ceil","appStats","release","protocolVersion","packageVersions","each","Package","name","version","sendData","startTime","Date","body","handleApiResponse","clearInterval","setTimeout","_sendPayload","run","_getInfo","currentFiber","useEnvironmentVariable","current","get","__kadiraInfo","_setInfo","info","startContinuousProfiling","MontiProfiler","startContinuous","onProfile","profile","endTime","profiles","e","trackError","subType","stack","type","arguments","trace","errored","at","getTime","events","metrics","total","ignoreErrorTracking","_skipKadira","startEvent","data","tracer","event","endEvent","eventEnd"],"mappings":"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","sourcesContent":["import HttpModel from \"./models/http\";\nimport packageMap from './.meteor-package-versions';\nimport { getErrorParameters  } from \"./common/utils\";\nimport { WaitTimeBuilder } from \"./wait_time_builder\";\n\nvar hostname = Npm.require('os').hostname();\nvar logger = Npm.require('debug')('kadira:apm');\nvar Fibers = Npm.require('fibers');\n\nvar KadiraCore = Npm.require('monti-apm-core').Kadira;\n\nKadira.models = {};\nKadira.options = {};\nKadira.env = {\n  currentSub: null, // keep current subscription inside ddp\n  kadiraInfo: new Meteor.EnvironmentVariable(),\n};\nKadira.waitTimeBuilder = new WaitTimeBuilder();\nKadira.errors = [];\nKadira.errors.addFilter = Kadira.errors.push.bind(Kadira.errors);\n\nKadira.models.methods = new MethodsModel();\nKadira.models.pubsub = new PubsubModel();\nKadira.models.system = new SystemModel();\nKadira.models.http = new HttpModel();\nKadira.docSzCache = new DocSzCache(100000, 10);\nKadira.syncedDate = new Ntp();\n\n// If the agent is not connected, we still want to build the payload occasionally\n// since building the payload does some cleanup to prevent memory leaks\n// Once connected, this interval is cleared\nlet buildInterval = Meteor.setInterval(() => {\n  Kadira._buildPayload();\n}, 1000 * 60);\n\n\nKadira.connect = function(appId, appSecret, options) {\n  options = options || {};\n  options.appId = appId;\n  options.appSecret = appSecret;\n  options.payloadTimeout = options.payloadTimeout || 1000 * 20;\n  options.endpoint = options.endpoint || \"https://engine.montiapm.com\";\n  options.clientEngineSyncDelay = options.clientEngineSyncDelay || 10000;\n  options.thresholds = options.thresholds || {};\n  options.isHostNameSet = !!options.hostname;\n  options.hostname = options.hostname || hostname;\n  options.proxy = options.proxy || null;\n  options.recordIPAddress = options.recordIPAddress || 'full';\n  options.eventStackTrace = options.eventStackTrace || false;\n\n  if(options.documentSizeCacheSize) {\n    Kadira.docSzCache = new DocSzCache(options.documentSizeCacheSize, 10);\n  }\n\n  // remove trailing slash from endpoint url (if any)\n  if(_.last(options.endpoint) === '/') {\n    options.endpoint = options.endpoint.substr(0, options.endpoint.length - 1);\n  }\n\n  // error tracking is enabled by default\n  if(options.enableErrorTracking === undefined) {\n    options.enableErrorTracking = true;\n  }\n\n  // uploading sourcemaps is enabled by default in production\n  if (options.uploadSourceMaps === undefined && Meteor.isProduction) {\n    options.uploadSourceMaps = true;\n  }\n\n  Kadira.options = options;\n  Kadira.options.authHeaders = {\n    'KADIRA-APP-ID': Kadira.options.appId,\n    'KADIRA-APP-SECRET': Kadira.options.appSecret\n  };\n\n  if (appId && appSecret) {\n    options.appId = options.appId.trim();\n    options.appSecret = options.appSecret.trim();\n\n    Kadira.coreApi = new KadiraCore({\n      appId: options.appId,\n      appSecret: options.appSecret,\n      endpoint: options.endpoint,\n      hostname: options.hostname,\n      agentVersion: packageMap['montiapm:agent'] || '<unknown>'\n    });\n\n    Kadira.coreApi._checkAuth()\n      .then(function () {\n        logger('connected to app: ', appId);\n        console.log('Monti APM: Successfully connected');\n        Kadira._sendAppStats();\n        Kadira._schedulePayloadSend();\n      })\n      .catch(function (err) {\n        if (err.message === \"Unauthorized\") {\n          console.log('Monti APM: authentication failed - check your appId & appSecret')\n        } else {\n          console.log('Monti APM: unable to connect. ' + err.message);\n        }\n      });\n  } else {\n    throw new Error('Monti APM: required appId and appSecret');\n  }\n\n  Kadira.syncedDate = new Ntp(options.endpoint);\n  Kadira.syncedDate.sync();\n  Kadira.models.error = new ErrorModel(appId);\n\n  // handle pre-added filters\n  var addFilterFn = Kadira.models.error.addFilter.bind(Kadira.models.error);\n  Kadira.errors.forEach(addFilterFn);\n  Kadira.errors = Kadira.models.error;\n\n  // setting runtime info, which will be sent to kadira\n  __meteor_runtime_config__.kadira = {\n    appId: appId,\n    endpoint: options.endpoint,\n    clientEngineSyncDelay: options.clientEngineSyncDelay,\n    recordIPAddress: options.recordIPAddress,\n  };\n\n  if(options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  } else {\n    Kadira.disableErrorTracking();\n  }\n\n  // start tracking errors\n  Meteor.startup(function () {\n    TrackUncaughtExceptions();\n    TrackUnhandledRejections();\n    TrackMeteorDebug();\n  })\n\n  Meteor.publish(null, function () {\n    var options = __meteor_runtime_config__.kadira;\n    this.added('kadira_settings', Random.id(), options);\n    this.ready();\n  });\n\n  // notify we've connected\n  Kadira.connected = true;\n};\n\n//track how many times we've sent the data (once per minute)\nKadira._buildPayload = function () {\n  var payload = {host: Kadira.options.hostname, clientVersions: getClientVersions()};\n  var buildDetailedInfo = Kadira._isDetailedInfo();\n  _.extend(payload, Kadira.models.methods.buildPayload(buildDetailedInfo));\n  _.extend(payload, Kadira.models.pubsub.buildPayload(buildDetailedInfo));\n  _.extend(payload, Kadira.models.system.buildPayload());\n  _.extend(payload, Kadira.models.http.buildPayload());\n\n  if(Kadira.options.enableErrorTracking) {\n    _.extend(payload, Kadira.models.error.buildPayload());\n  }\n\n  return payload;\n}\n\nKadira._countDataSent = 0;\nKadira._detailInfoSentInterval = Math.ceil((1000*60) / Kadira.options.payloadTimeout);\nKadira._isDetailedInfo = function () {\n  return (Kadira._countDataSent++ % Kadira._detailInfoSentInterval) == 0;\n}\n\nKadira._sendAppStats = function () {\n  var appStats = {};\n  appStats.release = Meteor.release;\n  appStats.protocolVersion = '1.0.0';\n  appStats.packageVersions = [];\n  appStats.clientVersions = getClientVersions();\n\n  _.each(Package, function (v, name) {\n    appStats.packageVersions.push({\n      name: name,\n      version: packageMap[name] || null\n    });\n  });\n\n  Kadira.coreApi.sendData({\n    startTime: new Date(),\n    appStats: appStats\n  }).then(function(body) {\n    handleApiResponse(body);\n  }).catch(function(err) {\n    console.error('Monti APM Error on sending appStats:', err.message);\n  });\n}\n\nKadira._schedulePayloadSend = function () {\n  clearInterval(buildInterval);\n\n  setTimeout(function () {\n    Kadira._schedulePayloadSend();\n    Kadira._sendPayload();\n  }, Kadira.options.payloadTimeout);\n}\n\nKadira._sendPayload = function () {\n  new Fibers(function() {\n    var payload = Kadira._buildPayload();\n    Kadira.coreApi.sendData(payload)\n      .then(function (body) {\n        handleApiResponse(body);\n      })\n    .catch(function(err) {\n        console.log('Monti APM Error:', err.message);\n      });\n  }).run();\n}\n\n// this return the __kadiraInfo from the current Fiber by default\n// if called with 2nd argument as true, it will get the kadira info from\n// Meteor.EnvironmentVariable\n//\n// WARNNING: returned info object is the reference object.\n//  Changing it might cause issues when building traces. So use with care\nKadira._getInfo = function(currentFiber, useEnvironmentVariable) {\n  currentFiber = currentFiber || Fibers.current;\n  if(currentFiber) {\n    if(useEnvironmentVariable) {\n      return Kadira.env.kadiraInfo.get();\n    }\n    return currentFiber.__kadiraInfo;\n  }\n};\n\n// this does not clone the info object. So, use with care\nKadira._setInfo = function(info) {\n  Fibers.current.__kadiraInfo = info;\n};\n\nKadira.startContinuousProfiling = function () {\n  MontiProfiler.startContinuous(function onProfile({ profile, startTime, endTime }) {\n    if (!Kadira.connected) {\n      return;\n    }\n\n    Kadira.coreApi.sendData({ profiles: [{profile, startTime, endTime }]})\n      .catch(e => console.log('Monti: err sending cpu profile', e));\n  });\n}\n\nKadira.enableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = true;\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = false;\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function () {\n  if (!Kadira.options.enableErrorTracking) {\n    return;\n  }\n\n  const { message, subType, stack, type } = getErrorParameters(arguments);\n\n  if (message) {\n    var trace = {\n      type: type || 'server-internal',\n      subType: subType || 'server',\n      name: message,\n      errored: true,\n      at: Kadira.syncedDate.getTime(),\n      events: [['start', 0, {}], ['error', 0, { error: { message, stack } }]],\n      metrics: { total: 0 }\n    };\n\n    Kadira.models.error.trackError({ message, stack }, trace);\n  }\n}\n\nKadira.ignoreErrorTracking = function (err) {\n  err._skipKadira = true;\n}\n\nKadira.startEvent = function (name, data = {}) {\n  var kadiraInfo = Kadira._getInfo();\n  if(kadiraInfo) {\n    return Kadira.tracer.event(kadiraInfo.trace, 'custom', data, { name });\n  }\n\n  return false\n}\n\nKadira.endEvent = function (event, data) {\n  var kadiraInfo = Kadira._getInfo();\n\n  // The event could be false if it could not be started.\n  // Handle it here instead of requiring the app to.\n  if (kadiraInfo && event) {\n    Kadira.tracer.eventEnd(kadiraInfo.trace, event, data);\n  }\n}\n"]},"sourceType":"module","externalDependencies":{},"hash":"85a91a36415d41f9fb84916adb4628cb870f08dd"}
