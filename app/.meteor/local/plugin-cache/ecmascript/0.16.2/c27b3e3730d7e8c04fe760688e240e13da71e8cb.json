{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\node_modules\\chart.js\\dist\\chart.mjs","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"node_modules/chart.js/dist/chart.mjs","filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\node_modules\\chart.js\\dist\\chart.mjs","inputSourceMap":{"version":3,"sources":["node_modules/chart.js/dist/chart.mjs"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","_getStartAndCountOfVisiblePoints","w","_scaleRangesChanged","x","isNumber","y","_parseObjectDataRadialScale","z","log10","A","_factorize","B","finiteOrDefault","C","callback","D","_addGrace","E","_limitValue","F","toDegrees","G","_measureText","I","_int16Range","J","_alignPixel","K","toPadding","L","clipArea","M","renderText","N","unclipArea","O","toFont","Q","each","R","_toLeftRightCenter","S","_alignStartEnd","U","overrides","V","merge","W","_capitalize","X","getRelativePosition","Y","_rlookupByKey","Z","_lookupByKey","$","_isPointInArea","a0","getAngleFromPoint","a1","getMaximumSize","a2","_getParentNode","a3","readUsedSize","a4","throttled","a5","supportsEventListenerOptions","a6","_isDomSupported","a7","descriptors","a8","isFunction","a9","_attachContext","aa","_createResolver","ab","_descriptors","ac","mergeIf","ad","uid","ae","debounce","af","retinaScale","ag","clearCanvas","ah","setsEqual","ai","_elementsEqual","aj","_isClickEvent","ak","_isBetween","al","_readValueToProps","am","_updateBezierControlPoints","an","_computeSegments","ao","_boundSegments","ap","_steppedInterpolation","aq","_bezierInterpolation","ar","_pointInLine","as","_steppedLineTo","at","_bezierCurveTo","au","drawPoint","av","addRoundedRectPath","aw","toTRBL","ax","toTRBLCorners","ay","_boundSegment","az","_normalizeAngle","aA","getRtlAdapter","aB","overrideTextDirection","aC","_textX","aD","restoreTextDirection","aE","drawPointLegend","aF","noop","aG","distanceBetweenPoints","aH","_setMinAndMaxByKey","aI","niceNum","aJ","almostWhole","aK","almostEquals","aL","_decimalPlaces","aM","_longestText","aN","_filterBetween","aO","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_layers","tz","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","ScatterController","interaction","__proto__","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","getIntersectItems","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\r\n * Chart.js v3.9.1\r\n * https://www.chartjs.org\r\n * (c) 2022 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\r\nexport { d as defaults } from './chunks/helpers.segment.mjs';\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    if (this._request) {\r\n      return;\r\n    }\r\n    this._running = true;\r\n    this._request = requestAnimFrame.call(window, () => {\r\n      this._update();\r\n      this._request = null;\r\n      if (this._running) {\r\n        this._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    let remaining = 0;\r\n    this._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        this._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        this._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    this._lastDate = date;\r\n    if (remaining === 0) {\r\n      this._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    if (this._active) {\r\n      this._notify(false);\r\n      const currentValue = this._target[this._prop];\r\n      const elapsed = date - this._start;\r\n      const remain = this._duration - elapsed;\r\n      this._start = date;\r\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      this._total += elapsed;\r\n      this._loop = !!cfg.loop;\r\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      this._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    if (this._active) {\r\n      this.tick(Date.now());\r\n      this._active = false;\r\n      this._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const elapsed = date - this._start;\r\n    const duration = this._duration;\r\n    const prop = this._prop;\r\n    const from = this._from;\r\n    const loop = this._loop;\r\n    const to = this._to;\r\n    let factor;\r\n    this._active = from !== to && (loop || (elapsed < duration));\r\n    if (!this._active) {\r\n      this._target[prop] = to;\r\n      this._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      this._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n    this._target[prop] = this._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l,\r\n    disabled: value === false\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options = {}) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return createContext(parent,\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return createContext(parent, {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  const datasetIndex = meta.controller.index;\r\n  const axis = meta.vScale && meta.vScale.axis;\r\n  if (!axis) {\r\n    return;\r\n  }\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[axis][datasetIndex];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\r\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.supportsDecimation = false;\r\n    this.$context = undefined;\r\n    this._syncList = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    this.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    if (this.index !== datasetIndex) {\r\n      clearStacks(this._cachedMeta);\r\n    }\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = this.getScaleForId(xid);\r\n    meta.yScale = this.getScaleForId(yid);\r\n    meta.rScale = this.getScaleForId(rid);\r\n    meta.iScale = this.getScaleForId(iid);\r\n    meta.vScale = this.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const dataset = this.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    const _data = this._data;\r\n    if (isObject(data)) {\r\n      this._data = convertObjectDataToArray(data);\r\n    } else if (_data !== data) {\r\n      if (_data) {\r\n        unlistenArrayEvents(_data, this);\r\n        const meta = this._cachedMeta;\r\n        clearStacks(meta);\r\n        meta._parsed = [];\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, this);\r\n      }\r\n      this._syncList = [];\r\n      this._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const meta = this._cachedMeta;\r\n    this._dataCheck();\r\n    if (this.datasetElementType) {\r\n      meta.dataset = new this.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    let stackChanged = false;\r\n    this._dataCheck();\r\n    const oldStacked = meta._stacked;\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    this._resyncElements(resetNewElements);\r\n    if (stackChanged || oldStacked !== meta._stacked) {\r\n      updateStacks(this, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(this._type);\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n    this.options = config.createResolver(scopes, this.getContext());\r\n    this._parsing = this.options.parsing;\r\n    this._cachedDataOpts = {};\r\n  }\r\n  parse(start, count) {\r\n    const {_cachedMeta: meta, _data: data} = this;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = this.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = this.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = this.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(this, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const meta = this._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = this._getOtherScale(scale);\r\n    const stack = createStack(canStack, meta, this.chart);\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, parsed;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      const otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      this.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        this.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const ctx = this._ctx;\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = this._drawStart || 0;\r\n    const count = this._drawCount || (elements.length - start);\r\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.hidden) {\r\n        continue;\r\n      }\r\n      if (element.active && drawActiveElementsOnTop) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const dataset = this.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < this._cachedMeta.data.length) {\r\n      const element = this._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(this.getContext(), index, element));\r\n      context.parsed = this.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n      context.index = context.dataIndex = index;\r\n    } else {\r\n      context = this.$context ||\r\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n      context.dataset = dataset;\r\n      context.index = context.datasetIndex = this.index;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const active = mode === 'active';\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = this.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => this.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const chart = this.chart;\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = this.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  _getSharedOptions(start, mode) {\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const previouslySharedOptions = this._sharedOptions;\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    return {sharedOptions, includeOptions};\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const data = this._data;\r\n    const elements = this._cachedMeta.data;\r\n    for (const [method, arg1, arg2] of this._syncList) {\r\n      this[method](arg1, arg2);\r\n    }\r\n    this._syncList = [];\r\n    const numMeta = elements.length;\r\n    const numData = data.length;\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      this.parse(0, count);\r\n    }\r\n    if (numData > numMeta) {\r\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      this._removeElements(numData, numMeta - numData);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new this.dataElementType();\r\n    }\r\n    if (this._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    this.parse(start, count);\r\n    if (resetNewElements) {\r\n      this.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _sync(args) {\r\n    if (this._parsing) {\r\n      this._syncList.push(args);\r\n    } else {\r\n      const [method, arg1, arg2] = args;\r\n      this[method](arg1, arg2);\r\n    }\r\n    this.chart._dataChanges.push([this.index, ...args]);\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\r\n  }\r\n  _onDataPop() {\r\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\r\n  }\r\n  _onDataShift() {\r\n    this._sync(['_removeElements', 0, 1]);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    if (count) {\r\n      this._sync(['_removeElements', start, count]);\r\n    }\r\n    const newCount = arguments.length - 2;\r\n    if (newCount) {\r\n      this._sync(['_insertElements', start, newCount]);\r\n    }\r\n  }\r\n  _onDataUnshift() {\r\n    this._sync(['_insertElements', 0, arguments.length]);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n  if (!scale._cache.$bar) {\r\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n    let values = [];\r\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\r\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(meta) {\r\n  const scale = meta.iScale;\r\n  const values = getAllScaleValues(scale, meta.type);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nfunction barSign(size, vScale, actualBase) {\r\n  if (size !== 0) {\r\n    return sign(size);\r\n  }\r\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\nfunction borderProps(properties) {\r\n  let reverse, start, end, top, bottom;\r\n  if (properties.horizontal) {\r\n    reverse = properties.base > properties.x;\r\n    start = 'left';\r\n    end = 'right';\r\n  } else {\r\n    reverse = properties.base < properties.y;\r\n    start = 'bottom';\r\n    end = 'top';\r\n  }\r\n  if (reverse) {\r\n    top = 'end';\r\n    bottom = 'start';\r\n  } else {\r\n    top = 'start';\r\n    bottom = 'end';\r\n  }\r\n  return {start, end, reverse, top, bottom};\r\n}\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n  let edge = options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    properties.borderSkipped = res;\r\n    return;\r\n  }\r\n  if (edge === true) {\r\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\r\n    return;\r\n  }\r\n  const {start, end, reverse, top, bottom} = borderProps(properties);\r\n  if (edge === 'middle' && stack) {\r\n    properties.enableBorderRadius = true;\r\n    if ((stack._top || 0) === index) {\r\n      edge = top;\r\n    } else if ((stack._bottom || 0) === index) {\r\n      edge = bottom;\r\n    } else {\r\n      res[parseEdge(bottom, start, end, reverse)] = true;\r\n      edge = top;\r\n    }\r\n  }\r\n  res[parseEdge(edge, start, end, reverse)] = true;\r\n  properties.borderSkipped = res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\r\n  properties.inflateAmount = inflateAmount === 'auto'\r\n    ? ratio === 1 ? 0.33 : 0\r\n    : inflateAmount;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = this._cachedMeta;\r\n    meta.stack = this.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {index, _cachedMeta: {vScale}} = this;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = this._getRuler();\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = this.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\r\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n      }\r\n      const options = properties.options || bars[i].options;\r\n      setBorderSkipped(properties, options, stack, index);\r\n      setInflateAmount(properties, options, ruler.ratio);\r\n      this.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const {iScale} = this._cachedMeta;\r\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\r\n      .filter(meta => meta.controller.options.grouped);\r\n    const stacked = iScale.options.stacked;\r\n    const stacks = [];\r\n    const skipNull = (meta) => {\r\n      const parsed = meta.controller.getParsed(dataIndex);\r\n      const val = parsed && parsed[meta.vScale.axis];\r\n      if (isNullOrUndef(val) || isNaN(val)) {\r\n        return true;\r\n      }\r\n    };\r\n    for (const meta of metasets) {\r\n      if (dataIndex !== undefined && skipNull(meta)) {\r\n        continue;\r\n      }\r\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\r\n        stacks.push(meta.stack);\r\n      }\r\n      if (meta.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(meta);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: this._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\r\n    const actualBase = baseValue || 0;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (Math.abs(size) < minBarLength) {\r\n      size = barSign(size, vScale, actualBase) * minBarLength;\r\n      if (value === actualBase) {\r\n        base -= size / 2;\r\n      }\r\n      const startPixel = vScale.getPixelForDecimal(0);\r\n      const endPixel = vScale.getPixelForDecimal(1);\r\n      const min = Math.min(startPixel, endPixel);\r\n      const max = Math.max(startPixel, endPixel);\r\n      base = Math.max(Math.min(base, max), min);\r\n      head = base + size;\r\n    }\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n      base += halfGrid;\r\n      size -= halfGrid;\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const scale = ruler.scale;\r\n    const options = this.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    for (; i < ilen; ++i) {\r\n      if (this.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(this._ctx);\r\n      }\r\n    }\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const parsed = super.parseArrayData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const parsed = super.parseObjectData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const data = this._cachedMeta.data;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const points = this._cachedMeta.data;\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && this.getParsed(i);\r\n      const properties = {};\r\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n    } else {\r\n      let getter = (i) => +data[i];\r\n      if (isObject(data[start])) {\r\n        const {key = 'value'} = this._parsing;\r\n        getter = (i) => +resolveObjectKey(data[i], key);\r\n      }\r\n      let i, ilen;\r\n      for (i = start, ilen = start + count; i < ilen; ++i) {\r\n        meta._parsed[i] = getter(i);\r\n      }\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        const controller = this.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const chart = this.chart;\r\n    const {chartArea} = chart;\r\n    const meta = this._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n    const chartWeight = this._getRingWeight(this.index);\r\n    const {circumference, rotation} = this._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(this.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n    this.offsetX = offsetX * outerRadius;\r\n    this.offsetY = offsetY * outerRadius;\r\n    meta.total = this.calculateTotal();\r\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const circumference = this._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n      return 0;\r\n    }\r\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : this.innerRadius;\r\n    const outerRadius = animateScale ? 0 : this.outerRadius;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    let startAngle = this._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += this._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = this._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + this.offsetX,\r\n        y: centerY + this.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n      }\r\n      startAngle += circumference;\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    let max = 0;\r\n    const chart = this.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  spacing: 0,\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.descriptors = {\r\n  _scriptable: (name) => name !== 'spacing',\r\n  _indexable: (name) => name !== 'spacing',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    this.supportsDecimation = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._chart = this.chart;\r\n    line._datasetIndex = this.index;\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = this.resolveDatasetElementOptions(mode);\r\n    if (!this.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = this.options.segment;\r\n    this.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  getMinMax() {\r\n    const meta = this._cachedMeta;\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    meta.data.forEach((element, index) => {\r\n      const parsed = this.getParsed(index).r;\r\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\r\n        if (parsed < range.min) {\r\n          range.min = parsed;\r\n        }\r\n        if (parsed > range.max) {\r\n          range.max = parsed;\r\n        }\r\n      }\r\n    });\r\n    return range;\r\n  }\r\n  _updateRadius() {\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    this.outerRadius = outerRadius - (radiusLength * this.index);\r\n    this.innerRadius = this.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = this._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / this.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += this._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n      };\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const vScale = this._cachedMeta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      if (!this.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      this.updateElement(line, undefined, properties, mode);\r\n    }\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const scale = this._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return this;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n    showLabelBackdrop: false,\r\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n    backdropPadding: 2,\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\ndefaults.describe('scale.ticks', {\r\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n  _indexable: (name) => name !== 'backdropPadding',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return createContext(parent, {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return createContext(parent, {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right, chart} = scale;\r\n  const {chartArea, scales} = chart;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  const height = bottom - top;\r\n  const width = right - left;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n    } else if (position === 'center') {\r\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n    } else {\r\n      titleY = offsetFromEdge(scale, position, offset);\r\n    }\r\n    maxWidth = right - left;\r\n  } else {\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n    } else if (position === 'center') {\r\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n    } else {\r\n      titleX = offsetFromEdge(scale, position, offset);\r\n    }\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    this.options = options.setContext(this.getContext());\r\n    this.axis = options.axis;\r\n    this._userMin = this.parse(options.min);\r\n    this._userMax = this.parse(options.max);\r\n    this._suggestedMin = this.parse(options.suggestedMin);\r\n    this._suggestedMax = this.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(this, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    min = maxDefined && min > max ? max : min;\r\n    max = minDefined && min > max ? min : max;\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    return {\r\n      left: this.paddingLeft || 0,\r\n      top: this.paddingTop || 0,\r\n      right: this.paddingRight || 0,\r\n      bottom: this.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    this.beforeUpdate();\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    this.ticks = null;\r\n    this._labelSizes = null;\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this.beforeSetDimensions();\r\n    this.setDimensions();\r\n    this.afterSetDimensions();\r\n    this._maxLength = this.isHorizontal()\r\n      ? this.width + margins.left + margins.right\r\n      : this.height + margins.top + margins.bottom;\r\n    if (!this._dataLimitsCached) {\r\n      this.beforeDataLimits();\r\n      this.determineDataLimits();\r\n      this.afterDataLimits();\r\n      this._range = _addGrace(this, grace, beginAtZero);\r\n      this._dataLimitsCached = true;\r\n    }\r\n    this.beforeBuildTicks();\r\n    this.ticks = this.buildTicks() || [];\r\n    this.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < this.ticks.length;\r\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n    this.configure();\r\n    this.beforeCalculateLabelRotation();\r\n    this.calculateLabelRotation();\r\n    this.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      this.ticks = autoSkip(this, this.ticks);\r\n      this._labelSizes = null;\r\n      this.afterAutoSkip();\r\n    }\r\n    if (samplingEnabled) {\r\n      this._convertTicksToLabels(this.ticks);\r\n    }\r\n    this.beforeFit();\r\n    this.fit();\r\n    this.afterFit();\r\n    this.afterUpdate();\r\n  }\r\n  configure() {\r\n    let reversePixels = this.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (this.isHorizontal()) {\r\n      startPixel = this.left;\r\n      endPixel = this.right;\r\n    } else {\r\n      startPixel = this.top;\r\n      endPixel = this.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    this._startPixel = startPixel;\r\n    this._endPixel = endPixel;\r\n    this._reversePixels = reversePixels;\r\n    this._length = endPixel - startPixel;\r\n    this._alignToPixels = this.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = 0;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = 0;\r\n      this.bottom = this.height;\r\n    }\r\n    this.paddingLeft = 0;\r\n    this.paddingTop = 0;\r\n    this.paddingRight = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    this.chart.notifyPlugins(name, this.getContext());\r\n    callback(this.options[name], [this]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const tickOpts = this.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const options = this.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = this.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n      this.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\r\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    this.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  afterAutoSkip() {}\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\r\n    const display = this._isVisible();\r\n    const isHorizontal = this.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = this.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = this.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && this.ticks.length) {\r\n        const {first, last, widest, highest} = this._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(this.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        this._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    this._handleMargins();\r\n    if (isHorizontal) {\r\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n      this.height = minSize.height;\r\n    } else {\r\n      this.width = minSize.width;\r\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const {ticks: {align, padding}, position} = this.options;\r\n    const isRotated = this.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n    if (this.isHorizontal()) {\r\n      const offsetLeft = this.getPixelForTick(0) - this.left;\r\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else if (align !== 'inner') {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      this.paddingTop = paddingTop + padding;\r\n      this.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    if (this._margins) {\r\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    this.beforeTickToLabelConversion();\r\n    this.generateTickLabels(ticks);\r\n    let i, ilen;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n    this.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    let labelSizes = this._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = this.options.ticks.sampleSize;\r\n      let ticks = this.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    if (this._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = this._startPixel + decimal * this._length;\r\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const ticks = this.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\r\n    }\r\n    return this.$context ||\r\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\r\n  }\r\n  _tickSize() {\r\n    const optionTicks = this.options.ticks;\r\n    const rot = toRadians(this.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = this._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return this.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const axis = this.axis;\r\n    const chart = this.chart;\r\n    const options = this.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(this.bottom);\r\n      ty1 = this.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(this.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = this.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(this.right);\r\n      tx1 = this.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(this.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = this.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n    for (i = 0; i < ticksLength; i += step) {\r\n      const optsAtIndex = grid.setContext(this.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = optsAtIndex.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(this, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    this._ticksLength = ticksLength;\r\n    this._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const axis = this.axis;\r\n    const options = this.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = this.bottom - hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = this.top + hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = this._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      let tickTextAlign = textAlign;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (textAlign === 'inner') {\r\n          if (i === ilen - 1) {\r\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\r\n          } else if (i === 0) {\r\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\r\n          } else {\r\n            tickTextAlign = 'center';\r\n          }\r\n        }\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      let backdrop;\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n        let top = y + textOffset - labelPadding.top;\r\n        let left = x - labelPadding.left;\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        }\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        }\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign: tickTextAlign,\r\n        textBaseline,\r\n        translation: [x, y],\r\n        backdrop,\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const {position, ticks} = this.options;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    } else if (ticks.align === 'inner') {\r\n      align = 'inner';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\r\n    const labelSizes = this._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        x = this.right + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += (widest / 2);\r\n        } else {\r\n          textAlign = 'right';\r\n          x += widest;\r\n        }\r\n      } else {\r\n        x = this.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = this.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        x = this.left + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x -= widest;\r\n        }\r\n      } else {\r\n        x = this.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = this.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    if (this.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = this.chart;\r\n    const position = this.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const grid = this.options.grid;\r\n    if (!this._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = this.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(this.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const grid = this.options.grid;\r\n    const ctx = this.ctx;\r\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  drawBorder() {\r\n    const {chart, ctx, options: {grid}} = this;\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n    const borderValue = this._borderValue;\r\n    let x1, x2, y1, y2;\r\n    if (this.isHorizontal()) {\r\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.borderWidth;\r\n    ctx.strokeStyle = borderOpts.borderColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  drawLabels(chartArea) {\r\n    const optionTicks = this.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = this.ctx;\r\n    const area = this._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      if (item.backdrop) {\r\n        ctx.fillStyle = item.backdrop.color;\r\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\r\n      }\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    if (!this._isVisible()) {\r\n      return;\r\n    }\r\n    this.drawBackground();\r\n    this.drawGrid(chartArea);\r\n    this.drawBorder();\r\n    this.drawTitle();\r\n    this.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const opts = this.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw: (chartArea) => {\r\n          this.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw: (chartArea) => {\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawTitle();\r\n      }\r\n    }, {\r\n      z: gz + 1,\r\n      draw: () => {\r\n        this.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw: (chartArea) => {\r\n        this.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const metas = this.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = this.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n  _maxDigits() {\r\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = this.register(proto);\r\n    }\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (this.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || this._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\r\n        this._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || this._getRegistryForType(item);\r\n          this._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass ScatterController extends DatasetController {\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {data: points = []} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    if (this.options.showLine) {\r\n      const {dataset: line, _dataset} = meta;\r\n      line._chart = this.chart;\r\n      line._datasetIndex = this.index;\r\n      line._decimated = !!_dataset._decimated;\r\n      line.points = points;\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      options.segment = this.options.segment;\r\n      this.updateElement(line, undefined, {\r\n        animated: !animationsDisabled,\r\n        options\r\n      }, mode);\r\n    }\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  addElements() {\r\n    const {showLine} = this.options;\r\n    if (!this.datasetElementType && showLine) {\r\n      this.datasetElementType = registry.getElement('line');\r\n    }\r\n    super.addElements();\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data || [];\r\n    if (!this.options.showLine) {\r\n      let max = 0;\r\n      for (let i = data.length - 1; i >= 0; --i) {\r\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n      }\r\n      return max > 0 && max;\r\n    }\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  init(chartOptions) {}\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\r\n  const items = [];\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\r\n      return;\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\r\n  let items = [];\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\r\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\r\n    if (_angleBetween(angle, startAngle, endAngle)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  let items = [];\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\r\n    if (intersect && !inRange) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\r\n    if (!pointInArea && !inRange) {\r\n      return;\r\n    }\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return [];\r\n  }\r\n  return axis === 'r' && !intersect\r\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\r\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\r\n}\r\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const items = [];\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\r\n    }\r\n  });\r\n  if (intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  evaluateInteractionItems,\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box, pos, stack, stackWeight;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight,\r\n      stack: stack && (pos + stack),\r\n      stackWeight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction buildStacks(layouts) {\r\n  const stacks = {};\r\n  for (const wrap of layouts) {\r\n    const {stack, pos, stackWeight} = wrap;\r\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n      continue;\r\n    }\r\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\r\n    _stack.count++;\r\n    _stack.weight += stackWeight;\r\n  }\r\n  return stacks;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  const stacks = buildStacks(layouts);\r\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    const {fullSize} = layout.box;\r\n    const stack = stacks[layout.stack];\r\n    const factor = stack && layout.stackWeight / stack.weight;\r\n    if (layout.horizontal) {\r\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n      layout.height = hBoxMaxHeight;\r\n    } else {\r\n      layout.width = vBoxMaxWidth;\r\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n    }\r\n  }\r\n  return stacks;\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n  const {pos, box} = layout;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(pos)) {\r\n    if (layout.size) {\r\n      chartArea[pos] -= layout.size;\r\n    }\r\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\r\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n    layout.size = stack.size / stack.count;\r\n    chartArea[pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\nfunction setBoxDims(box, left, top, width, height) {\r\n  box.top = top;\r\n  box.left = left;\r\n  box.right = left + width;\r\n  box.bottom = top + height;\r\n  box.width = width;\r\n  box.height = height;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n  const userPadding = params.padding;\r\n  let {x, y} = chartArea;\r\n  for (const layout of boxes) {\r\n    const box = layout.box;\r\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\r\n    const weight = (layout.stackWeight / stack.weight) || 1;\r\n    if (layout.horizontal) {\r\n      const width = chartArea.w * weight;\r\n      const height = stack.size || box.height;\r\n      if (defined(stack.start)) {\r\n        y = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n      } else {\r\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n      }\r\n      stack.start = y;\r\n      stack.placed += width;\r\n      y = box.bottom;\r\n    } else {\r\n      const height = chartArea.h * weight;\r\n      const width = stack.size || box.width;\r\n      if (defined(stack.start)) {\r\n        x = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n      } else {\r\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n      }\r\n      stack.start = x;\r\n      stack.placed += height;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  autoPadding: true,\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = Math.max(width - padding.width, 0);\r\n    const availableHeight = Math.max(height - padding.height, 0);\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\r\n    });\r\n  }\r\n};\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n  updateConfig(config) {\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n  updateConfig(config) {\r\n    config.options.animation = false;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction nodeListContains(nodeList, canvas) {\r\n  for (const node of nodeList) {\r\n    if (node === canvas || node.contains(canvas)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && container.isConnected);\r\n  }\r\n}\r\n\r\nfunction _detectPlatform(canvas) {\r\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n    return BasicPlatform;\r\n  }\r\n  return DomPlatform;\r\n}\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    if (hook === 'beforeInit') {\r\n      this._init = this._createDescriptors(chart, true);\r\n      this._notify(this._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n    const result = this._notify(descriptors, chart, hook, args);\r\n    if (hook === 'afterDestroy') {\r\n      this._notify(descriptors, chart, 'stop');\r\n      this._notify(this._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const localIds = {};\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n      localIds[plugin.id] = true;\r\n    }\r\n  }\r\n  return {plugins, localIds};\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (const plugin of plugins) {\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, {plugin, local}, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  if (local && plugin.defaults) {\r\n    scopes.push(plugin.defaults);\r\n  }\r\n  return config.createResolver(scopes, context, [''], {\r\n    scriptable: false,\r\n    indexable: false,\r\n    allKeys: true\r\n  });\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    if (!isObject(scaleConf)) {\r\n      return console.error(`Invalid scale configuration for scale: ${id}`);\r\n    }\r\n    if (scaleConf._proxy) {\r\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n    }\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get platform() {\r\n    return this._config.platform;\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = Array.from(scopes);\r\n    if (array.length === 0) {\r\n      array.push(Object.create(null));\r\n    }\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nconst hasFunction = value => isObject(value)\r\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    const scriptable = isScriptable(prop);\r\n    const indexable = isIndexable(prop);\r\n    const value = (indexable || scriptable) && proxy[prop];\r\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\r\n      || (indexable && isArray(value))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.9.1\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction getCanvas(item) {\r\n  if (_isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nfunction moveNumericKeys(obj, start, move) {\r\n  const keys = Object.keys(obj);\r\n  for (const key of keys) {\r\n    const intKey = +key;\r\n    if (intKey >= start) {\r\n      const value = obj[key];\r\n      delete obj[key];\r\n      if (move > 0 || intKey > start) {\r\n        obj[intKey + move] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\r\n  if (!inChartArea || e.type === 'mouseout') {\r\n    return null;\r\n  }\r\n  if (isClick) {\r\n    return lastEvent;\r\n  }\r\n  return e;\r\n}\r\nclass Chart {\r\n  constructor(item, userConfig) {\r\n    const config = this.config = new Config(userConfig);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n    this.platform.updateConfig(config);\r\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._responsiveListeners = undefined;\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\r\n    this._dataChanges = [];\r\n    instances[this.id] = this;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(this, 'complete', onAnimationsComplete);\r\n    animator.listen(this, 'progress', onAnimationProgress);\r\n    this._initialize();\r\n    if (this.attached) {\r\n      this.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    this.notifyPlugins('beforeInit');\r\n    if (this.options.responsive) {\r\n      this.resize();\r\n    } else {\r\n      retinaScale(this, this.options.devicePixelRatio);\r\n    }\r\n    this.bindEvents();\r\n    this.notifyPlugins('afterInit');\r\n    return this;\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const options = this.options;\r\n    const canvas = this.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n    const mode = this.width ? 'resize' : 'attach';\r\n    this.width = newSize.width;\r\n    this.height = newSize.height;\r\n    this._aspectRatio = this.aspectRatio;\r\n    if (!retinaScale(this, newRatio, true)) {\r\n      return;\r\n    }\r\n    this.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [this, newSize], this);\r\n    if (this.attached) {\r\n      if (this._doResize(mode)) {\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const options = this.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = this.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: this.ctx,\r\n          chart: this\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(this, scale, scale.options);\r\n      layouts.addBox(this, scale);\r\n    });\r\n  }\r\n  _updateMetasets() {\r\n    const metasets = this._metasets;\r\n    const numData = this.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    metasets.sort((a, b) => a.index - b.index);\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        this._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const {_metasets: metasets, data: {datasets}} = this;\r\n    if (metasets.length > datasets.length) {\r\n      delete this._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        this._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const newControllers = [];\r\n    const datasets = this.data.datasets;\r\n    let i, ilen;\r\n    this._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = this.getDatasetMeta(i);\r\n      const type = dataset.type || this.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        this._destroyDatasetMeta(i);\r\n        meta = this.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n      meta.order = dataset.order || 0;\r\n      meta.index = i;\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = this.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(this, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    this._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    each(this.data.datasets, (dataset, datasetIndex) => {\r\n      this.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, this);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const config = this.config;\r\n    config.update();\r\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    const animsDisabled = this._animationsDisabled = !options.animation;\r\n    this._updateScales();\r\n    this._checkEventBindings();\r\n    this._updateHiddenIndices();\r\n    this._plugins.invalidate();\r\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = this.buildOrUpdateControllers();\r\n    this.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = this.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\r\n    this._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    this._updateDatasets(mode);\r\n    this.notifyPlugins('afterUpdate', {mode});\r\n    this._layers.sort(compare2Level('z', '_idx'));\r\n    const {_active, _lastEvent} = this;\r\n    if (_lastEvent) {\r\n      this._eventHandler(_lastEvent, true);\r\n    } else if (_active.length) {\r\n      this._updateHoverStyles(_active, _active, true);\r\n    }\r\n    this.render();\r\n  }\r\n  _updateScales() {\r\n    each(this.scales, (scale) => {\r\n      layouts.removeBox(this, scale);\r\n    });\r\n    this.ensureScalesHaveIDs();\r\n    this.buildOrUpdateScales();\r\n  }\r\n  _checkEventBindings() {\r\n    const options = this.options;\r\n    const existingEvents = new Set(Object.keys(this._listeners));\r\n    const newEvents = new Set(options.events);\r\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\r\n      this.unbindEvents();\r\n      this.bindEvents();\r\n    }\r\n  }\r\n  _updateHiddenIndices() {\r\n    const {_hiddenIndices} = this;\r\n    const changes = this._getUniformDataChanges() || [];\r\n    for (const {method, start, count} of changes) {\r\n      const move = method === '_removeElements' ? -count : count;\r\n      moveNumericKeys(_hiddenIndices, start, move);\r\n    }\r\n  }\r\n  _getUniformDataChanges() {\r\n    const _dataChanges = this._dataChanges;\r\n    if (!_dataChanges || !_dataChanges.length) {\r\n      return;\r\n    }\r\n    this._dataChanges = [];\r\n    const datasetCount = this.data.datasets.length;\r\n    const makeSet = (idx) => new Set(\r\n      _dataChanges\r\n        .filter(c => c[0] === idx)\r\n        .map((c, i) => i + ',' + c.splice(1).join(','))\r\n    );\r\n    const changeSet = makeSet(0);\r\n    for (let i = 1; i < datasetCount; i++) {\r\n      if (!setsEqual(changeSet, makeSet(i))) {\r\n        return;\r\n      }\r\n    }\r\n    return Array.from(changeSet)\r\n      .map(c => c.split(','))\r\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\r\n  }\r\n  _updateLayout(minPadding) {\r\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(this, this.width, this.height, minPadding);\r\n    const area = this.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    this._layers = [];\r\n    each(this.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      this._layers.push(...box._layers());\r\n    }, this);\r\n    this._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    this.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this.getDatasetMeta(i).controller.configure();\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const meta = this.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(this)) {\r\n      if (this.attached && !animator.running(this)) {\r\n        animator.start(this);\r\n      }\r\n    } else {\r\n      this.draw();\r\n      onAnimationsComplete({chart: this});\r\n    }\r\n  }\r\n  draw() {\r\n    let i;\r\n    if (this._resizeBeforeDraw) {\r\n      const {width, height} = this._resizeBeforeDraw;\r\n      this._resize(width, height);\r\n      this._resizeBeforeDraw = null;\r\n    }\r\n    this.clear();\r\n    if (this.width <= 0 || this.height <= 0) {\r\n      return;\r\n    }\r\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = this._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const metasets = this._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = this.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      this._drawDataset(metasets[i]);\r\n    }\r\n    this.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const ctx = this.ctx;\r\n    const clip = meta._clip;\r\n    const useClip = !clip.disabled;\r\n    const area = this.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (useClip) {\r\n      clipArea(ctx, {\r\n        left: clip.left === false ? 0 : area.left - clip.left,\r\n        right: clip.right === false ? this.width : area.right + clip.right,\r\n        top: clip.top === false ? 0 : area.top - clip.top,\r\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\r\n      });\r\n    }\r\n    meta.controller.draw();\r\n    if (useClip) {\r\n      unclipArea(ctx);\r\n    }\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  isPointInArea(point) {\r\n    return _isPointInArea(point, this.chartArea, this._minPadding);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    const metasets = this._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n      metasets.push(meta);\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateVisibility(datasetIndex, dataIndex, visible) {\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    if (defined(dataIndex)) {\r\n      meta.data[dataIndex].hidden = !visible;\r\n      this.update();\r\n    } else {\r\n      this.setDatasetVisibility(datasetIndex, visible);\r\n      anims.update(meta, {visible});\r\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n    }\r\n  }\r\n  hide(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, false);\r\n  }\r\n  show(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const meta = this._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n    }\r\n    delete this._metasets[datasetIndex];\r\n  }\r\n  _stop() {\r\n    let i, ilen;\r\n    this.stop();\r\n    animator.remove(this);\r\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._destroyDatasetMeta(i);\r\n    }\r\n  }\r\n  destroy() {\r\n    this.notifyPlugins('beforeDestroy');\r\n    const {canvas, ctx} = this;\r\n    this._stop();\r\n    this.config.clearCache();\r\n    if (canvas) {\r\n      this.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      this.platform.releaseContext(ctx);\r\n      this.canvas = null;\r\n      this.ctx = null;\r\n    }\r\n    this.notifyPlugins('destroy');\r\n    delete instances[this.id];\r\n    this.notifyPlugins('afterDestroy');\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    this.bindUserEvents();\r\n    if (this.options.responsive) {\r\n      this.bindResponsiveEvents();\r\n    } else {\r\n      this.attached = true;\r\n    }\r\n  }\r\n  bindUserEvents() {\r\n    const listeners = this._listeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const listener = (e, x, y) => {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      this._eventHandler(e);\r\n    };\r\n    each(this.options.events, (type) => _add(type, listener));\r\n  }\r\n  bindResponsiveEvents() {\r\n    if (!this._responsiveListeners) {\r\n      this._responsiveListeners = {};\r\n    }\r\n    const listeners = this._responsiveListeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(this, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    const listener = (width, height) => {\r\n      if (this.canvas) {\r\n        this.resize(width, height);\r\n      }\r\n    };\r\n    let detached;\r\n    const attached = () => {\r\n      _remove('attach', attached);\r\n      this.attached = true;\r\n      this.resize();\r\n      _add('resize', listener);\r\n      _add('detach', detached);\r\n    };\r\n    detached = () => {\r\n      this.attached = false;\r\n      _remove('resize', listener);\r\n      this._stop();\r\n      this._resize(0, 0);\r\n      _add('attach', attached);\r\n    };\r\n    if (platform.isAttached(this.canvas)) {\r\n      attached();\r\n    } else {\r\n      detached();\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    each(this._listeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._listeners = {};\r\n    each(this._responsiveListeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._responsiveListeners = undefined;\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const lastActive = this._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      this._active = active;\r\n      this._lastEvent = null;\r\n      this._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const hoverOptions = this.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const args = {\r\n      event: e,\r\n      replay,\r\n      cancelable: true,\r\n      inChartArea: this.isPointInArea(e)\r\n    };\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\r\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = this._handleEvent(e, replay, args.inChartArea);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      this.render();\r\n    }\r\n    return this;\r\n  }\r\n  _handleEvent(e, replay, inChartArea) {\r\n    const {_active: lastActive = [], options} = this;\r\n    const useFinalPosition = replay;\r\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\r\n    const isClick = _isClickEvent(e);\r\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\r\n    if (inChartArea) {\r\n      this._lastEvent = null;\r\n      callback(options.onHover, [e, active, this], this);\r\n      if (isClick) {\r\n        callback(options.onClick, [e, active, this], this);\r\n      }\r\n    }\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    this._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const hoverOptions = this.options.hover;\r\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction clipArc(ctx, element, endAngle) {\r\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\r\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\r\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n  let spacingOffset = 0;\r\n  const alpha = end - start;\r\n  if (spacing) {\r\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\r\n    spacingOffset = (alpha - adjustedAngle) / 2;\r\n  }\r\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n  const angleOffset = (alpha - beta) / 2;\r\n  const startAngle = start + angleOffset + spacingOffset;\r\n  const endAngle = end - angleOffset - spacingOffset;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  if (circular) {\r\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n    if (outerEnd > 0) {\r\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n    }\r\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n    ctx.lineTo(p4.x, p4.y);\r\n    if (innerEnd > 0) {\r\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n    }\r\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n    if (innerStart > 0) {\r\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n    }\r\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n    ctx.lineTo(p8.x, p8.y);\r\n    if (outerStart > 0) {\r\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n    }\r\n  } else {\r\n    ctx.moveTo(x, y);\r\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\r\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerStartX, outerStartY);\r\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\r\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerEndX, outerEndY);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element, offset, spacing, circular) {\r\n  const {fullCircles, startAngle, circumference} = element;\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + circumference % TAU;\r\n      if (circumference % TAU === 0) {\r\n        endAngle += TAU;\r\n      }\r\n    }\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n  ctx.fill();\r\n  return endAngle;\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    clipArc(ctx, element, startAngle + TAU);\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\r\n  const {options} = element;\r\n  const {borderWidth, borderJoinStyle} = options;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = borderWidth * 2;\r\n    ctx.lineJoin = borderJoinStyle || 'round';\r\n  } else {\r\n    ctx.lineWidth = borderWidth;\r\n    ctx.lineJoin = borderJoinStyle || 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element, endAngle);\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const rAdjust = this.options.spacing / 2;\r\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\r\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference',\r\n    ], useFinalPosition);\r\n    const {offset, spacing} = this.options;\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const {options, circumference} = this;\r\n    const offset = (options.offset || 0) / 2;\r\n    const spacing = (options.spacing || 0) / 2;\r\n    const circular = options.circular;\r\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    let radiusOffset = 0;\r\n    if (offset) {\r\n      radiusOffset = offset / 2;\r\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\r\n      if (this.circumference >= PI) {\r\n        radiusOffset = offset;\r\n      }\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\r\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderJoinStyle: undefined,\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  spacing: 0,\r\n  angle: undefined,\r\n  circular: true,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && !line.options.segment) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._chart = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    this._datasetIndex = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea, indexAxis) {\r\n    const options = this.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n      this._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    this._points = points;\r\n    delete this._segments;\r\n    delete this._path;\r\n    this._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const options = this.options;\r\n    const value = point[property];\r\n    const points = this.points;\r\n    const segments = _boundSegments(this, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const segments = this.segments;\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    let loop = this._loop;\r\n    start = start || 0;\r\n    count = count || (this.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const options = this.options || {};\r\n    const points = this.points || [];\r\n    if (points.length && options.borderWidth) {\r\n      ctx.save();\r\n      draw(ctx, this, start, count);\r\n      ctx.restore();\r\n    }\r\n    if (this.animated) {\r\n      this._pointsUpdated = false;\r\n      this._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx, area) {\r\n    const options = this.options;\r\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, this.x, this.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : _limitValue(value, min, max);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = bar.borderSkipped;\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = bar.borderSkipped;\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\r\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n  const x = rect.x !== refRect.x ? -amount : 0;\r\n  const y = rect.y !== refRect.y ? -amount : 0;\r\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n  return {\r\n    x: rect.x + x,\r\n    y: rect.y + y,\r\n    w: rect.w + w,\r\n    h: rect.h + h,\r\n    radius: rect.radius\r\n  };\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.inflateAmount = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n      ctx.clip();\r\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n      ctx.fillStyle = borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  inflateAmount: 'auto',\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (!meta.controller.supportsDecimation) {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      const threshold = options.threshold || 4 * availableWidth;\r\n      if (count <= threshold) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    let {start, end} = segment;\r\n    end = _findSegmentEnd(start, end, points);\r\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[start],\r\n        end: points[end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction _getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach(({start, end}) => {\r\n    end = _findSegmentEnd(start, end, linePoints);\r\n    const first = linePoints[start];\r\n    const last = linePoints[end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction _findSegmentEnd(start, end, points) {\r\n  for (;end > start; end--) {\r\n    const point = points[end];\r\n    if (!isNaN(point.x) && !isNaN(point.y)) {\r\n      break;\r\n    }\r\n  }\r\n  return end;\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\n\r\nfunction _createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = _pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction _shouldApplyFill(source) {\r\n  return source && source.fill !== false;\r\n}\r\n\r\nfunction _resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    return decodeTargetIndex(fill[0], index, target, count);\r\n  }\r\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction decodeTargetIndex(firstCh, index, target, count) {\r\n  if (firstCh === '-' || firstCh === '+') {\r\n    target = index + target;\r\n  }\r\n  if (target === index || target < 0 || target >= count) {\r\n    return false;\r\n  }\r\n  return target;\r\n}\r\nfunction _getTargetPixel(fill, scale) {\r\n  let pixel = null;\r\n  if (fill === 'start') {\r\n    pixel = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    pixel = scale.top;\r\n  } else if (isObject(fill)) {\r\n    pixel = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    pixel = scale.getBasePixel();\r\n  }\r\n  return pixel;\r\n}\r\nfunction _getTargetValue(fill, scale, startValue) {\r\n  let value;\r\n  if (fill === 'start') {\r\n    value = startValue;\r\n  } else if (fill === 'end') {\r\n    value = scale.options.reverse ? scale.min : scale.max;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  return value;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\n\r\nfunction _buildStackLine(source) {\r\n  const {scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(scale, index);\r\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nfunction getLinesBelow(scale, index) {\r\n  const below = [];\r\n  const metas = scale.getMatchingVisibleMetas('line');\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (!meta.hidden) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (_isBetween(pointValue, firstValue, lastValue)) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\n\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\n\r\nfunction _getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return _buildStackLine(source);\r\n  }\r\n  if (fill === 'shape') {\r\n    return true;\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return _createBoundaryLine(boundary, line);\r\n}\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  const pixel = _getTargetPixel(fill, scale);\r\n  if (isNumberFinite(pixel)) {\r\n    const horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? pixel : null,\r\n      y: horizontal ? null : pixel\r\n    };\r\n  }\r\n  return null;\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const value = _getTargetValue(fill, scale, start);\r\n  const target = [];\r\n  if (options.grid.circular) {\r\n    const center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (let i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\n\r\nfunction _drawfill(ctx, source, area) {\r\n  const target = _getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    clipVertical(ctx, target, area.top);\r\n    fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    clipVertical(ctx, target, area.bottom);\r\n  }\r\n  fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction clipVertical(ctx, target, clipY) {\r\n  const {segments, points} = target;\r\n  let first = true;\r\n  let lineLoop = false;\r\n  ctx.beginPath();\r\n  for (const segment of segments) {\r\n    const {start, end} = segment;\r\n    const firstPoint = points[start];\r\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\r\n    if (first) {\r\n      ctx.moveTo(firstPoint.x, firstPoint.y);\r\n      first = false;\r\n    } else {\r\n      ctx.lineTo(firstPoint.x, clipY);\r\n      ctx.lineTo(firstPoint.x, firstPoint.y);\r\n    }\r\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\r\n    if (lineLoop) {\r\n      ctx.closePath();\r\n    } else {\r\n      ctx.lineTo(lastPoint.x, clipY);\r\n    }\r\n  }\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    const notShape = target !== true;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    let loop;\r\n    if (notShape) {\r\n      if (lineLoop) {\r\n        ctx.closePath();\r\n      } else {\r\n        interpolatedLineTo(ctx, target, end, property);\r\n      }\r\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n      loop = lineLoop && targetLoop;\r\n      if (!loop) {\r\n        interpolatedLineTo(ctx, target, start, property);\r\n      }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\n\r\nvar index = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: _decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = _resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n      source.line.updateControlPoints(area, source.axis);\r\n      if (draw && source.fill) {\r\n        _drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (_shouldApplyFill(source)) {\r\n        _drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    _drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins;\r\n    this.setDimensions();\r\n    this.buildLabels();\r\n    this.fit();\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = this._margins.left;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = this._margins.top;\r\n      this.bottom = this.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const labelOpts = this.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\r\n    }\r\n    if (this.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    this.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const {options, ctx} = this;\r\n    if (!options.display) {\r\n      this.width = this.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (this.isHorizontal()) {\r\n      width = this.maxWidth;\r\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = this.maxHeight;\r\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const lineWidths = this.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const columnSizes = this.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let col = 0;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    if (!this.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\r\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n        }\r\n        hitbox.top += this.top + titleHeight + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += this.left + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    if (this.options.display) {\r\n      const ctx = this.ctx;\r\n      clipArea(ctx, this);\r\n      this._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    this.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxHeight * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n      });\r\n    };\r\n    const isHorizontal = this.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n        y: this.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: this.left + padding,\r\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(this.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + halfFontSize + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(this.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > this.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > this.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(this.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const opts = this.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const ctx = this.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = this.left;\r\n    let maxWidth = this.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...this.lineWidths);\r\n      y = this.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n    } else {\r\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    let i, hitBox, lh;\r\n    if (_isBetween(x, this.left, this.right)\r\n      && _isBetween(y, this.top, this.bottom)) {\r\n      lh = this.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\r\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\r\n          return this.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const opts = this.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\r\n      const previous = this._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, this], this);\r\n      }\r\n      this._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, this], this);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, this], this);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const opts = this.options;\r\n    this.left = 0;\r\n    this.top = 0;\r\n    if (!opts.display) {\r\n      this.width = this.height = this.right = this.bottom = 0;\r\n      return;\r\n    }\r\n    this.width = this.right = maxWidth;\r\n    this.height = this.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    this._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n    if (this.isHorizontal()) {\r\n      this.height = textSize;\r\n    } else {\r\n      this.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + this._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst map = new WeakMap();\r\nvar plugin_subtitle = {\r\n  id: 'subtitle',\r\n  start(chart, _args, options) {\r\n    const title = new Title({\r\n      ctx: chart.ctx,\r\n      options,\r\n      chart\r\n    });\r\n    layouts.configure(chart, title, options);\r\n    layouts.addBox(chart, title);\r\n    map.set(chart, title);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, map.get(chart));\r\n    map.delete(chart);\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = map.get(chart);\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'normal',\r\n    },\r\n    fullSize: true,\r\n    padding: 0,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 1500\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip.chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\r\n  } else if (xAlign === 'right') {\r\n    x += Math.max(topRight, bottomRight) + caretSize;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return createContext(parent, {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.chart = config.chart || config._chart;\r\n    this._chart = this.chart;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const cached = this._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = this.chart;\r\n    const options = this.options.setContext(this.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(this.chart, opts);\r\n    if (opts._cacheable) {\r\n      this._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    return this.$context ||\r\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\r\n    const title = callbacks.title.apply(this, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const active = this._active;\r\n    const data = this.chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(this, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\r\n    });\r\n    this.labelColors = labelColors;\r\n    this.labelPointStyles = labelPointStyles;\r\n    this.labelTextColors = labelTextColors;\r\n    this.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const options = this.options.setContext(this.getContext());\r\n    const active = this._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (this.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(this, active, this._eventPosition);\r\n      tooltipItems = this._createItems(options);\r\n      this.title = this.getTitle(tooltipItems, options);\r\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n      this.body = this.getBody(tooltipItems, options);\r\n      this.afterBody = this.getAfterBody(tooltipItems, options);\r\n      this.footer = this.getFooter(tooltipItems, options);\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\r\n      this.xAlign = alignment.xAlign;\r\n      this.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    this._tooltipItems = tooltipItems;\r\n    this.$context = undefined;\r\n    if (properties) {\r\n      this._resolveAnimations().update(this, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {caretSize, cornerRadius} = options;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const title = this.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const labelColors = this.labelColors[i];\r\n    const labelPointStyle = this.labelPointStyles[i];\r\n    const {boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(this, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = this.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const {body} = this;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(this.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = this.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(this.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const footer = this.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + topLeft, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - topRight, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - bottomRight);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + bottomLeft, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + topLeft);\r\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const chart = this.chart;\r\n    const anims = this.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, this._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        this.xAlign = alignment.xAlign;\r\n        this.yAlign = alignment.yAlign;\r\n        this.width = size.width;\r\n        this.height = size.height;\r\n        this.caretX = position.x;\r\n        this.caretY = position.y;\r\n        this._resolveAnimations().update(this, point);\r\n      }\r\n    }\r\n  }\r\n  _willRender() {\r\n    return !!this.opacity;\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options.setContext(this.getContext());\r\n    let opacity = this.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    this._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n    const pt = {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      this.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      this.drawTitle(pt, ctx, options);\r\n      this.drawBody(pt, ctx, options);\r\n      this.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const lastActive = this._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = this._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      this._active = active;\r\n      this._eventPosition = eventPosition;\r\n      this._ignoreReplayEvents = true;\r\n      this.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay, inChartArea = true) {\r\n    if (replay && this._ignoreReplayEvents) {\r\n      return false;\r\n    }\r\n    this._ignoreReplayEvents = false;\r\n    const options = this.options;\r\n    const lastActive = this._active || [];\r\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\r\n    const positionChanged = this._positionChanged(active, e);\r\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      this._active = active;\r\n      if (options.enabled || options.external) {\r\n        this._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        this.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, replay, inChartArea) {\r\n    const options = this.options;\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n    if (options.reverse) {\r\n      active.reverse();\r\n    }\r\n    return active;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    if (tooltip && tooltip._willRender()) {\r\n      const args = {\r\n        tooltip\r\n      };\r\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n        return;\r\n      }\r\n      tooltip.draw(chart.ctx);\r\n      chart.notifyPlugins('afterTooltipDraw', args);\r\n    }\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    boxPadding: 0,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: index,\r\nLegend: plugin_legend,\r\nSubTitle: plugin_subtitle,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index, addedLabels) => {\r\n  if (typeof raw === 'string') {\r\n    index = labels.push(raw) - 1;\r\n    addedLabels.unshift({index, label: raw});\r\n  } else if (isNaN(raw)) {\r\n    index = null;\r\n  }\r\n  return index;\r\n};\r\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index, addedLabels);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n    this._addedLabels = [];\r\n  }\r\n  init(scaleOptions) {\r\n    const added = this._addedLabels;\r\n    if (added.length) {\r\n      const labels = this.getLabels();\r\n      for (const {index, label} of added) {\r\n        if (labels[index] === label) {\r\n          labels.splice(index, 1);\r\n        }\r\n      }\r\n      this._addedLabels = [];\r\n    }\r\n    super.init(scaleOptions);\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this.getMinMax(true);\r\n    if (this.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = this.getLabels().length - 1;\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const offset = this.options.offset;\r\n    const ticks = [];\r\n    let labels = this.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    this._startValue = this.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const labels = this.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    super.configure();\r\n    if (!this.isHorizontal()) {\r\n      this._reversePixels = !this._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    if (typeof value !== 'number') {\r\n      value = this.parse(value);\r\n    }\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  if (bounds === 'ticks') {\r\n    niceMin = Math.floor(rmin / spacing) * spacing;\r\n    niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  } else {\r\n    niceMin = rmin;\r\n    niceMax = rmax;\r\n  }\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  const decimalPlaces = Math.max(\r\n    _decimalPlaces(spacing),\r\n    _decimalPlaces(niceMin)\r\n  );\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    if (includeBounds && niceMin !== min) {\r\n      ticks.push({value: min});\r\n      if (niceMin < min) {\r\n        j++;\r\n      }\r\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n        j++;\r\n      }\r\n    } else if (niceMin < min) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined && includeBounds && niceMax !== max) {\r\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else if (!maxDefined || niceMax === max) {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\r\n  const rad = toRadians(minRotation);\r\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n  const length = 0.75 * minSpacing * ('' + value).length;\r\n  return Math.min(minSpacing / ratio, length);\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {beginAtZero} = this.options;\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      let offset = 1;\r\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\r\n        offset = Math.abs(max * 0.05);\r\n      }\r\n      setMax(max + offset);\r\n      if (!beginAtZero) {\r\n        setMin(min - offset);\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const tickOpts = this.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n      if (maxTicks > 1000) {\r\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\r\n        maxTicks = 1000;\r\n      }\r\n    } else {\r\n      maxTicks = this.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = this.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      bounds: opts.bounds,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: this._maxDigits(),\r\n      horizontal: this.isHorizontal(),\r\n      minRotation: tickOpts.minRotation || 0,\r\n      includeBounds: tickOpts.includeBounds !== false\r\n    };\r\n    const dataRange = this._range || this;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const ticks = this.ticks;\r\n    let start = this.min;\r\n    let end = this.max;\r\n    super.configure();\r\n    if (this.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    this._startValue = start;\r\n    this._endValue = end;\r\n    this._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? min : 0;\r\n    this.max = isNumberFinite(max) ? max : 1;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const horizontal = this.isHorizontal();\r\n    const length = horizontal ? this.width : this.height;\r\n    const minRotation = toRadians(this.options.ticks.minRotation);\r\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n    const tickFont = this._resolveTickFontOptions(0);\r\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (this.options.beginAtZero) {\r\n      this._zero = true;\r\n    }\r\n    this.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let min = this.min;\r\n    let max = this.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const generationOptions = {\r\n      min: this._userMin,\r\n      max: this._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, this);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined\r\n      ? '0'\r\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n  configure() {\r\n    const start = this.min;\r\n    super.configure();\r\n    this._startValue = log10(start);\r\n    this._valueRange = log10(this.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    if (value === undefined || value === 0) {\r\n      value = this.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return this.getPixelForDecimal(value === this.min\r\n      ? 0\r\n      : (log10(value) - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const decimal = this.getDecimalForPixel(pixel);\r\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, font, label) {\r\n  label = isArray(label) ? label : [label];\r\n  return {\r\n    w: _longestText(ctx, font.string, label),\r\n    h: label.length * font.lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const orig = {\r\n    l: scale.left + scale._padding.left,\r\n    r: scale.right - scale._padding.right,\r\n    t: scale.top + scale._padding.top,\r\n    b: scale.bottom - scale._padding.bottom\r\n  };\r\n  const limits = Object.assign({}, orig);\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const pointLabelOpts = scale.options.pointLabels;\r\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\r\n    padding[i] = opts.padding;\r\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\r\n    const plFont = toFont(opts.font);\r\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\r\n    const angle = Math.round(toDegrees(angleRadians));\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\r\n  }\r\n  scale.setCenterPoint(\r\n    orig.l - limits.l,\r\n    limits.r - orig.r,\r\n    orig.t - limits.t,\r\n    limits.b - orig.b\r\n  );\r\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\r\n  const sin = Math.abs(Math.sin(angle));\r\n  const cos = Math.abs(Math.cos(angle));\r\n  let x = 0;\r\n  let y = 0;\r\n  if (hLimits.start < orig.l) {\r\n    x = (orig.l - hLimits.start) / sin;\r\n    limits.l = Math.min(limits.l, orig.l - x);\r\n  } else if (hLimits.end > orig.r) {\r\n    x = (hLimits.end - orig.r) / sin;\r\n    limits.r = Math.max(limits.r, orig.r + x);\r\n  }\r\n  if (vLimits.start < orig.t) {\r\n    y = (orig.t - vLimits.start) / cos;\r\n    limits.t = Math.min(limits.t, orig.t - y);\r\n  } else if (vLimits.end > orig.b) {\r\n    y = (vLimits.end - orig.b) / cos;\r\n    limits.b = Math.max(limits.b, orig.b + y);\r\n  }\r\n}\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n  const items = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const opts = scale.options;\r\n  const extra = getTickBackdropHeight(opts) / 2;\r\n  const outerDistance = scale.drawingArea;\r\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\r\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\r\n    const size = labelSizes[i];\r\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n    items.push({\r\n      x: pointLabelPosition.x,\r\n      y,\r\n      textAlign,\r\n      left,\r\n      top: y,\r\n      right: left + size.w,\r\n      bottom: y + size.h\r\n    });\r\n  }\r\n  return items;\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction leftForTextAlign(x, w, align) {\r\n  if (align === 'right') {\r\n    x -= w;\r\n  } else if (align === 'center') {\r\n    x -= (w / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction yForAngle(y, h, angle) {\r\n  if (angle === 90 || angle === 270) {\r\n    y -= (h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    y -= h;\r\n  }\r\n  return y;\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      const backdropLeft = left - padding.left;\r\n      const backdropTop = top - padding.top;\r\n      const backdropWidth = right - left + padding.width;\r\n      const backdropHeight = bottom - top + padding.height;\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: backdropLeft,\r\n          y: backdropTop,\r\n          w: backdropWidth,\r\n          h: backdropHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\r\n      }\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction createPointLabelContext(parent, index, label) {\r\n  return createContext(parent, {\r\n    label,\r\n    index,\r\n    type: 'pointLabel'\r\n  });\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\r\n    const w = this.width = this.maxWidth - padding.width;\r\n    const h = this.height = this.maxHeight - padding.height;\r\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\r\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\r\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(false);\r\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n    this._pointLabels = this.getLabels()\r\n      .map((value, index) => {\r\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\r\n        return label || label === 0 ? label : '';\r\n      })\r\n      .filter((v, i) => this.chart.getDataVisibility(i));\r\n  }\r\n  fit() {\r\n    const opts = this.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(this);\r\n    } else {\r\n      this.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\r\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\r\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = this.drawingArea / (this.max - this.min);\r\n    if (this.options.reverse) {\r\n      return (this.max - value) * scalingFactor;\r\n    }\r\n    return (value - this.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n  }\r\n  getPointLabelContext(index) {\r\n    const pointLabels = this._pointLabels || [];\r\n    if (index >= 0 && index < pointLabels.length) {\r\n      const pointLabel = pointLabels[index];\r\n      return createPointLabelContext(this.getContext(), index, pointLabel);\r\n    }\r\n  }\r\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\r\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const {backgroundColor, grid: {circular}} = this.options;\r\n    if (backgroundColor) {\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = this._pointLabels.length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(this, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      this.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = this.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\r\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = labelCount - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\r\n        position = this.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.xCenter, this.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawBorder() {}\r\n  drawLabels() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = this.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(this.xCenter, this.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    this.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        ctx.font = tickFont.string;\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5,\r\n    centerPointLabels: false\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n    adapter.init(opts);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const options = this.options;\r\n    const adapter = this._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(this._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(this.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    this.min = Math.min(min, max - 1);\r\n    this.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      this.min = this._userMin || timestamps[0];\r\n      this.max = this._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\r\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\r\n      : determineMajorUnit(this._unit);\r\n    this.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n  }\r\n  afterAutoSkip() {\r\n    if (this.options.offsetAfterAutoskip) {\r\n      this.initOffsets(this.ticks.map(tick => +tick.value));\r\n    }\r\n  }\r\n  initOffsets(timestamps) {\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (this.options.offset && timestamps.length) {\r\n      first = this.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const adapter = this._adapter;\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const adapter = this._adapter;\r\n    const timeOpts = this.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const options = this.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const majorUnit = this._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForValue(value);\r\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return this.min + pos * (this.max - this.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const ticksOpts = this.options.ticks;\r\n    const tickLabelWidth = this.ctx.measureText(label).width;\r\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = this._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const timeOpts = this.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\r\n    const size = this._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    let timestamps = this._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    if (this._normalized && metas.length) {\r\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n    }\r\n    return (this._cache.data = this.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const timestamps = this._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = this.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(this, labels[i]));\r\n    }\r\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let lo = 0;\r\n  let hi = table.length - 1;\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    if (val >= table[lo].pos && val <= table[hi].pos) {\r\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\r\n    }\r\n    ({pos: prevSource, time: prevTarget} = table[lo]);\r\n    ({pos: nextSource, time: nextTarget} = table[hi]);\r\n  } else {\r\n    if (val >= table[lo].time && val <= table[hi].time) {\r\n      ({lo, hi} = _lookupByKey(table, 'time', val));\r\n    }\r\n    ({time: prevSource, pos: prevTarget} = table[lo]);\r\n    ({time: nextSource, pos: nextTarget} = table[hi]);\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._minPos = undefined;\r\n    this._tableRange = undefined;\r\n  }\r\n  initOffsets() {\r\n    const timestamps = this._getTimestampsForTable();\r\n    const table = this._table = this.buildLookupTable(timestamps);\r\n    this._minPos = interpolate(table, this.min);\r\n    this._tableRange = interpolate(table, this.max) - this._minPos;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const {min, max} = this;\r\n    const items = [];\r\n    const table = [];\r\n    let i, ilen, prev, curr, next;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr >= min && curr <= max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    if (items.length < 2) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      next = items[i + 1];\r\n      prev = items[i - 1];\r\n      curr = items[i];\r\n      if (Math.round((next + prev) / 2) !== curr) {\r\n        table.push({time: curr, pos: i / (ilen - 1)});\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n  _getTimestampsForTable() {\r\n    let timestamps = this._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = this.getDataTimestamps();\r\n    const label = this.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = this.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = this._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getDecimalForValue(value) {\r\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst registerables = [\r\n  controllers,\r\n  elements,\r\n  plugins,\r\n  scales,\r\n];\r\n\r\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\r\n"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","root":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\node_modules\\chart.js\\dist\\chart.mjs","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"node_modules/chart.js/dist/chart.mjs"}},"code":"!function (module1) {\n  let _objectSpread;\n\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default(v) {\n      _objectSpread = v;\n    }\n\n  }, 0);\n  module1.export({\n    Animation: () => Animation,\n    Animations: () => Animations,\n    ArcElement: () => ArcElement,\n    BarController: () => BarController,\n    BarElement: () => BarElement,\n    BasePlatform: () => BasePlatform,\n    BasicPlatform: () => BasicPlatform,\n    BubbleController: () => BubbleController,\n    CategoryScale: () => CategoryScale,\n    Chart: () => Chart,\n    DatasetController: () => DatasetController,\n    Decimation: () => plugin_decimation,\n    DomPlatform: () => DomPlatform,\n    DoughnutController: () => DoughnutController,\n    Element: () => Element,\n    Filler: () => index,\n    Interaction: () => Interaction,\n    Legend: () => plugin_legend,\n    LineController: () => LineController,\n    LineElement: () => LineElement,\n    LinearScale: () => LinearScale,\n    LogarithmicScale: () => LogarithmicScale,\n    PieController: () => PieController,\n    PointElement: () => PointElement,\n    PolarAreaController: () => PolarAreaController,\n    RadarController: () => RadarController,\n    RadialLinearScale: () => RadialLinearScale,\n    Scale: () => Scale,\n    ScatterController: () => ScatterController,\n    SubTitle: () => plugin_subtitle,\n    Ticks: () => Ticks,\n    TimeScale: () => TimeScale,\n    TimeSeriesScale: () => TimeSeriesScale,\n    Title: () => plugin_title,\n    Tooltip: () => plugin_tooltip,\n    _adapters: () => adapters,\n    _detectPlatform: () => _detectPlatform,\n    animator: () => animator,\n    controllers: () => controllers,\n    elements: () => elements,\n    layouts: () => layouts,\n    plugins: () => plugins,\n    registerables: () => registerables,\n    registry: () => registry,\n    scales: () => scales\n  });\n\n  let requestAnimFrame, resolve, effects, color, defaults, isObject, isArray, valueOrDefault, unlistenArrayEvents, listenArrayEvents, resolveObjectKey, isNumberFinite, createContext, defined, sign, isNullOrUndef, _arrayUnique, toRadians, toPercentage, toDimension, TAU, formatNumber, _angleBetween, HALF_PI, PI, _getStartAndCountOfVisiblePoints, _scaleRangesChanged, isNumber, _parseObjectDataRadialScale, log10, _factorize, finiteOrDefault, callback, _addGrace, _limitValue, toDegrees, _measureText, _int16Range, _alignPixel, toPadding, clipArea, renderText, unclipArea, toFont, each, _toLeftRightCenter, _alignStartEnd, overrides, merge, _capitalize, getRelativePosition, _rlookupByKey, _lookupByKey, _isPointInArea, getAngleFromPoint, getMaximumSize, _getParentNode, readUsedSize, throttled, supportsEventListenerOptions, _isDomSupported, descriptors, isFunction, _attachContext, _createResolver, _descriptors, mergeIf, uid, debounce, retinaScale, clearCanvas, setsEqual, _elementsEqual, _isClickEvent, _isBetween, _readValueToProps, _updateBezierControlPoints, _computeSegments, _boundSegments, _steppedInterpolation, _bezierInterpolation, _pointInLine, _steppedLineTo, _bezierCurveTo, drawPoint, addRoundedRectPath, toTRBL, toTRBLCorners, _boundSegment, _normalizeAngle, getRtlAdapter, overrideTextDirection, _textX, restoreTextDirection, drawPointLegend, noop, distanceBetweenPoints, _setMinAndMaxByKey, niceNum, almostWhole, almostEquals, _decimalPlaces, _longestText, _filterBetween, _lookup;\n\n  module1.link(\"./chunks/helpers.segment.mjs\", {\n    r(v) {\n      requestAnimFrame = v;\n    },\n\n    a(v) {\n      resolve = v;\n    },\n\n    e(v) {\n      effects = v;\n    },\n\n    c(v) {\n      color = v;\n    },\n\n    d(v) {\n      defaults = v;\n    },\n\n    i(v) {\n      isObject = v;\n    },\n\n    b(v) {\n      isArray = v;\n    },\n\n    v(v) {\n      valueOrDefault = v;\n    },\n\n    u(v) {\n      unlistenArrayEvents = v;\n    },\n\n    l(v) {\n      listenArrayEvents = v;\n    },\n\n    f(v) {\n      resolveObjectKey = v;\n    },\n\n    g(v) {\n      isNumberFinite = v;\n    },\n\n    h(v) {\n      createContext = v;\n    },\n\n    j(v) {\n      defined = v;\n    },\n\n    s(v) {\n      sign = v;\n    },\n\n    k(v) {\n      isNullOrUndef = v;\n    },\n\n    _(v) {\n      _arrayUnique = v;\n    },\n\n    t(v) {\n      toRadians = v;\n    },\n\n    m(v) {\n      toPercentage = v;\n    },\n\n    n(v) {\n      toDimension = v;\n    },\n\n    T(v) {\n      TAU = v;\n    },\n\n    o(v) {\n      formatNumber = v;\n    },\n\n    p(v) {\n      _angleBetween = v;\n    },\n\n    H(v) {\n      HALF_PI = v;\n    },\n\n    P(v) {\n      PI = v;\n    },\n\n    q(v) {\n      _getStartAndCountOfVisiblePoints = v;\n    },\n\n    w(v) {\n      _scaleRangesChanged = v;\n    },\n\n    x(v) {\n      isNumber = v;\n    },\n\n    y(v) {\n      _parseObjectDataRadialScale = v;\n    },\n\n    z(v) {\n      log10 = v;\n    },\n\n    A(v) {\n      _factorize = v;\n    },\n\n    B(v) {\n      finiteOrDefault = v;\n    },\n\n    C(v) {\n      callback = v;\n    },\n\n    D(v) {\n      _addGrace = v;\n    },\n\n    E(v) {\n      _limitValue = v;\n    },\n\n    F(v) {\n      toDegrees = v;\n    },\n\n    G(v) {\n      _measureText = v;\n    },\n\n    I(v) {\n      _int16Range = v;\n    },\n\n    J(v) {\n      _alignPixel = v;\n    },\n\n    K(v) {\n      toPadding = v;\n    },\n\n    L(v) {\n      clipArea = v;\n    },\n\n    M(v) {\n      renderText = v;\n    },\n\n    N(v) {\n      unclipArea = v;\n    },\n\n    O(v) {\n      toFont = v;\n    },\n\n    Q(v) {\n      each = v;\n    },\n\n    R(v) {\n      _toLeftRightCenter = v;\n    },\n\n    S(v) {\n      _alignStartEnd = v;\n    },\n\n    U(v) {\n      overrides = v;\n    },\n\n    V(v) {\n      merge = v;\n    },\n\n    W(v) {\n      _capitalize = v;\n    },\n\n    X(v) {\n      getRelativePosition = v;\n    },\n\n    Y(v) {\n      _rlookupByKey = v;\n    },\n\n    Z(v) {\n      _lookupByKey = v;\n    },\n\n    $(v) {\n      _isPointInArea = v;\n    },\n\n    a0(v) {\n      getAngleFromPoint = v;\n    },\n\n    a1(v) {\n      getMaximumSize = v;\n    },\n\n    a2(v) {\n      _getParentNode = v;\n    },\n\n    a3(v) {\n      readUsedSize = v;\n    },\n\n    a4(v) {\n      throttled = v;\n    },\n\n    a5(v) {\n      supportsEventListenerOptions = v;\n    },\n\n    a6(v) {\n      _isDomSupported = v;\n    },\n\n    a7(v) {\n      descriptors = v;\n    },\n\n    a8(v) {\n      isFunction = v;\n    },\n\n    a9(v) {\n      _attachContext = v;\n    },\n\n    aa(v) {\n      _createResolver = v;\n    },\n\n    ab(v) {\n      _descriptors = v;\n    },\n\n    ac(v) {\n      mergeIf = v;\n    },\n\n    ad(v) {\n      uid = v;\n    },\n\n    ae(v) {\n      debounce = v;\n    },\n\n    af(v) {\n      retinaScale = v;\n    },\n\n    ag(v) {\n      clearCanvas = v;\n    },\n\n    ah(v) {\n      setsEqual = v;\n    },\n\n    ai(v) {\n      _elementsEqual = v;\n    },\n\n    aj(v) {\n      _isClickEvent = v;\n    },\n\n    ak(v) {\n      _isBetween = v;\n    },\n\n    al(v) {\n      _readValueToProps = v;\n    },\n\n    am(v) {\n      _updateBezierControlPoints = v;\n    },\n\n    an(v) {\n      _computeSegments = v;\n    },\n\n    ao(v) {\n      _boundSegments = v;\n    },\n\n    ap(v) {\n      _steppedInterpolation = v;\n    },\n\n    aq(v) {\n      _bezierInterpolation = v;\n    },\n\n    ar(v) {\n      _pointInLine = v;\n    },\n\n    as(v) {\n      _steppedLineTo = v;\n    },\n\n    at(v) {\n      _bezierCurveTo = v;\n    },\n\n    au(v) {\n      drawPoint = v;\n    },\n\n    av(v) {\n      addRoundedRectPath = v;\n    },\n\n    aw(v) {\n      toTRBL = v;\n    },\n\n    ax(v) {\n      toTRBLCorners = v;\n    },\n\n    ay(v) {\n      _boundSegment = v;\n    },\n\n    az(v) {\n      _normalizeAngle = v;\n    },\n\n    aA(v) {\n      getRtlAdapter = v;\n    },\n\n    aB(v) {\n      overrideTextDirection = v;\n    },\n\n    aC(v) {\n      _textX = v;\n    },\n\n    aD(v) {\n      restoreTextDirection = v;\n    },\n\n    aE(v) {\n      drawPointLegend = v;\n    },\n\n    aF(v) {\n      noop = v;\n    },\n\n    aG(v) {\n      distanceBetweenPoints = v;\n    },\n\n    aH(v) {\n      _setMinAndMaxByKey = v;\n    },\n\n    aI(v) {\n      niceNum = v;\n    },\n\n    aJ(v) {\n      almostWhole = v;\n    },\n\n    aK(v) {\n      almostEquals = v;\n    },\n\n    aL(v) {\n      _decimalPlaces = v;\n    },\n\n    aM(v) {\n      _longestText = v;\n    },\n\n    aN(v) {\n      _filterBetween = v;\n    },\n\n    aO(v) {\n      _lookup = v;\n    }\n\n  }, 0);\n  module1.link(\"./chunks/helpers.segment.mjs\", {\n    d: \"defaults\"\n  }, 1);\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n  /*!\r\n   * Chart.js v3.9.1\r\n   * https://www.chartjs.org\r\n   * (c) 2022 Chart.js Contributors\r\n   * Released under the MIT License\r\n   */\n\n\n  class Animator {\n    constructor() {\n      this._request = null;\n      this._charts = new Map();\n      this._running = false;\n      this._lastDate = undefined;\n    }\n\n    _notify(chart, anims, date, type) {\n      const callbacks = anims.listeners[type];\n      const numSteps = anims.duration;\n      callbacks.forEach(fn => fn({\n        chart,\n        initial: anims.initial,\n        numSteps,\n        currentStep: Math.min(date - anims.start, numSteps)\n      }));\n    }\n\n    _refresh() {\n      if (this._request) {\n        return;\n      }\n\n      this._running = true;\n      this._request = requestAnimFrame.call(window, () => {\n        this._update();\n\n        this._request = null;\n\n        if (this._running) {\n          this._refresh();\n        }\n      });\n    }\n\n    _update() {\n      let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      let remaining = 0;\n\n      this._charts.forEach((anims, chart) => {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        const items = anims.items;\n        let i = items.length - 1;\n        let draw = false;\n        let item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          this._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          this._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      this._lastDate = date;\n\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n\n    _getAnims(chart) {\n      const charts = this._charts;\n      let anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n\n    listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n\n    add(chart, items) {\n      if (!items || !items.length) {\n        return;\n      }\n\n      this._getAnims(chart).items.push(...items);\n    }\n\n    has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n\n    start(chart) {\n      const anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n      this._refresh();\n    }\n\n    running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      const anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n\n    stop(chart) {\n      const anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n\n    remove(chart) {\n      return this._charts.delete(chart);\n    }\n\n  }\n\n  var animator = new Animator();\n  const transparent = 'transparent';\n  const interpolators = {\n    boolean(from, to, factor) {\n      return factor > 0.5 ? to : from;\n    },\n\n    color(from, to, factor) {\n      const c0 = color(from || transparent);\n      const c1 = c0.valid && color(to || transparent);\n      return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n\n    number(from, to, factor) {\n      return from + (to - from) * factor;\n    }\n\n  };\n\n  class Animation {\n    constructor(cfg, target, prop, to) {\n      const currentValue = target[prop];\n      to = resolve([cfg.to, to, currentValue, cfg.from]);\n      const from = resolve([cfg.from, currentValue, to]);\n      this._active = true;\n      this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n      this._easing = effects[cfg.easing] || effects.linear;\n      this._start = Math.floor(Date.now() + (cfg.delay || 0));\n      this._duration = this._total = Math.floor(cfg.duration);\n      this._loop = !!cfg.loop;\n      this._target = target;\n      this._prop = prop;\n      this._from = from;\n      this._to = to;\n      this._promises = undefined;\n    }\n\n    active() {\n      return this._active;\n    }\n\n    update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n\n        const currentValue = this._target[this._prop];\n        const elapsed = date - this._start;\n        const remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n\n    cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n\n        this._notify(false);\n      }\n    }\n\n    tick(date) {\n      const elapsed = date - this._start;\n      const duration = this._duration;\n      const prop = this._prop;\n      const from = this._from;\n      const loop = this._loop;\n      const to = this._to;\n      let factor;\n      this._active = from !== to && (loop || elapsed < duration);\n\n      if (!this._active) {\n        this._target[prop] = to;\n\n        this._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n\n    wait() {\n      const promises = this._promises || (this._promises = []);\n      return new Promise((res, rej) => {\n        promises.push({\n          res,\n          rej\n        });\n      });\n    }\n\n    _notify(resolved) {\n      const method = resolved ? 'res' : 'rej';\n      const promises = this._promises || [];\n\n      for (let i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n\n  }\n\n  const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\n  const colors = ['color', 'borderColor', 'backgroundColor'];\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined\n  });\n  const animationOptions = Object.keys(defaults.animation);\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n  });\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    }\n  });\n  defaults.describe('animations', {\n    _fallback: 'animation'\n  });\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0\n        }\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0\n        }\n      }\n    }\n  });\n\n  class Animations {\n    constructor(chart, config) {\n      this._chart = chart;\n      this._properties = new Map();\n      this.configure(config);\n    }\n\n    configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      const animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(key => {\n        const cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        const resolved = {};\n\n        for (const option of animationOptions) {\n          resolved[option] = cfg[option];\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n\n    _animateOptions(target, values) {\n      const newOptions = values.options;\n      const options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      const animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(() => {\n          target.options = newOptions;\n        }, () => {});\n      }\n\n      return animations;\n    }\n\n    _createAnimations(target, values) {\n      const animatedProps = this._properties;\n      const animations = [];\n      const running = target.$animations || (target.$animations = {});\n      const props = Object.keys(values);\n      const date = Date.now();\n      let i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        const prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push(...this._animateOptions(target, values));\n          continue;\n        }\n\n        const value = values[prop];\n        let animation = running[prop];\n        const cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n\n    update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      const animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n\n  }\n\n  function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n\n    for (let i = 0; i < keys.length; i++) {\n      const anim = animations[keys[i]];\n\n      if (anim && anim.active()) {\n        running.push(anim.wait());\n      }\n    }\n\n    return Promise.all(running);\n  }\n\n  function resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n      return;\n    }\n\n    let options = target.options;\n\n    if (!options) {\n      target.options = newOptions;\n      return;\n    }\n\n    if (options.$shared) {\n      target.options = options = Object.assign({}, options, {\n        $shared: false,\n        $animations: {}\n      });\n    }\n\n    return options;\n  }\n\n  function scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n      start: reverse ? max : min,\n      end: reverse ? min : max\n    };\n  }\n\n  function defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n      return false;\n    }\n\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n      top: y.end,\n      right: x.end,\n      bottom: y.start,\n      left: x.start\n    };\n  }\n\n  function toClip(value) {\n    let t, r, b, l;\n\n    if (isObject(value)) {\n      t = value.top;\n      r = value.right;\n      b = value.bottom;\n      l = value.left;\n    } else {\n      t = r = b = l = value;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      disabled: value === false\n    };\n  }\n\n  function getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      keys.push(metasets[i].index);\n    }\n\n    return keys;\n  }\n\n  function applyStack(stack, value, dsIndex) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n\n    if (value === null) {\n      return;\n    }\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      datasetIndex = +keys[i];\n\n      if (datasetIndex === dsIndex) {\n        if (options.all) {\n          continue;\n        }\n\n        break;\n      }\n\n      otherValue = stack.values[datasetIndex];\n\n      if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n        value += otherValue;\n      }\n    }\n\n    return value;\n  }\n\n  function convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      adata[i] = {\n        x: key,\n        y: data[key]\n      };\n    }\n\n    return adata;\n  }\n\n  function isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n  }\n\n  function getStackKey(indexScale, valueScale, meta) {\n    return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n  }\n\n  function getUserBounds(scale) {\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = scale.getUserBounds();\n    return {\n      min: minDefined ? min : Number.NEGATIVE_INFINITY,\n      max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n  }\n\n  function getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n  }\n\n  function getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n      const value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n\n    return null;\n  }\n\n  function updateStacks(controller, parsed) {\n    const {\n      chart,\n      _cachedMeta: meta\n    } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const {\n      iScale,\n      vScale,\n      index: datasetIndex\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n\n    for (let i = 0; i < ilen; ++i) {\n      const item = parsed[i];\n      const {\n        [iAxis]: index,\n        [vAxis]: value\n      } = item;\n      const itemStacks = item._stacks || (item._stacks = {});\n      stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n      stack[datasetIndex] = value;\n      stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n      stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n  }\n\n  function getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n  }\n\n  function createDatasetContext(parent, index) {\n    return createContext(parent, {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    });\n  }\n\n  function createDataContext(parent, index, element) {\n    return createContext(parent, {\n      active: false,\n      dataIndex: index,\n      parsed: undefined,\n      raw: undefined,\n      element,\n      index,\n      mode: 'default',\n      type: 'data'\n    });\n  }\n\n  function clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n\n    if (!axis) {\n      return;\n    }\n\n    items = items || meta._parsed;\n\n    for (const parsed of items) {\n      const stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][datasetIndex];\n    }\n  }\n\n  const isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\n  const cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\n  const createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n\n  class DatasetController {\n    constructor(chart, datasetIndex) {\n      this.chart = chart;\n      this._ctx = chart.ctx;\n      this.index = datasetIndex;\n      this._cachedDataOpts = {};\n      this._cachedMeta = this.getMeta();\n      this._type = this._cachedMeta.type;\n      this.options = undefined;\n      this._parsing = false;\n      this._data = undefined;\n      this._objectData = undefined;\n      this._sharedOptions = undefined;\n      this._drawStart = undefined;\n      this._drawCount = undefined;\n      this.enableOptionSharing = false;\n      this.supportsDecimation = false;\n      this.$context = undefined;\n      this._syncList = [];\n      this.initialize();\n    }\n\n    initialize() {\n      const meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n\n    updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n\n    linkScales() {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n\n      const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n      const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      const indexAxis = meta.indexAxis;\n      const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n\n    getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n\n    getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n\n    getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n\n    _getOtherScale(scale) {\n      const meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n\n    reset() {\n      this._update('reset');\n    }\n\n    _destroy() {\n      const meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n\n    _dataCheck() {\n      const dataset = this.getDataset();\n      const data = dataset.data || (dataset.data = []);\n      const _data = this._data;\n\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          const meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n\n    addElements() {\n      const meta = this._cachedMeta;\n\n      this._dataCheck();\n\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n\n    buildOrUpdateElements(resetNewElements) {\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n      let stackChanged = false;\n\n      this._dataCheck();\n\n      const oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      this._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n\n    configure() {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetScopeKeys(this._type);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n\n    parse(start, count) {\n      const {\n        _cachedMeta: meta,\n        _data: data\n      } = this;\n      const {\n        iScale,\n        _stacked\n      } = meta;\n      const iAxis = iScale.axis;\n      let sorted = start === 0 && count === data.length ? true : meta._sorted;\n      let prev = start > 0 && meta._parsed[start - 1];\n      let i, cur, parsed;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n\n        const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n\n    parsePrimitiveData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const labels = iScale.getLabels();\n      const singleScale = iScale === vScale;\n      const parsed = new Array(count);\n      let i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = {\n          [iAxis]: singleScale || iScale.parse(labels[index], index),\n          [vAxis]: vScale.parse(data[index], index)\n        };\n      }\n\n      return parsed;\n    }\n\n    parseArrayData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n\n    parseObjectData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n\n    getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n\n    getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n\n    applyStack(scale, parsed, mode) {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const value = parsed[scale.axis];\n      const stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return applyStack(stack, value, meta.index, {\n        mode\n      });\n    }\n\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      const parsedValue = parsed[scale.axis];\n      let value = parsedValue === null ? NaN : parsedValue;\n      const values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        value = applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n\n    getMinMax(scale, canStack) {\n      const meta = this._cachedMeta;\n      const _parsed = meta._parsed;\n      const sorted = meta._sorted && scale === meta.iScale;\n      const ilen = _parsed.length;\n\n      const otherScale = this._getOtherScale(scale);\n\n      const stack = createStack(canStack, meta, this.chart);\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      const {\n        min: otherMin,\n        max: otherMax\n      } = getUserBounds(otherScale);\n      let i, parsed;\n\n      function _skip() {\n        parsed = _parsed[i];\n        const otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n\n    getAllParsedValues(scale) {\n      const parsed = this._cachedMeta._parsed;\n      const values = [];\n      let i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n\n    getMaxOverflow() {\n      return false;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const vScale = meta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n\n    _update(mode) {\n      const meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n\n    update(mode) {}\n\n    draw() {\n      const ctx = this._ctx;\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const elements = meta.data || [];\n      const area = chart.chartArea;\n      const active = [];\n      const start = this._drawStart || 0;\n      const count = this._drawCount || elements.length - start;\n      const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      let i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        const element = elements[i];\n\n        if (element.hidden) {\n          continue;\n        }\n\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n\n    getStyle(index, active) {\n      const mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n\n    getContext(index, active, mode) {\n      const dataset = this.getDataset();\n      let context;\n\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        const element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n\n    resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n\n    resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n\n    _resolveElementOptions(elementType) {\n      let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      let index = arguments.length > 2 ? arguments[2] : undefined;\n      const active = mode === 'active';\n      const cache = this._cachedDataOpts;\n      const cacheKey = elementType + '-' + mode;\n      const cached = cache[cacheKey];\n      const sharing = this.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      const config = this.chart.config;\n      const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      const prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      const names = Object.keys(defaults.elements[elementType]);\n\n      const context = () => this.getContext(index, active);\n\n      const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n\n    _resolveAnimations(index, transition, active) {\n      const chart = this.chart;\n      const cache = this._cachedDataOpts;\n      const cacheKey = \"animation-\".concat(transition);\n      const cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      let options;\n\n      if (chart.options.animation !== false) {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n\n      const animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n\n    getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n\n    includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n\n    _getSharedOptions(start, mode) {\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const previouslySharedOptions = this._sharedOptions;\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions,\n        includeOptions\n      };\n    }\n\n    updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n\n    updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n\n    _setStyle(element, index, mode, active) {\n      element.active = active;\n      const options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n\n    removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n\n    setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n\n    _removeDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n\n    _setDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n\n    _resyncElements(resetNewElements) {\n      const data = this._data;\n      const elements = this._cachedMeta.data;\n\n      for (const [method, arg1, arg2] of this._syncList) {\n        this[method](arg1, arg2);\n      }\n\n      this._syncList = [];\n      const numMeta = elements.length;\n      const numData = data.length;\n      const count = Math.min(numData, numMeta);\n\n      if (count) {\n        this.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n\n    _insertElements(start, count) {\n      let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      const meta = this._cachedMeta;\n      const data = meta.data;\n      const end = start + count;\n      let i;\n\n      const move = arr => {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n\n      this.parse(start, count);\n\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n\n    updateElements(element, start, count, mode) {}\n\n    _removeElements(start, count) {\n      const meta = this._cachedMeta;\n\n      if (this._parsing) {\n        const removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n\n    _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        const [method, arg1, arg2] = args;\n        this[method](arg1, arg2);\n      }\n\n      this.chart._dataChanges.push([this.index, ...args]);\n    }\n\n    _onDataPush() {\n      const count = arguments.length;\n\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n\n    _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n\n    _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n\n    _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n\n      const newCount = arguments.length - 2;\n\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n\n    _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n\n  }\n\n  DatasetController.defaults = {};\n  DatasetController.prototype.datasetElementType = null;\n  DatasetController.prototype.dataElementType = null;\n\n  function getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n      const visibleMetas = scale.getMatchingVisibleMetas(type);\n      let values = [];\n\n      for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n        values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n      }\n\n      scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n    }\n\n    return scale._cache.$bar;\n  }\n\n  function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n\n    const updateMinAndPrev = () => {\n      if (curr === 32767 || curr === -32768) {\n        return;\n      }\n\n      if (defined(prev)) {\n        min = Math.min(min, Math.abs(curr - prev) || min);\n      }\n\n      prev = curr;\n    };\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      curr = scale.getPixelForValue(values[i]);\n      updateMinAndPrev();\n    }\n\n    prev = undefined;\n\n    for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      updateMinAndPrev();\n    }\n\n    return min;\n  }\n\n  function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n\n    if (isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      size = thickness * stackCount;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / stackCount,\n      ratio,\n      start: ruler.pixels[index] - size / 2\n    };\n  }\n\n  function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n\n    if (prev === null) {\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      next = curr + curr - prev;\n    }\n\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / stackCount,\n      ratio: options.barPercentage,\n      start\n    };\n  }\n\n  function parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n\n    if (Math.abs(min) > Math.abs(max)) {\n      barStart = max;\n      barEnd = min;\n    }\n\n    item[vScale.axis] = barEnd;\n    item._custom = {\n      barStart,\n      barEnd,\n      start: startValue,\n      end: endValue,\n      min,\n      max\n    };\n  }\n\n  function parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n      parseFloatBar(entry, item, vScale, i);\n    } else {\n      item[vScale.axis] = vScale.parse(entry, i);\n    }\n\n    return item;\n  }\n\n  function parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      entry = data[i];\n      item = {};\n      item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n      parsed.push(parseValue(entry, item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  function isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n  }\n\n  function barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n      return sign(size);\n    }\n\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n  }\n\n  function borderProps(properties) {\n    let reverse, start, end, top, bottom;\n\n    if (properties.horizontal) {\n      reverse = properties.base > properties.x;\n      start = 'left';\n      end = 'right';\n    } else {\n      reverse = properties.base < properties.y;\n      start = 'bottom';\n      end = 'top';\n    }\n\n    if (reverse) {\n      top = 'end';\n      bottom = 'start';\n    } else {\n      top = 'start';\n      bottom = 'end';\n    }\n\n    return {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    };\n  }\n\n  function setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n\n    if (!edge) {\n      properties.borderSkipped = res;\n      return;\n    }\n\n    if (edge === true) {\n      properties.borderSkipped = {\n        top: true,\n        right: true,\n        bottom: true,\n        left: true\n      };\n      return;\n    }\n\n    const {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    } = borderProps(properties);\n\n    if (edge === 'middle' && stack) {\n      properties.enableBorderRadius = true;\n\n      if ((stack._top || 0) === index) {\n        edge = top;\n      } else if ((stack._bottom || 0) === index) {\n        edge = bottom;\n      } else {\n        res[parseEdge(bottom, start, end, reverse)] = true;\n        edge = top;\n      }\n    }\n\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n  }\n\n  function parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n      edge = swap(edge, a, b);\n      edge = startEnd(edge, b, a);\n    } else {\n      edge = startEnd(edge, a, b);\n    }\n\n    return edge;\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n  }\n\n  function setInflateAmount(properties, _ref, ratio) {\n    let {\n      inflateAmount\n    } = _ref;\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n  }\n\n  class BarController extends DatasetController {\n    parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n\n    parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n\n    parseObjectData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const parsed = [];\n      let i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      super.updateRangeFromParsed(range, scale, parsed, stack);\n      const custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n\n    getMaxOverflow() {\n      return 0;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value\n      };\n    }\n\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n      const meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n\n    update(mode) {\n      const meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n\n    updateElements(bars, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        index,\n        _cachedMeta: {\n          vScale\n        }\n      } = this;\n      const base = vScale.getBasePixel();\n      const horizontal = vScale.isHorizontal();\n\n      const ruler = this._getRuler();\n\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n\n      for (let i = start; i < start + count; i++) {\n        const parsed = this.getParsed(i);\n        const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n\n        const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n        const stack = (parsed._stacks || {})[vScale.axis];\n        const properties = {\n          horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        const options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n\n    _getStacks(last, dataIndex) {\n      const {\n        iScale\n      } = this._cachedMeta;\n      const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n      const stacked = iScale.options.stacked;\n      const stacks = [];\n\n      const skipNull = meta => {\n        const parsed = meta.controller.getParsed(dataIndex);\n        const val = parsed && parsed[meta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n\n      for (const meta of metasets) {\n        if (dataIndex !== undefined && skipNull(meta)) {\n          continue;\n        }\n\n        if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n          stacks.push(meta.stack);\n        }\n\n        if (meta.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n\n    _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n\n    _getStackIndex(datasetIndex, name, dataIndex) {\n      const stacks = this._getStacks(datasetIndex, dataIndex);\n\n      const index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n\n    _getRuler() {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const pixels = [];\n      let i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n\n      const barThickness = opts.barThickness;\n      const min = barThickness || computeMinSampleSize(meta);\n      return {\n        min,\n        pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n\n    _calculateBarValuePixels(index) {\n      const {\n        _cachedMeta: {\n          vScale,\n          _stacked\n        },\n        options: {\n          base: baseValue,\n          minBarLength\n        }\n      } = this;\n      const actualBase = baseValue || 0;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const floating = isFloatBar(custom);\n      let value = parsed[vScale.axis];\n      let start = 0;\n      let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      let head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      let base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n\n        const startPixel = vScale.getPixelForDecimal(0);\n        const endPixel = vScale.getPixelForDecimal(1);\n        const min = Math.min(startPixel, endPixel);\n        const max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n\n      return {\n        size,\n        base,\n        head,\n        center: head + size / 2\n      };\n    }\n\n    _calculateBarIndexPixels(index, ruler) {\n      const scale = ruler.scale;\n      const options = this.options;\n      const skipNull = options.skipNull;\n      const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      let center, size;\n\n      if (ruler.grouped) {\n        const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center,\n        size\n      };\n    }\n\n    draw() {\n      const meta = this._cachedMeta;\n      const vScale = meta.vScale;\n      const rects = meta.data;\n      const ilen = rects.length;\n      let i = 0;\n\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n\n  }\n\n  BarController.id = 'bar';\n  BarController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  BarController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n\n  class BubbleController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n\n    parsePrimitiveData(meta, data, start, count) {\n      const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n      for (let i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n\n      return parsed;\n    }\n\n    parseArrayData(meta, data, start, count) {\n      const parsed = super.parseArrayData(meta, data, start, count);\n\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n\n    parseObjectData(meta, data, start, count) {\n      const parsed = super.parseObjectData(meta, data, start, count);\n\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n\n    getMaxOverflow() {\n      const data = this._cachedMeta.data;\n      let max = 0;\n\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const x = xScale.getLabelForValue(parsed.x);\n      const y = yScale.getLabelForValue(parsed.y);\n      const r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n\n    update(mode) {\n      const points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale\n      } = this._cachedMeta;\n\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const parsed = !reset && this.getParsed(i);\n        const properties = {};\n        const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n\n    resolveDataElementOptions(index, mode) {\n      const parsed = this.getParsed(index);\n      let values = super.resolveDataElementOptions(index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      const radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n\n  }\n\n  BubbleController.id = 'bubble';\n  BubbleController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  BubbleController.overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          }\n\n        }\n      }\n    }\n  };\n\n  function getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (circumference < TAU) {\n      const startAngle = rotation;\n      const endAngle = startAngle + circumference;\n      const startX = Math.cos(startAngle);\n      const startY = Math.sin(startAngle);\n      const endX = Math.cos(endAngle);\n      const endY = Math.sin(endAngle);\n\n      const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n      const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n      const maxX = calcMax(0, startX, endX);\n      const maxY = calcMax(HALF_PI, startY, endY);\n      const minX = calcMin(PI, startX, endX);\n      const minY = calcMin(PI + HALF_PI, startY, endY);\n      ratioX = (maxX - minX) / 2;\n      ratioY = (maxY - minY) / 2;\n      offsetX = -(maxX + minX) / 2;\n      offsetY = -(maxY + minY) / 2;\n    }\n\n    return {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    };\n  }\n\n  class DoughnutController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.enableOptionSharing = true;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.offsetX = undefined;\n      this.offsetY = undefined;\n    }\n\n    linkScales() {}\n\n    parse(start, count) {\n      const data = this.getDataset().data;\n      const meta = this._cachedMeta;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        let getter = i => +data[i];\n\n        if (isObject(data[start])) {\n          const {\n            key = 'value'\n          } = this._parsing;\n\n          getter = i => +resolveObjectKey(data[i], key);\n        }\n\n        let i, ilen;\n\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n\n    _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n\n    _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n\n    _getRotationExtents() {\n      let min = TAU;\n      let max = -TAU;\n\n      for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          const controller = this.chart.getDatasetMeta(i).controller;\n\n          const rotation = controller._getRotation();\n\n          const circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n\n    update(mode) {\n      const chart = this.chart;\n      const {\n        chartArea\n      } = chart;\n      const meta = this._cachedMeta;\n      const arcs = meta.data;\n      const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n      const chartWeight = this._getRingWeight(this.index);\n\n      const {\n        circumference,\n        rotation\n      } = this._getRotationExtents();\n\n      const {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n      } = getRatioAndOffset(rotation, circumference, cutout);\n      const maxWidth = (chartArea.width - spacing) / ratioX;\n      const maxHeight = (chartArea.height - spacing) / ratioY;\n      const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      const outerRadius = toDimension(this.options.radius, maxRadius);\n      const innerRadius = Math.max(outerRadius * cutout, 0);\n\n      const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n\n    _circumference(i, reset) {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n\n      const circumference = this._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const centerX = (chartArea.left + chartArea.right) / 2;\n      const centerY = (chartArea.top + chartArea.bottom) / 2;\n      const animateScale = reset && animationOpts.animateScale;\n      const innerRadius = animateScale ? 0 : this.innerRadius;\n      const outerRadius = animateScale ? 0 : this.outerRadius;\n\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n\n      let startAngle = this._getRotation();\n\n      let i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        const circumference = this._circumference(i, reset);\n\n        const arc = arcs[i];\n        const properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle,\n          endAngle: startAngle + circumference,\n          circumference,\n          outerRadius,\n          innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n\n    calculateTotal() {\n      const meta = this._cachedMeta;\n      const metaData = meta.data;\n      let total = 0;\n      let i;\n\n      for (i = 0; i < metaData.length; i++) {\n        const value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n\n    calculateCircumference(value) {\n      const total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n\n    getMaxBorderWidth(arcs) {\n      let max = 0;\n      const chart = this.chart;\n      let i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n\n    getMaxOffset(arcs) {\n      let max = 0;\n\n      for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n        const options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n\n    _getRingWeightOffset(datasetIndex) {\n      let ringWeightOffset = 0;\n\n      for (let i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n\n    _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n\n    _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n\n  }\n\n  DoughnutController.id = 'doughnut';\n  DoughnutController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  DoughnutController.descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing'\n  };\n  DoughnutController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n\n          label(tooltipItem) {\n            let dataLabel = tooltipItem.label;\n            const value = ': ' + tooltipItem.formattedValue;\n\n            if (isArray(dataLabel)) {\n              dataLabel = dataLabel.slice();\n              dataLabel[0] += value;\n            } else {\n              dataLabel += value;\n            }\n\n            return dataLabel;\n          }\n\n        }\n      }\n    }\n  };\n\n  class LineController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      super.initialize();\n    }\n\n    update(mode) {\n      const meta = this._cachedMeta;\n      const {\n        dataset: line,\n        data: points = [],\n        _dataset\n      } = meta;\n      const animationsDisabled = this.chart._animationsDisabled;\n\n      let {\n        start,\n        count\n      } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked,\n        _dataset\n      } = this._cachedMeta;\n\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const {\n        spanGaps,\n        segment\n      } = this.options;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = this.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n    }\n\n    getMaxOverflow() {\n      const meta = this._cachedMeta;\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n      const data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n\n    draw() {\n      const meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      super.draw();\n    }\n\n  }\n\n  LineController.id = 'line';\n  LineController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  LineController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n\n  class PolarAreaController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n\n    parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n\n    update(mode) {\n      const arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n\n    getMinMax() {\n      const meta = this._cachedMeta;\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach((element, index) => {\n        const parsed = this.getParsed(index).r;\n\n        if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n\n    _updateRadius() {\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      const outerRadius = Math.max(minSize / 2, 0);\n      const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const scale = this._cachedMeta.rScale;\n      const centerX = scale.xCenter;\n      const centerY = scale.yCenter;\n      const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      let angle = datasetStartAngle;\n      let i;\n      const defaultAngle = 360 / this.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        const arc = arcs[i];\n        let startAngle = angle;\n\n        let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n        let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        const properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius,\n          startAngle,\n          endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n\n    countVisibleElements() {\n      const meta = this._cachedMeta;\n      let count = 0;\n      meta.data.forEach((element, index) => {\n        if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n\n    _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n\n  }\n\n  PolarAreaController.id = 'polarArea';\n  PolarAreaController.defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  PolarAreaController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n\n          label(context) {\n            return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n          }\n\n        }\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  class PieController extends DoughnutController {}\n\n  PieController.id = 'pie';\n  PieController.defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n\n  class RadarController extends DatasetController {\n    getLabelAndValue(index) {\n      const vScale = this._cachedMeta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n\n    parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n\n    update(mode) {\n      const meta = this._cachedMeta;\n      const line = meta.dataset;\n      const points = meta.data || [];\n      const labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        const options = this.resolveDatasetElementOptions(mode);\n\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        const properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n\n      this.updateElements(points, 0, points.length, mode);\n    }\n\n    updateElements(points, start, count, mode) {\n      const scale = this._cachedMeta.rScale;\n      const reset = mode === 'reset';\n\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        const x = reset ? scale.xCenter : pointPosition.x;\n        const y = reset ? scale.yCenter : pointPosition.y;\n        const properties = {\n          x,\n          y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n\n  }\n\n  RadarController.id = 'radar';\n  RadarController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  RadarController.overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n\n  class Element {\n    constructor() {\n      this.x = undefined;\n      this.y = undefined;\n      this.active = false;\n      this.options = undefined;\n      this.$animations = undefined;\n    }\n\n    tooltipPosition(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n\n    hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n\n    getProps(props, final) {\n      const anims = this.$animations;\n\n      if (!final || !anims) {\n        return this;\n      }\n\n      const ret = {};\n      props.forEach(prop => {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n      });\n      return ret;\n    }\n\n  }\n\n  Element.defaults = {};\n  Element.defaultRoutes = undefined;\n  const formatters = {\n    values(value) {\n      return isArray(value) ? value : '' + value;\n    },\n\n    numeric(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n\n      const locale = this.chart.options.locale;\n      let notation;\n      let delta = tickValue;\n\n      if (ticks.length > 1) {\n        const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n        if (maxTick < 1e-4 || maxTick > 1e+15) {\n          notation = 'scientific';\n        }\n\n        delta = calculateDelta(tickValue, ticks);\n      }\n\n      const logDelta = log10(Math.abs(delta));\n      const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n      const options = {\n        notation,\n        minimumFractionDigits: numDecimal,\n        maximumFractionDigits: numDecimal\n      };\n      Object.assign(options, this.options.ticks.format);\n      return formatNumber(tickValue, locale, options);\n    },\n\n    logarithmic(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n\n      const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n      if (remain === 1 || remain === 2 || remain === 5) {\n        return formatters.numeric.call(this, tickValue, index, ticks);\n      }\n\n      return '';\n    }\n\n  };\n\n  function calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n      delta = tickValue - Math.floor(tickValue);\n    }\n\n    return delta;\n  }\n\n  var Ticks = {\n    formatters\n  };\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n    bounds: 'ticks',\n    grace: 0,\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderWidth: 1\n    },\n    title: {\n      display: false,\n      text: '',\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2\n    }\n  });\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.grid', 'borderColor', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n  });\n  defaults.describe('scales', {\n    _fallback: 'scale'\n  });\n  defaults.describe('scale.ticks', {\n    _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: name => name !== 'backdropPadding'\n  });\n\n  function autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n\n    if (numMajorIndices > ticksLimit) {\n      skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n      return newTicks;\n    }\n\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n    if (numMajorIndices > 0) {\n      let i, ilen;\n      const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n      skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n      for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n        skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n      }\n\n      skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n      return newTicks;\n    }\n\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n  }\n\n  function determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n\n    const tickLength = scale._tickSize();\n\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n  }\n\n  function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n\n    if (!evenMajorSpacing) {\n      return Math.max(spacing, 1);\n    }\n\n    const factors = _factorize(evenMajorSpacing);\n\n    for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n      const factor = factors[i];\n\n      if (factor > spacing) {\n        return factor;\n      }\n    }\n\n    return Math.max(spacing, 1);\n  }\n\n  function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (ticks[i].major) {\n        result.push(i);\n      }\n    }\n\n    return result;\n  }\n\n  function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n\n    for (i = 0; i < ticks.length; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = majorIndices[count * spacing];\n      }\n    }\n  }\n\n  function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n\n    if (majorEnd) {\n      length = majorEnd - majorStart;\n      spacing = length / Math.floor(length / spacing);\n    }\n\n    next = start;\n\n    while (next < 0) {\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n\n    for (i = Math.max(start, 0); i < end; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = Math.round(start + count * spacing);\n      }\n    }\n  }\n\n  function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n\n    if (len < 2) {\n      return false;\n    }\n\n    for (diff = arr[0], i = 1; i < len; ++i) {\n      if (arr[i] - arr[i - 1] !== diff) {\n        return false;\n      }\n    }\n\n    return diff;\n  }\n\n  const reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\n  const offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n  function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n\n    for (; i < len; i += increment) {\n      result.push(arr[Math.floor(i)]);\n    }\n\n    return result;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n\n    if (offsetGridLines) {\n      if (length === 1) {\n        offset = Math.max(lineValue - start, end - lineValue);\n      } else if (index === 0) {\n        offset = (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n      }\n\n      lineValue += validIndex < index ? offset : -offset;\n\n      if (lineValue < start - epsilon || lineValue > end + epsilon) {\n        return;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function garbageCollect(caches, length) {\n    each(caches, cache => {\n      const gc = cache.gc;\n      const gcLen = gc.length / 2;\n      let i;\n\n      if (gcLen > length) {\n        for (i = 0; i < gcLen; ++i) {\n          delete cache.data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n    });\n  }\n\n  function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n  }\n\n  function getTitleHeight(options, fallback) {\n    if (!options.display) {\n      return 0;\n    }\n\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n  }\n\n  function createScaleContext(parent, scale) {\n    return createContext(parent, {\n      scale,\n      type: 'scale'\n    });\n  }\n\n  function createTickContext(parent, index, tick) {\n    return createContext(parent, {\n      tick,\n      index,\n      type: 'tick'\n    });\n  }\n\n  function titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n      ret = reverseAlign(ret);\n    }\n\n    return ret;\n  }\n\n  function titleArgs(scale, offset, position, align) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      chart\n    } = scale;\n    const {\n      chartArea,\n      scales\n    } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n\n    if (scale.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n      } else if (position === 'center') {\n        titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n      } else {\n        titleY = offsetFromEdge(scale, position, offset);\n      }\n\n      maxWidth = right - left;\n    } else {\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n      } else if (position === 'center') {\n        titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n      } else {\n        titleX = offsetFromEdge(scale, position, offset);\n      }\n\n      titleY = _alignStartEnd(align, bottom, top);\n      rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  class Scale extends Element {\n    constructor(cfg) {\n      super();\n      this.id = cfg.id;\n      this.type = cfg.type;\n      this.options = undefined;\n      this.ctx = cfg.ctx;\n      this.chart = cfg.chart;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this._margins = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this.maxWidth = undefined;\n      this.maxHeight = undefined;\n      this.paddingTop = undefined;\n      this.paddingBottom = undefined;\n      this.paddingLeft = undefined;\n      this.paddingRight = undefined;\n      this.axis = undefined;\n      this.labelRotation = undefined;\n      this.min = undefined;\n      this.max = undefined;\n      this._range = undefined;\n      this.ticks = [];\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this._labelSizes = null;\n      this._length = 0;\n      this._maxLength = 0;\n      this._longestTextCache = {};\n      this._startPixel = undefined;\n      this._endPixel = undefined;\n      this._reversePixels = false;\n      this._userMax = undefined;\n      this._userMin = undefined;\n      this._suggestedMax = undefined;\n      this._suggestedMin = undefined;\n      this._ticksLength = 0;\n      this._borderValue = 0;\n      this._cache = {};\n      this._dataLimitsCached = false;\n      this.$context = undefined;\n    }\n\n    init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n\n    parse(raw, index) {\n      return raw;\n    }\n\n    getUserBounds() {\n      let {\n        _userMin,\n        _userMax,\n        _suggestedMin,\n        _suggestedMax\n      } = this;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n\n    getMinMax(canStack) {\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min,\n          max\n        };\n      }\n\n      const metas = this.getMatchingVisibleMetas();\n\n      for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n\n    getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n\n    getTicks() {\n      return this.ticks;\n    }\n\n    getLabels() {\n      const data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n\n    beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n\n    beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n\n    update(maxWidth, maxHeight, margins) {\n      const {\n        beginAtZero,\n        grace,\n        ticks: tickOpts\n      } = this.options;\n      const sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      const samplingEnabled = sampleSize < this.ticks.length;\n\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n\n    configure() {\n      let reversePixels = this.options.reverse;\n      let startPixel, endPixel;\n\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n\n    afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n\n    beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n\n    afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n\n    _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n\n    beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n\n    determineDataLimits() {}\n\n    afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n\n    beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n\n    buildTicks() {\n      return [];\n    }\n\n    afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n\n    beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n\n    generateTickLabels(ticks) {\n      const tickOpts = this.options.ticks;\n      let i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n\n    afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n\n    beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n\n    calculateLabelRotation() {\n      const options = this.options;\n      const tickOpts = options.ticks;\n      const numTicks = this.ticks.length;\n      const minRotation = tickOpts.minRotation || 0;\n      const maxRotation = tickOpts.maxRotation;\n      let labelRotation = minRotation;\n      let tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n\n      const labelSizes = this._getLabelSizes();\n\n      const maxLabelWidth = labelSizes.widest.width;\n      const maxLabelHeight = labelSizes.highest.height;\n\n      const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      this.labelRotation = labelRotation;\n    }\n\n    afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n\n    afterAutoSkip() {}\n\n    beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n\n    fit() {\n      const minSize = {\n        width: 0,\n        height: 0\n      };\n      const {\n        chart,\n        options: {\n          ticks: tickOpts,\n          title: titleOpts,\n          grid: gridOpts\n        }\n      } = this;\n\n      const display = this._isVisible();\n\n      const isHorizontal = this.isHorizontal();\n\n      if (display) {\n        const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && this.ticks.length) {\n          const {\n            first,\n            last,\n            widest,\n            highest\n          } = this._getLabelSizes();\n\n          const tickPadding = tickOpts.padding * 2;\n          const angleRadians = toRadians(this.labelRotation);\n          const cos = Math.cos(angleRadians);\n          const sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      this._handleMargins();\n\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n\n    _calculatePadding(first, last, sin, cos) {\n      const {\n        ticks: {\n          align,\n          padding\n        },\n        position\n      } = this.options;\n      const isRotated = this.labelRotation !== 0;\n      const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n      if (this.isHorizontal()) {\n        const offsetLeft = this.getPixelForTick(0) - this.left;\n        const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        let paddingLeft = 0;\n        let paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        let paddingTop = last.height / 2;\n        let paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n\n    _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n\n    afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n\n    isHorizontal() {\n      const {\n        axis,\n        position\n      } = this.options;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n\n    isFullSize() {\n      return this.options.fullSize;\n    }\n\n    _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      let i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      this.afterTickToLabelConversion();\n    }\n\n    _getLabelSizes() {\n      let labelSizes = this._labelSizes;\n\n      if (!labelSizes) {\n        const sampleSize = this.options.ticks.sampleSize;\n        let ticks = this.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n\n    _computeLabelSizes(ticks, length) {\n      const {\n        ctx,\n        _longestTextCache: caches\n      } = this;\n      const widths = [];\n      const heights = [];\n      let widestLabelSize = 0;\n      let highestLabelSize = 0;\n      let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      const widest = widths.indexOf(widestLabelSize);\n      const highest = heights.indexOf(highestLabelSize);\n\n      const valueAt = idx => ({\n        width: widths[idx] || 0,\n        height: heights[idx] || 0\n      });\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths,\n        heights\n      };\n    }\n\n    getLabelForValue(value) {\n      return value;\n    }\n\n    getPixelForValue(value, index) {\n      return NaN;\n    }\n\n    getValueForPixel(pixel) {}\n\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n\n    getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      const pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n\n    getDecimalForPixel(pixel) {\n      const decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n\n    getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n\n    getBaseValue() {\n      const {\n        min,\n        max\n      } = this;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n\n    getContext(index) {\n      const ticks = this.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        const tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n\n    _tickSize() {\n      const optionTicks = this.options.ticks;\n      const rot = toRadians(this.labelRotation);\n      const cos = Math.abs(Math.cos(rot));\n      const sin = Math.abs(Math.sin(rot));\n\n      const labelSizes = this._getLabelSizes();\n\n      const padding = optionTicks.autoSkipPadding || 0;\n      const w = labelSizes ? labelSizes.widest.width + padding : 0;\n      const h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n\n    _isVisible() {\n      const display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n\n    _computeGridLineItems(chartArea) {\n      const axis = this.axis;\n      const chart = this.chart;\n      const options = this.options;\n      const {\n        grid,\n        position\n      } = options;\n      const offset = grid.offset;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const ticksLength = ticks.length + (offset ? 1 : 0);\n      const tl = getTickMarkLength(grid);\n      const items = [];\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      const axisHalfWidth = axisWidth / 2;\n\n      const alignBorderValue = function (pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      let borderValue, i, lineValue, alignedLineValue;\n      let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        const optsAtIndex = grid.setContext(this.getContext(i));\n        const lineWidth = optsAtIndex.lineWidth;\n        const lineColor = optsAtIndex.color;\n        const borderDash = optsAtIndex.borderDash || [];\n        const borderDashOffset = optsAtIndex.borderDashOffset;\n        const tickWidth = optsAtIndex.tickWidth;\n        const tickColor = optsAtIndex.tickColor;\n        const tickBorderDash = optsAtIndex.tickBorderDash || [];\n        const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1,\n          ty1,\n          tx2,\n          ty2,\n          x1,\n          y1,\n          x2,\n          y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash,\n          borderDashOffset,\n          tickWidth,\n          tickColor,\n          tickBorderDash,\n          tickBorderDashOffset\n        });\n      }\n\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n\n    _computeLabelItems(chartArea) {\n      const axis = this.axis;\n      const options = this.options;\n      const {\n        position,\n        ticks: optionTicks\n      } = options;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const {\n        align,\n        crossAlign,\n        padding,\n        mirror\n      } = optionTicks;\n      const tl = getTickMarkLength(options.grid);\n      const tickAndPadding = tl + padding;\n      const hTickAndPadding = mirror ? -padding : tickAndPadding;\n      const rotation = -toRadians(this.labelRotation);\n      const items = [];\n      let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      let textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        const ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        const ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          x = this.chart.scales[positionAxisID].getPixelForValue(value);\n        }\n\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      const labelSizes = this._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        const optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        const halfCount = lineCount / 2;\n        const color = optsAtIndex.color;\n        const strokeColor = optsAtIndex.textStrokeColor;\n        const strokeWidth = optsAtIndex.textStrokeWidth;\n        let tickTextAlign = textAlign;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        let backdrop;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          const labelPadding = toPadding(optsAtIndex.backdropPadding);\n          const height = labelSizes.heights[i];\n          const width = labelSizes.widths[i];\n          let top = y + textOffset - labelPadding.top;\n          let left = x - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left,\n            top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          rotation,\n          label,\n          font,\n          color,\n          strokeColor,\n          strokeWidth,\n          textOffset,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        });\n      }\n\n      return items;\n    }\n\n    _getXAxisLabelAlignment() {\n      const {\n        position,\n        ticks\n      } = this.options;\n      const rotation = -toRadians(this.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      let align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n\n      return align;\n    }\n\n    _getYAxisLabelAlignment(tl) {\n      const {\n        position,\n        ticks: {\n          crossAlign,\n          mirror,\n          padding\n        }\n      } = this.options;\n\n      const labelSizes = this._getLabelSizes();\n\n      const tickAndPadding = tl + padding;\n      const widest = labelSizes.widest.width;\n      let textAlign;\n      let x;\n\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign,\n        x\n      };\n    }\n\n    _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n\n      const chart = this.chart;\n      const position = this.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n\n    drawBackground() {\n      const {\n        ctx,\n        options: {\n          backgroundColor\n        },\n        left,\n        top,\n        width,\n        height\n      } = this;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n\n    getLineWidthForValue(value) {\n      const grid = this.options.grid;\n\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      const ticks = this.ticks;\n      const index = ticks.findIndex(t => t.value === value);\n\n      if (index >= 0) {\n        const opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n\n    drawGrid(chartArea) {\n      const grid = this.options.grid;\n      const ctx = this.ctx;\n\n      const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n      let i, ilen;\n\n      const drawLine = (p1, p2, style) => {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          const item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n\n    drawBorder() {\n      const {\n        chart,\n        ctx,\n        options: {\n          grid\n        }\n      } = this;\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      const borderValue = this._borderValue;\n      let x1, x2, y1, y2;\n\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    drawLabels(chartArea) {\n      const optionTicks = this.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      const ctx = this.ctx;\n\n      const area = this._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n      let i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        const tickFont = item.font;\n        const label = item.label;\n\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n\n        let y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n\n    drawTitle() {\n      const {\n        ctx,\n        options: {\n          position,\n          title,\n          reverse\n        }\n      } = this;\n\n      if (!title.display) {\n        return;\n      }\n\n      const font = toFont(title.font);\n      const padding = toPadding(title.padding);\n      const align = title.align;\n      let offset = font.lineHeight / 2;\n\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = titleArgs(this, offset, position, align);\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth,\n        rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n\n    draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n\n    _layers() {\n      const opts = this.options;\n      const tz = opts.ticks && opts.ticks.z || 0;\n      const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: chartArea => {\n            this.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: chartArea => {\n          this.drawBackground();\n          this.drawGrid(chartArea);\n          this.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: () => {\n          this.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: chartArea => {\n          this.drawLabels(chartArea);\n        }\n      }];\n    }\n\n    getMatchingVisibleMetas(type) {\n      const metas = this.chart.getSortedVisibleDatasetMetas();\n      const axisID = this.axis + 'AxisID';\n      const result = [];\n      let i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        const meta = metas[i];\n\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n\n    _resolveTickFontOptions(index) {\n      const opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n\n    _maxDigits() {\n      const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n\n  }\n\n  class TypedRegistry {\n    constructor(type, scope, override) {\n      this.type = type;\n      this.scope = scope;\n      this.override = override;\n      this.items = Object.create(null);\n    }\n\n    isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n\n    register(item) {\n      const proto = Object.getPrototypeOf(item);\n      let parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n\n    get(id) {\n      return this.items[id];\n    }\n\n    unregister(item) {\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n\n  }\n\n  function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n    defaults.set(scope, itemDefaults);\n\n    if (item.defaultRoutes) {\n      routeDefaults(scope, item.defaultRoutes);\n    }\n\n    if (item.descriptors) {\n      defaults.describe(scope, item.descriptors);\n    }\n  }\n\n  function routeDefaults(scope, routes) {\n    Object.keys(routes).forEach(property => {\n      const propertyParts = property.split('.');\n      const sourceName = propertyParts.pop();\n      const sourceScope = [scope].concat(propertyParts).join('.');\n      const parts = routes[property].split('.');\n      const targetName = parts.pop();\n      const targetScope = parts.join('.');\n      defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n  }\n\n  function isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n  }\n\n  class Registry {\n    constructor() {\n      this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n      this.elements = new TypedRegistry(Element, 'elements');\n      this.plugins = new TypedRegistry(Object, 'plugins');\n      this.scales = new TypedRegistry(Scale, 'scales');\n      this._typedRegistries = [this.controllers, this.scales, this.elements];\n    }\n\n    add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n\n    remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n\n    addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n\n    addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n\n    addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n\n    addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n\n    getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n\n    getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n\n    getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n\n    getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n\n    removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n\n    removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n\n    removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n\n    removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n\n    _each(method, args, typedRegistry) {\n      [...args].forEach(arg => {\n        const reg = typedRegistry || this._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n          this._exec(method, reg, arg);\n        } else {\n          each(arg, item => {\n            const itemReg = typedRegistry || this._getRegistryForType(item);\n\n            this._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n\n    _exec(method, registry, component) {\n      const camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n\n    _getRegistryForType(type) {\n      for (let i = 0; i < this._typedRegistries.length; i++) {\n        const reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n\n    _get(id, typedRegistry, type) {\n      const item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n\n  }\n\n  var registry = new Registry();\n\n  class ScatterController extends DatasetController {\n    update(mode) {\n      const meta = this._cachedMeta;\n      const {\n        data: points = []\n      } = meta;\n      const animationsDisabled = this.chart._animationsDisabled;\n\n      let {\n        start,\n        count\n      } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      if (this.options.showLine) {\n        const {\n          dataset: line,\n          _dataset\n        } = meta;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options\n        }, mode);\n      }\n\n      this.updateElements(points, start, count, mode);\n    }\n\n    addElements() {\n      const {\n        showLine\n      } = this.options;\n\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = registry.getElement('line');\n      }\n\n      super.addElements();\n    }\n\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked,\n        _dataset\n      } = this._cachedMeta;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const {\n        spanGaps,\n        segment\n      } = this.options;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = this.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n\n    getMaxOverflow() {\n      const meta = this._cachedMeta;\n      const data = meta.data || [];\n\n      if (!this.options.showLine) {\n        let max = 0;\n\n        for (let i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n\n        return max > 0 && max;\n      }\n\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n\n      if (!data.length) {\n        return border;\n      }\n\n      const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n\n  }\n\n  ScatterController.id = 'scatter';\n  ScatterController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n  ScatterController.overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n\n          label(item) {\n            return '(' + item.label + ', ' + item.formattedValue + ')';\n          }\n\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n  var controllers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BarController: BarController,\n    BubbleController: BubbleController,\n    DoughnutController: DoughnutController,\n    LineController: LineController,\n    PolarAreaController: PolarAreaController,\n    PieController: PieController,\n    RadarController: RadarController,\n    ScatterController: ScatterController\n  });\n\n  function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n  }\n\n  class DateAdapter {\n    constructor(options) {\n      this.options = options || {};\n    }\n\n    init(chartOptions) {}\n\n    formats() {\n      return abstract();\n    }\n\n    parse(value, format) {\n      return abstract();\n    }\n\n    format(timestamp, format) {\n      return abstract();\n    }\n\n    add(timestamp, amount, unit) {\n      return abstract();\n    }\n\n    diff(a, b, unit) {\n      return abstract();\n    }\n\n    startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n\n    endOf(timestamp, unit) {\n      return abstract();\n    }\n\n  }\n\n  DateAdapter.override = function (members) {\n    Object.assign(DateAdapter.prototype, members);\n  };\n\n  var adapters = {\n    _date: DateAdapter\n  };\n\n  function binarySearch(metaset, axis, value, intersect) {\n    const {\n      controller,\n      data,\n      _sorted\n    } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n      const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n      if (!intersect) {\n        return lookupMethod(data, axis, value);\n      } else if (controller._sharedOptions) {\n        const el = data[0];\n        const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n        if (range) {\n          const start = lookupMethod(data, axis, value - range);\n          const end = lookupMethod(data, axis, value + range);\n          return {\n            lo: start.lo,\n            hi: end.hi\n          };\n        }\n      }\n    }\n\n    return {\n      lo: 0,\n      hi: data.length - 1\n    };\n  }\n\n  function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const {\n        index,\n        data\n      } = metasets[i];\n      const {\n        lo,\n        hi\n      } = binarySearch(metasets[i], axis, value, intersect);\n\n      for (let j = lo; j <= hi; ++j) {\n        const element = data[j];\n\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n\n  function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n      return items;\n    }\n\n    const evaluationFunc = function (element, datasetIndex, index) {\n      if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n        return;\n      }\n\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    };\n\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n  }\n\n  function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n\n    function evaluationFunc(element, datasetIndex, index) {\n      const {\n        startAngle,\n        endAngle\n      } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n      const {\n        angle\n      } = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      });\n\n      if (_angleBetween(angle, startAngle, endAngle)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n\n  function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n\n    function evaluationFunc(element, datasetIndex, index) {\n      const inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n      if (intersect && !inRange) {\n        return;\n      }\n\n      const center = element.getCenterPoint(useFinalPosition);\n      const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n      if (!pointInArea && !inRange) {\n        return;\n      }\n\n      const distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        items = [{\n          element,\n          datasetIndex,\n          index\n        }];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n\n  function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n      return [];\n    }\n\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n  }\n\n  function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n      if (element[rangeMethod](position[axis], useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n        intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n      }\n    });\n\n    if (intersect && !intersectsItem) {\n      return [];\n    }\n\n    return items;\n  }\n\n  var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n      index(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'x';\n        const includeInvisible = options.includeInvisible || false;\n        const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n        const elements = [];\n\n        if (!items.length) {\n          return [];\n        }\n\n        chart.getSortedVisibleDatasetMetas().forEach(meta => {\n          const index = items[0].index;\n          const element = meta.data[index];\n\n          if (element && !element.skip) {\n            elements.push({\n              element,\n              datasetIndex: meta.index,\n              index\n            });\n          }\n        });\n        return elements;\n      },\n\n      dataset(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        const includeInvisible = options.includeInvisible || false;\n        let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n        if (items.length > 0) {\n          const datasetIndex = items[0].datasetIndex;\n          const data = chart.getDatasetMeta(datasetIndex).data;\n          items = [];\n\n          for (let i = 0; i < data.length; ++i) {\n            items.push({\n              element: data[i],\n              datasetIndex,\n              index: i\n            });\n          }\n        }\n\n        return items;\n      },\n\n      point(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        const includeInvisible = options.includeInvisible || false;\n        return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n      },\n\n      nearest(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        const includeInvisible = options.includeInvisible || false;\n        return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n      },\n\n      x(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n      },\n\n      y(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n      }\n\n    }\n  };\n  const STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\n  function filterByPosition(array, position) {\n    return array.filter(v => v.pos === position);\n  }\n\n  function filterDynamicPositionByAxis(array, axis) {\n    return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n  }\n\n  function sortByWeight(array, reverse) {\n    return array.sort((a, b) => {\n      const v0 = reverse ? b : a;\n      const v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n  }\n\n  function wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n\n    for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n      box = boxes[i];\n      ({\n        position: pos,\n        options: {\n          stack,\n          stackWeight = 1\n        }\n      } = box);\n      layoutBoxes.push({\n        index: i,\n        box,\n        pos,\n        horizontal: box.isHorizontal(),\n        weight: box.weight,\n        stack: stack && pos + stack,\n        stackWeight\n      });\n    }\n\n    return layoutBoxes;\n  }\n\n  function buildStacks(layouts) {\n    const stacks = {};\n\n    for (const wrap of layouts) {\n      const {\n        stack,\n        pos,\n        stackWeight\n      } = wrap;\n\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n\n      const _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n\n    return stacks;\n  }\n\n  function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const {\n      vBoxMaxWidth,\n      hBoxMaxHeight\n    } = params;\n    let i, ilen, layout;\n\n    for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n      layout = layouts[i];\n      const {\n        fullSize\n      } = layout.box;\n      const stack = stacks[layout.stack];\n      const factor = stack && layout.stackWeight / stack.weight;\n\n      if (layout.horizontal) {\n        layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n        layout.height = hBoxMaxHeight;\n      } else {\n        layout.width = vBoxMaxWidth;\n        layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n      }\n    }\n\n    return stacks;\n  }\n\n  function buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n      fullSize,\n      leftAndTop: left.concat(top),\n      rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n      chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n      vertical: left.concat(right).concat(centerVertical),\n      horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n  }\n\n  function getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n  }\n\n  function updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n  }\n\n  function updateDims(chartArea, params, layout, stacks) {\n    const {\n      pos,\n      box\n    } = layout;\n    const maxPadding = chartArea.maxPadding;\n\n    if (!isObject(pos)) {\n      if (layout.size) {\n        chartArea[pos] -= layout.size;\n      }\n\n      const stack = stacks[layout.stack] || {\n        size: 0,\n        count: 1\n      };\n      stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n      layout.size = stack.size / stack.count;\n      chartArea[pos] += layout.size;\n    }\n\n    if (box.getPadding) {\n      updateMaxPadding(maxPadding, box.getPadding());\n    }\n\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n      same: widthChanged,\n      other: heightChanged\n    } : {\n      same: heightChanged,\n      other: widthChanged\n    };\n  }\n\n  function handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n\n    function updatePos(pos) {\n      const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n      chartArea[pos] += change;\n      return change;\n    }\n\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n  }\n\n  function getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n\n    function marginForPositions(positions) {\n      const margin = {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n      positions.forEach(pos => {\n        margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n      });\n      return margin;\n    }\n\n    return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n  }\n\n  function fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n\n    for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n      layout = boxes[i];\n      box = layout.box;\n      box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n      const {\n        same,\n        other\n      } = updateDims(chartArea, params, layout, stacks);\n      refit |= same && refitBoxes.length;\n      changed = changed || other;\n\n      if (!box.fullSize) {\n        refitBoxes.push(layout);\n      }\n    }\n\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n  }\n\n  function setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n  }\n\n  function placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let {\n      x,\n      y\n    } = chartArea;\n\n    for (const layout of boxes) {\n      const box = layout.box;\n      const stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      const weight = layout.stackWeight / stack.weight || 1;\n\n      if (layout.horizontal) {\n        const width = chartArea.w * weight;\n        const height = stack.size || box.height;\n\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        const height = chartArea.h * weight;\n        const width = stack.size || box.width;\n\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n        }\n\n        stack.start = x;\n        stack.placed += height;\n        x = box.right;\n      }\n    }\n\n    chartArea.x = x;\n    chartArea.y = y;\n  }\n\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n  var layouts = {\n    addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      }\n\n      item.fullSize = item.fullSize || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n\n      item._layers = item._layers || function () {\n        return [{\n          z: 0,\n\n          draw(chartArea) {\n            item.draw(chartArea);\n          }\n\n        }];\n      };\n\n      chart.boxes.push(item);\n    },\n\n    removeBox(chart, layoutItem) {\n      const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    configure(chart, item, options) {\n      item.fullSize = options.fullSize;\n      item.position = options.position;\n      item.weight = options.weight;\n    },\n\n    update(chart, width, height, minPadding) {\n      if (!chart) {\n        return;\n      }\n\n      const padding = toPadding(chart.options.layout.padding);\n      const availableWidth = Math.max(width - padding.width, 0);\n      const availableHeight = Math.max(height - padding.height, 0);\n      const boxes = buildLayoutBoxes(chart.boxes);\n      const verticalBoxes = boxes.vertical;\n      const horizontalBoxes = boxes.horizontal;\n      each(chart.boxes, box => {\n        if (typeof box.beforeLayout === 'function') {\n          box.beforeLayout();\n        }\n      });\n      const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n      const params = Object.freeze({\n        outerWidth: width,\n        outerHeight: height,\n        padding,\n        availableWidth,\n        availableHeight,\n        vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n        hBoxMaxHeight: availableHeight / 2\n      });\n      const maxPadding = Object.assign({}, padding);\n      updateMaxPadding(maxPadding, toPadding(minPadding));\n      const chartArea = Object.assign({\n        maxPadding,\n        w: availableWidth,\n        h: availableHeight,\n        x: padding.left,\n        y: padding.top\n      }, padding);\n      const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n      fitBoxes(boxes.fullSize, chartArea, params, stacks);\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n      if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n      }\n\n      handleMaxPadding(chartArea);\n      placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n      chartArea.x += chartArea.w;\n      chartArea.y += chartArea.h;\n      placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n      chart.chartArea = {\n        left: chartArea.left,\n        top: chartArea.top,\n        right: chartArea.left + chartArea.w,\n        bottom: chartArea.top + chartArea.h,\n        height: chartArea.h,\n        width: chartArea.w\n      };\n      each(boxes.chartArea, layout => {\n        const box = layout.box;\n        Object.assign(box, chart.chartArea);\n        box.update(chartArea.w, chartArea.h, {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0\n        });\n      });\n    }\n\n  };\n\n  class BasePlatform {\n    acquireContext(canvas, aspectRatio) {}\n\n    releaseContext(context) {\n      return false;\n    }\n\n    addEventListener(chart, type, listener) {}\n\n    removeEventListener(chart, type, listener) {}\n\n    getDevicePixelRatio() {\n      return 1;\n    }\n\n    getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n\n    isAttached(canvas) {\n      return true;\n    }\n\n    updateConfig(config) {}\n\n  }\n\n  class BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n\n    updateConfig(config) {\n      config.options.animation = false;\n    }\n\n  }\n\n  const EXPANDO_KEY = '$chartjs';\n  const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n\n  const isNullOrEmpty = value => value === null || value === '';\n\n  function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n\n    if (isNullOrEmpty(renderWidth)) {\n      const displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (isNullOrEmpty(renderHeight)) {\n      if (canvas.style.height === '') {\n        canvas.height = canvas.width / (aspectRatio || 2);\n      } else {\n        const displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayHeight !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n\n  const eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const {\n      x,\n      y\n    } = getRelativePosition(event, chart);\n    return {\n      type,\n      chart,\n      native: event,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function nodeListContains(nodeList, canvas) {\n    for (const node of nodeList) {\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  }\n\n  function createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n\n  function createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n\n  const drpListeningCharts = new Map();\n  let oldDevicePixelRatio = 0;\n\n  function onWindowResize() {\n    const dpr = window.devicePixelRatio;\n\n    if (dpr === oldDevicePixelRatio) {\n      return;\n    }\n\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart) => {\n      if (chart.currentDevicePixelRatio !== dpr) {\n        resize();\n      }\n    });\n  }\n\n  function listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n      window.addEventListener('resize', onWindowResize);\n    }\n\n    drpListeningCharts.set(chart, resize);\n  }\n\n  function unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n\n    if (!drpListeningCharts.size) {\n      window.removeEventListener('resize', onWindowResize);\n    }\n  }\n\n  function createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n\n    const container = canvas && _getParentNode(canvas);\n\n    if (!container) {\n      return;\n    }\n\n    const resize = throttled((width, height) => {\n      const w = container.clientWidth;\n      listener(width, height);\n\n      if (w < container.clientWidth) {\n        listener();\n      }\n    }, window);\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      const width = entry.contentRect.width;\n      const height = entry.contentRect.height;\n\n      if (width === 0 && height === 0) {\n        return;\n      }\n\n      resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n  }\n\n  function releaseObserver(chart, type, observer) {\n    if (observer) {\n      observer.disconnect();\n    }\n\n    if (type === 'resize') {\n      unlistenDevicePixelRatioChanges(chart);\n    }\n  }\n\n  function createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled(event => {\n      if (chart.ctx !== null) {\n        listener(fromNativeEvent(event, chart));\n      }\n    }, chart, args => {\n      const event = args[0];\n      return [event, event.offsetX, event.offsetY];\n    });\n    addListener(canvas, type, proxy);\n    return proxy;\n  }\n\n  class DomPlatform extends BasePlatform {\n    acquireContext(canvas, aspectRatio) {\n      const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n\n    releaseContext(context) {\n      const canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      const initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(prop => {\n        const value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      const style = initial.style || {};\n      Object.keys(style).forEach(key => {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n\n    addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      const handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n\n    removeEventListener(chart, type) {\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      const handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      const handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n\n    getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n\n    getMaximumSize(canvas, width, height, aspectRatio) {\n      return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n\n    isAttached(canvas) {\n      const container = _getParentNode(canvas);\n\n      return !!(container && container.isConnected);\n    }\n\n  }\n\n  function _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return BasicPlatform;\n    }\n\n    return DomPlatform;\n  }\n\n  class PluginService {\n    constructor() {\n      this._init = [];\n    }\n\n    notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n\n        this._notify(this._init, chart, 'install');\n      }\n\n      const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n      const result = this._notify(descriptors, chart, hook, args);\n\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n\n        this._notify(this._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n\n    _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      for (const descriptor of descriptors) {\n        const plugin = descriptor.plugin;\n        const method = plugin[hook];\n        const params = [chart, args, descriptor.options];\n\n        if (callback(method, params, plugin) === false && args.cancelable) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n\n    _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      const descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n\n    _createDescriptors(chart, all) {\n      const config = chart && chart.config;\n      const options = valueOrDefault(config.options && config.options.plugins, {});\n      const plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n\n    _notifyStateChanges(chart) {\n      const previousDescriptors = this._oldCache || [];\n      const descriptors = this._cache;\n\n      const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n\n  }\n\n  function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n\n    for (let i = 0; i < keys.length; i++) {\n      plugins.push(registry.getPlugin(keys[i]));\n    }\n\n    const local = config.plugins || [];\n\n    for (let i = 0; i < local.length; i++) {\n      const plugin = local[i];\n\n      if (plugins.indexOf(plugin) === -1) {\n        plugins.push(plugin);\n        localIds[plugin.id] = true;\n      }\n    }\n\n    return {\n      plugins,\n      localIds\n    };\n  }\n\n  function getOpts(options, all) {\n    if (!all && options === false) {\n      return null;\n    }\n\n    if (options === true) {\n      return {};\n    }\n\n    return options;\n  }\n\n  function createDescriptors(chart, _ref2, options, all) {\n    let {\n      plugins,\n      localIds\n    } = _ref2;\n    const result = [];\n    const context = chart.getContext();\n\n    for (const plugin of plugins) {\n      const id = plugin.id;\n      const opts = getOpts(options[id], all);\n\n      if (opts === null) {\n        continue;\n      }\n\n      result.push({\n        plugin,\n        options: pluginOpts(chart.config, {\n          plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n\n    return result;\n  }\n\n  function pluginOpts(config, _ref3, opts, context) {\n    let {\n      plugin,\n      local\n    } = _ref3;\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n\n    if (local && plugin.defaults) {\n      scopes.push(plugin.defaults);\n    }\n\n    return config.createResolver(scopes, context, [''], {\n      scriptable: false,\n      indexable: false,\n      allKeys: true\n    });\n  }\n\n  function getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n  }\n\n  function getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n\n    if (id === '_index_') {\n      axis = indexAxis;\n    } else if (id === '_value_') {\n      axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n\n    return axis;\n  }\n\n  function getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n  }\n\n  function axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n      return 'x';\n    }\n\n    if (position === 'left' || position === 'right') {\n      return 'y';\n    }\n  }\n\n  function determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y') {\n      return id;\n    }\n\n    return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n  }\n\n  function mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n      scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const firstIDs = Object.create(null);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach(id => {\n      const scaleConf = configScales[id];\n\n      if (!isObject(scaleConf)) {\n        return console.error(\"Invalid scale configuration for scale: \".concat(id));\n      }\n\n      if (scaleConf._proxy) {\n        return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n      }\n\n      const axis = determineAxis(id, scaleConf);\n      const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n      const defaultScaleOptions = chartDefaults.scales || {};\n      firstIDs[axis] = firstIDs[axis] || id;\n      scales[id] = mergeIf(Object.create(null), [{\n        axis\n      }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n    });\n    config.data.datasets.forEach(dataset => {\n      const type = dataset.type || config.type;\n      const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n      const datasetDefaults = overrides[type] || {};\n      const defaultScaleOptions = datasetDefaults.scales || {};\n      Object.keys(defaultScaleOptions).forEach(defaultID => {\n        const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n        const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n        scales[id] = scales[id] || Object.create(null);\n        mergeIf(scales[id], [{\n          axis\n        }, configScales[id], defaultScaleOptions[defaultID]]);\n      });\n    });\n    Object.keys(scales).forEach(key => {\n      const scale = scales[key];\n      mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n    });\n    return scales;\n  }\n\n  function initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n  }\n\n  function initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n  }\n\n  function initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n  }\n\n  const keyCache = new Map();\n  const keysCached = new Set();\n\n  function cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n\n    if (!keys) {\n      keys = generate();\n      keyCache.set(cacheKey, keys);\n      keysCached.add(keys);\n    }\n\n    return keys;\n  }\n\n  const addIfFound = (set, obj, key) => {\n    const opts = resolveObjectKey(obj, key);\n\n    if (opts !== undefined) {\n      set.add(opts);\n    }\n  };\n\n  class Config {\n    constructor(config) {\n      this._config = initConfig(config);\n      this._scopeCache = new Map();\n      this._resolverCache = new Map();\n    }\n\n    get platform() {\n      return this._config.platform;\n    }\n\n    get type() {\n      return this._config.type;\n    }\n\n    set type(type) {\n      this._config.type = type;\n    }\n\n    get data() {\n      return this._config.data;\n    }\n\n    set data(data) {\n      this._config.data = initData(data);\n    }\n\n    get options() {\n      return this._config.options;\n    }\n\n    set options(options) {\n      this._config.options = options;\n    }\n\n    get plugins() {\n      return this._config.plugins;\n    }\n\n    update() {\n      const config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n\n    clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n\n    datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, () => [[\"datasets.\".concat(datasetType), '']]);\n    }\n\n    datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), () => [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']]);\n    }\n\n    datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), () => [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']]);\n    }\n\n    pluginScopeKeys(plugin) {\n      const id = plugin.id;\n      const type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), () => [[\"plugins.\".concat(id), ...(plugin.additionalOptionScopes || [])]]);\n    }\n\n    _cachedScopes(mainScope, resetCache) {\n      const _scopeCache = this._scopeCache;\n\n      let cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n\n    getOptionScopes(mainScope, keyLists, resetCache) {\n      const {\n        options,\n        type\n      } = this;\n\n      const cache = this._cachedScopes(mainScope, resetCache);\n\n      const cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      const scopes = new Set();\n      keyLists.forEach(keys => {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(key => addIfFound(scopes, mainScope, key));\n        }\n\n        keys.forEach(key => addIfFound(scopes, options, key));\n        keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n        keys.forEach(key => addIfFound(scopes, defaults, key));\n        keys.forEach(key => addIfFound(scopes, descriptors, key));\n      });\n      const array = Array.from(scopes);\n\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n\n    chartOptionScopes() {\n      const {\n        options,\n        type\n      } = this;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type\n      }, defaults, descriptors];\n    }\n\n    resolveNamedOptions(scopes, names, context) {\n      let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      const result = {\n        $shared: true\n      };\n      const {\n        resolver,\n        subPrefixes\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      let options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        const subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      for (const prop of names) {\n        result[prop] = options[prop];\n      }\n\n      return result;\n    }\n\n    createResolver(scopes, context) {\n      let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      const {\n        resolver\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n\n  }\n\n  function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n\n    if (!cache) {\n      cache = new Map();\n      resolverCache.set(scopes, cache);\n    }\n\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n\n    if (!cached) {\n      const resolver = _createResolver(scopes, prefixes);\n\n      cached = {\n        resolver,\n        subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n      };\n      cache.set(cacheKey, cached);\n    }\n\n    return cached;\n  }\n\n  const hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\n  function needContext(proxy, names) {\n    const {\n      isScriptable,\n      isIndexable\n    } = _descriptors(proxy);\n\n    for (const prop of names) {\n      const scriptable = isScriptable(prop);\n      const indexable = isIndexable(prop);\n      const value = (indexable || scriptable) && proxy[prop];\n\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var version = \"3.9.1\";\n  const KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\n  function positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n  }\n\n  function compare2Level(l1, l2) {\n    return function (a, b) {\n      return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n  }\n\n  function onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [context], chart);\n  }\n\n  function onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [context], chart);\n  }\n\n  function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item && item.length) {\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      item = item.canvas;\n    }\n\n    return item;\n  }\n\n  const instances = {};\n\n  const getChart = key => {\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter(c => c.canvas === canvas).pop();\n  };\n\n  function moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n\n    for (const key of keys) {\n      const intKey = +key;\n\n      if (intKey >= start) {\n        const value = obj[key];\n        delete obj[key];\n\n        if (move > 0 || intKey > start) {\n          obj[intKey + move] = value;\n        }\n      }\n    }\n  }\n\n  function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n      return null;\n    }\n\n    if (isClick) {\n      return lastEvent;\n    }\n\n    return e;\n  }\n\n  class Chart {\n    constructor(item, userConfig) {\n      const config = this.config = new Config(userConfig);\n      const initialCanvas = getCanvas(item);\n      const existingChart = getChart(initialCanvas);\n\n      if (existingChart) {\n        throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n      }\n\n      const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n      this.platform.updateConfig(config);\n      const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n      const canvas = context && context.canvas;\n      const height = canvas && canvas.height;\n      const width = canvas && canvas.width;\n      this.id = uid();\n      this.ctx = context;\n      this.canvas = canvas;\n      this.width = width;\n      this.height = height;\n      this._options = options;\n      this._aspectRatio = this.aspectRatio;\n      this._layers = [];\n      this._metasets = [];\n      this._stacks = undefined;\n      this.boxes = [];\n      this.currentDevicePixelRatio = undefined;\n      this.chartArea = undefined;\n      this._active = [];\n      this._lastEvent = undefined;\n      this._listeners = {};\n      this._responsiveListeners = undefined;\n      this._sortedMetasets = [];\n      this.scales = {};\n      this._plugins = new PluginService();\n      this.$proxies = {};\n      this._hiddenIndices = {};\n      this.attached = false;\n      this._animationsDisabled = undefined;\n      this.$context = undefined;\n      this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n      this._dataChanges = [];\n      instances[this.id] = this;\n\n      if (!context || !canvas) {\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      animator.listen(this, 'complete', onAnimationsComplete);\n      animator.listen(this, 'progress', onAnimationProgress);\n\n      this._initialize();\n\n      if (this.attached) {\n        this.update();\n      }\n    }\n\n    get aspectRatio() {\n      const {\n        options: {\n          aspectRatio,\n          maintainAspectRatio\n        },\n        width,\n        height,\n        _aspectRatio\n      } = this;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n\n    get data() {\n      return this.config.data;\n    }\n\n    set data(data) {\n      this.config.data = data;\n    }\n\n    get options() {\n      return this._options;\n    }\n\n    set options(options) {\n      this.config.options = options;\n    }\n\n    _initialize() {\n      this.notifyPlugins('beforeInit');\n\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n\n    clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n\n    stop() {\n      animator.stop(this);\n      return this;\n    }\n\n    resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width,\n          height\n        };\n      }\n    }\n\n    _resize(width, height) {\n      const options = this.options;\n      const canvas = this.canvas;\n      const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      const mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n\n    ensureScalesHaveIDs() {\n      const options = this.options;\n      const scalesOptions = options.scales || {};\n      each(scalesOptions, (axisOptions, axisID) => {\n        axisOptions.id = axisID;\n      });\n    }\n\n    buildOrUpdateScales() {\n      const options = this.options;\n      const scaleOpts = options.scales;\n      const scales = this.scales;\n      const updated = Object.keys(scales).reduce((obj, id) => {\n        obj[id] = false;\n        return obj;\n      }, {});\n      let items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(id => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, item => {\n        const scaleOptions = item.options;\n        const id = scaleOptions.id;\n        const axis = determineAxis(id, scaleOptions);\n        const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        let scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          const scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id,\n            type: scaleType,\n            ctx: this.ctx,\n            chart: this\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, (hasUpdated, id) => {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, scale => {\n        layouts.configure(this, scale, scale.options);\n        layouts.addBox(this, scale);\n      });\n    }\n\n    _updateMetasets() {\n      const metasets = this._metasets;\n      const numData = this.data.datasets.length;\n      const numMeta = metasets.length;\n      metasets.sort((a, b) => a.index - b.index);\n\n      if (numMeta > numData) {\n        for (let i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n\n    _removeUnreferencedMetasets() {\n      const {\n        _metasets: metasets,\n        data: {\n          datasets\n        }\n      } = this;\n\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n\n      metasets.forEach((meta, index) => {\n        if (datasets.filter(x => x === meta._dataset).length === 0) {\n          this._destroyDatasetMeta(index);\n        }\n      });\n    }\n\n    buildOrUpdateControllers() {\n      const newControllers = [];\n      const datasets = this.data.datasets;\n      let i, ilen;\n\n      this._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        const dataset = datasets[i];\n        let meta = this.getDatasetMeta(i);\n        const type = dataset.type || this.config.type;\n\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n\n          meta = this.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          const ControllerClass = registry.getController(type);\n          const {\n            datasetElementType,\n            dataElementType\n          } = defaults.datasets[type];\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      this._updateMetasets();\n\n      return newControllers;\n    }\n\n    _resetElements() {\n      each(this.data.datasets, (dataset, datasetIndex) => {\n        this.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n\n    reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n\n    update(mode) {\n      const config = this.config;\n      config.update();\n      const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      const animsDisabled = this._animationsDisabled = !options.animation;\n\n      this._updateScales();\n\n      this._checkEventBindings();\n\n      this._updateHiddenIndices();\n\n      this._plugins.invalidate();\n\n      if (this.notifyPlugins('beforeUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      const newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      let minPadding = 0;\n\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        const {\n          controller\n        } = this.getDatasetMeta(i);\n        const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n      this._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, controller => {\n          controller.reset();\n        });\n      }\n\n      this._updateDatasets(mode);\n\n      this.notifyPlugins('afterUpdate', {\n        mode\n      });\n\n      this._layers.sort(compare2Level('z', '_idx'));\n\n      const {\n        _active,\n        _lastEvent\n      } = this;\n\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n\n      this.render();\n    }\n\n    _updateScales() {\n      each(this.scales, scale => {\n        layouts.removeBox(this, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n\n    _checkEventBindings() {\n      const options = this.options;\n      const existingEvents = new Set(Object.keys(this._listeners));\n      const newEvents = new Set(options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n\n    _updateHiddenIndices() {\n      const {\n        _hiddenIndices\n      } = this;\n      const changes = this._getUniformDataChanges() || [];\n\n      for (const {\n        method,\n        start,\n        count\n      } of changes) {\n        const move = method === '_removeElements' ? -count : count;\n        moveNumericKeys(_hiddenIndices, start, move);\n      }\n    }\n\n    _getUniformDataChanges() {\n      const _dataChanges = this._dataChanges;\n\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n\n      this._dataChanges = [];\n      const datasetCount = this.data.datasets.length;\n\n      const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n\n      const changeSet = makeSet(0);\n\n      for (let i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n\n      return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n        method: a[1],\n        start: +a[2],\n        count: +a[3]\n      }));\n    }\n\n    _updateLayout(minPadding) {\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height, minPadding);\n      const area = this.chartArea;\n      const noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, box => {\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        this._layers.push(...box._layers());\n      }, this);\n\n      this._layers.forEach((item, index) => {\n        item._idx = index;\n      });\n\n      this.notifyPlugins('afterLayout');\n    }\n\n    _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._updateDataset(i, isFunction(mode) ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode\n      });\n    }\n\n    _updateDataset(index, mode) {\n      const meta = this.getDatasetMeta(index);\n      const args = {\n        meta,\n        index,\n        mode,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n\n    render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n\n    draw() {\n      let i;\n\n      if (this._resizeBeforeDraw) {\n        const {\n          width,\n          height\n        } = this._resizeBeforeDraw;\n\n        this._resize(width, height);\n\n        this._resizeBeforeDraw = null;\n      }\n\n      this.clear();\n\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      const layers = this._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this.notifyPlugins('afterDraw');\n    }\n\n    _getSortedDatasetMetas(filterVisible) {\n      const metasets = this._sortedMetasets;\n      const result = [];\n      let i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        const meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n\n    getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n\n    _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      const metasets = this.getSortedVisibleDatasetMetas();\n\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n\n    _drawDataset(meta) {\n      const ctx = this.ctx;\n      const clip = meta._clip;\n      const useClip = !clip.disabled;\n      const area = this.chartArea;\n      const args = {\n        meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n\n      meta.controller.draw();\n\n      if (useClip) {\n        unclipArea(ctx);\n      }\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n\n    isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      const method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n\n    getDatasetMeta(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      const metasets = this._metasets;\n      let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n\n    getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n\n    getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n\n    isDatasetVisible(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      const meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n\n    setDatasetVisibility(datasetIndex, visible) {\n      const meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n\n    toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n\n    getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n\n    _updateVisibility(datasetIndex, dataIndex, visible) {\n      const mode = visible ? 'show' : 'hide';\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      const anims = meta.controller._resolveAnimations(undefined, mode);\n\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible\n        });\n        this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n      }\n    }\n\n    hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n\n    show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n\n    _destroyDatasetMeta(datasetIndex) {\n      const meta = this._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n\n      delete this._metasets[datasetIndex];\n    }\n\n    _stop() {\n      let i, ilen;\n      this.stop();\n      animator.remove(this);\n\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n\n    destroy() {\n      this.notifyPlugins('beforeDestroy');\n      const {\n        canvas,\n        ctx\n      } = this;\n\n      this._stop();\n\n      this.config.clearCache();\n\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n\n    toBase64Image() {\n      return this.canvas.toDataURL(...arguments);\n    }\n\n    bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n\n    bindUserEvents() {\n      const listeners = this._listeners;\n      const platform = this.platform;\n\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n\n      const listener = (e, x, y) => {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        this._eventHandler(e);\n      };\n\n      each(this.options.events, type => _add(type, listener));\n    }\n\n    bindResponsiveEvents() {\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n\n      const listeners = this._responsiveListeners;\n      const platform = this.platform;\n\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n\n      const _remove = (type, listener) => {\n        if (listeners[type]) {\n          platform.removeEventListener(this, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      const listener = (width, height) => {\n        if (this.canvas) {\n          this.resize(width, height);\n        }\n      };\n\n      let detached;\n\n      const attached = () => {\n        _remove('attach', attached);\n\n        this.attached = true;\n        this.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = () => {\n        this.attached = false;\n\n        _remove('resize', listener);\n\n        this._stop();\n\n        this._resize(0, 0);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n\n    unbindEvents() {\n      each(this._listeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n\n    updateHoverStyle(items, mode, enabled) {\n      const prefix = enabled ? 'set' : 'remove';\n      let meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n\n    getActiveElements() {\n      return this._active || [];\n    }\n\n    setActiveElements(activeElements) {\n      const lastActive = this._active || [];\n      const active = activeElements.map(_ref4 => {\n        let {\n          datasetIndex,\n          index\n        } = _ref4;\n        const meta = this.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n\n    notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n\n    _updateHoverStyles(active, lastActive, replay) {\n      const hoverOptions = this.options.hover;\n\n      const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n      const deactivated = diff(lastActive, active);\n      const activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n\n    _eventHandler(e, replay) {\n      const args = {\n        event: e,\n        replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n\n      const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      const changed = this._handleEvent(e, replay, args.inChartArea);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        this.render();\n      }\n\n      return this;\n    }\n\n    _handleEvent(e, replay, inChartArea) {\n      const {\n        _active: lastActive = [],\n        options\n      } = this;\n      const useFinalPosition = replay;\n\n      const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n      const isClick = _isClickEvent(e);\n\n      const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n\n      const changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n\n    _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      const hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n\n  }\n\n  const invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\n  const enumerable = true;\n  Object.defineProperties(Chart, {\n    defaults: {\n      enumerable,\n      value: defaults\n    },\n    instances: {\n      enumerable,\n      value: instances\n    },\n    overrides: {\n      enumerable,\n      value: overrides\n    },\n    registry: {\n      enumerable,\n      value: registry\n    },\n    version: {\n      enumerable,\n      value: version\n    },\n    getChart: {\n      enumerable,\n      value: getChart\n    },\n    register: {\n      enumerable,\n      value: function () {\n        registry.add(...arguments);\n        invalidatePlugins();\n      }\n    },\n    unregister: {\n      enumerable,\n      value: function () {\n        registry.remove(...arguments);\n        invalidatePlugins();\n      }\n    }\n  });\n\n  function clipArc(ctx, element, endAngle) {\n    const {\n      startAngle,\n      pixelMargin,\n      x,\n      y,\n      outerRadius,\n      innerRadius\n    } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n    if (innerRadius > pixelMargin) {\n      angleMargin = pixelMargin / innerRadius;\n      ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n      ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  function toRadiusCorners(value) {\n    return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n  }\n\n  function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n    const computeOuterLimit = val => {\n      const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n      return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n\n    return {\n      outerStart: computeOuterLimit(o.outerStart),\n      outerEnd: computeOuterLimit(o.outerEnd),\n      innerStart: _limitValue(o.innerStart, 0, innerLimit),\n      innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n  }\n\n  function rThetaToXY(r, theta, x, y) {\n    return {\n      x: x + r * Math.cos(theta),\n      y: y + r * Math.sin(theta)\n    };\n  }\n\n  function pathArc(ctx, element, offset, spacing, end, circular) {\n    const {\n      x,\n      y,\n      startAngle: start,\n      pixelMargin,\n      innerRadius: innerR\n    } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n\n    if (spacing) {\n      const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n      const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n      const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n      const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n      spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const {\n      outerStart,\n      outerEnd,\n      innerStart,\n      innerEnd\n    } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n\n    if (circular) {\n      ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n      if (outerEnd > 0) {\n        const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n      }\n\n      const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n      ctx.lineTo(p4.x, p4.y);\n\n      if (innerEnd > 0) {\n        const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n      }\n\n      ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n      if (innerStart > 0) {\n        const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n      }\n\n      const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n      ctx.lineTo(p8.x, p8.y);\n\n      if (outerStart > 0) {\n        const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n      }\n    } else {\n      ctx.moveTo(x, y);\n      const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n      const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n      ctx.lineTo(outerStartX, outerStartY);\n      const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n      const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n      ctx.lineTo(outerEndX, outerEndY);\n    }\n\n    ctx.closePath();\n  }\n\n  function drawArc(ctx, element, offset, spacing, circular) {\n    const {\n      fullCircles,\n      startAngle,\n      circumference\n    } = element;\n    let endAngle = element.endAngle;\n\n    if (fullCircles) {\n      pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n\n      for (let i = 0; i < fullCircles; ++i) {\n        ctx.fill();\n      }\n\n      if (!isNaN(circumference)) {\n        endAngle = startAngle + circumference % TAU;\n\n        if (circumference % TAU === 0) {\n          endAngle += TAU;\n        }\n      }\n    }\n\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n  }\n\n  function drawFullCircleBorders(ctx, element, inner) {\n    const {\n      x,\n      y,\n      startAngle,\n      pixelMargin,\n      fullCircles\n    } = element;\n    const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n    const innerRadius = element.innerRadius + pixelMargin;\n    let i;\n\n    if (inner) {\n      clipArc(ctx, element, startAngle + TAU);\n    }\n\n    ctx.beginPath();\n    ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n  }\n\n  function drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n    const {\n      options\n    } = element;\n    const {\n      borderWidth,\n      borderJoinStyle\n    } = options;\n    const inner = options.borderAlign === 'inner';\n\n    if (!borderWidth) {\n      return;\n    }\n\n    if (inner) {\n      ctx.lineWidth = borderWidth * 2;\n      ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n      ctx.lineWidth = borderWidth;\n      ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n\n    if (element.fullCircles) {\n      drawFullCircleBorders(ctx, element, inner);\n    }\n\n    if (inner) {\n      clipArc(ctx, element, endAngle);\n    }\n\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n\n  class ArcElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.circumference = undefined;\n      this.startAngle = undefined;\n      this.endAngle = undefined;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.pixelMargin = 0;\n      this.fullCircles = 0;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    inRange(chartX, chartY, useFinalPosition) {\n      const point = this.getProps(['x', 'y'], useFinalPosition);\n      const {\n        angle,\n        distance\n      } = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      });\n      const {\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius,\n        circumference\n      } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const rAdjust = this.options.spacing / 2;\n\n      const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n      const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n      return betweenAngles && withinRadius;\n    }\n\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius\n      } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const {\n        offset,\n        spacing\n      } = this.options;\n      const halfAngle = (startAngle + endAngle) / 2;\n      const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n\n    tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n\n    draw(ctx) {\n      const {\n        options,\n        circumference\n      } = this;\n      const offset = (options.offset || 0) / 2;\n      const spacing = (options.spacing || 0) / 2;\n      const circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      let radiusOffset = 0;\n\n      if (offset) {\n        radiusOffset = offset / 2;\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n      ctx.restore();\n    }\n\n  }\n\n  ArcElement.id = 'arc';\n  ArcElement.defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true\n  };\n  ArcElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  function setStyle(ctx, options) {\n    let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n  }\n\n  function lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n  }\n\n  function getLineMethod(options) {\n    if (options.stepped) {\n      return _steppedLineTo;\n    }\n\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierCurveTo;\n    }\n\n    return lineTo;\n  }\n\n  function pathVars(points, segment) {\n    let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const count = points.length;\n    const {\n      start: paramsStart = 0,\n      end: paramsEnd = count - 1\n    } = params;\n    const {\n      start: segmentStart,\n      end: segmentEnd\n    } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n      count,\n      start,\n      loop: segment.loop,\n      ilen: end < start && !outside ? count + end - start : end - start\n    };\n  }\n\n  function pathSegment(ctx, line, segment, params) {\n    const {\n      points,\n      options\n    } = line;\n    const {\n      count,\n      start,\n      loop,\n      ilen\n    } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let {\n      move = true,\n      reverse\n    } = params || {};\n    let i, point, prev;\n\n    for (i = 0; i <= ilen; ++i) {\n      point = points[(start + (reverse ? ilen - i : i)) % count];\n\n      if (point.skip) {\n        continue;\n      } else if (move) {\n        ctx.moveTo(point.x, point.y);\n        move = false;\n      } else {\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n      }\n\n      prev = point;\n    }\n\n    if (loop) {\n      point = points[(start + (reverse ? ilen : 0)) % count];\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    return !!loop;\n  }\n\n  function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const {\n      count,\n      start,\n      ilen\n    } = pathVars(points, segment, params);\n    const {\n      move = true,\n      reverse\n    } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n\n    const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n    const drawX = () => {\n      if (minY !== maxY) {\n        ctx.lineTo(avgX, maxY);\n        ctx.lineTo(avgX, minY);\n        ctx.lineTo(avgX, lastY);\n      }\n    };\n\n    if (move) {\n      point = points[pointIndex(0)];\n      ctx.moveTo(point.x, point.y);\n    }\n\n    for (i = 0; i <= ilen; ++i) {\n      point = points[pointIndex(i)];\n\n      if (point.skip) {\n        continue;\n      }\n\n      const x = point.x;\n      const y = point.y;\n      const truncX = x | 0;\n\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n        } else if (y > maxY) {\n          maxY = y;\n        }\n\n        avgX = (countX * avgX + x) / ++countX;\n      } else {\n        drawX();\n        ctx.lineTo(x, y);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n      }\n\n      lastY = y;\n    }\n\n    drawX();\n  }\n\n  function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n  }\n\n  function _getInterpolationMethod(options) {\n    if (options.stepped) {\n      return _steppedInterpolation;\n    }\n\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierInterpolation;\n    }\n\n    return _pointInLine;\n  }\n\n  function strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n\n    if (!path) {\n      path = line._path = new Path2D();\n\n      if (line.path(path, start, count)) {\n        path.closePath();\n      }\n    }\n\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n  }\n\n  function strokePathDirect(ctx, line, start, count) {\n    const {\n      segments,\n      options\n    } = line;\n\n    const segmentMethod = _getSegmentMethod(line);\n\n    for (const segment of segments) {\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  }\n\n  const usePath2D = typeof Path2D === 'function';\n\n  function draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n      strokePathWithCache(ctx, line, start, count);\n    } else {\n      strokePathDirect(ctx, line, start, count);\n    }\n  }\n\n  class LineElement extends Element {\n    constructor(cfg) {\n      super();\n      this.animated = true;\n      this.options = undefined;\n      this._chart = undefined;\n      this._loop = undefined;\n      this._fullLoop = undefined;\n      this._path = undefined;\n      this._points = undefined;\n      this._segments = undefined;\n      this._decimated = false;\n      this._pointsUpdated = false;\n      this._datasetIndex = undefined;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    updateControlPoints(chartArea, indexAxis) {\n      const options = this.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n        this._pointsUpdated = true;\n      }\n    }\n\n    set points(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n\n    get points() {\n      return this._points;\n    }\n\n    get segments() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n\n    first() {\n      const segments = this.segments;\n      const points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n\n    last() {\n      const segments = this.segments;\n      const points = this.points;\n      const count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n\n    interpolate(point, property) {\n      const options = this.options;\n      const value = point[property];\n      const points = this.points;\n\n      const segments = _boundSegments(this, {\n        property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      const result = [];\n\n      const _interpolate = _getInterpolationMethod(options);\n\n      let i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        const {\n          start,\n          end\n        } = segments[i];\n        const p1 = points[start];\n        const p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n\n    pathSegment(ctx, segment, params) {\n      const segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n\n    path(ctx, start, count) {\n      const segments = this.segments;\n\n      const segmentMethod = _getSegmentMethod(this);\n\n      let loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n\n      for (const segment of segments) {\n        loop &= segmentMethod(ctx, this, segment, {\n          start,\n          end: start + count - 1\n        });\n      }\n\n      return !!loop;\n    }\n\n    draw(ctx, chartArea, start, count) {\n      const options = this.options || {};\n      const points = this.points || [];\n\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        draw(ctx, this, start, count);\n        ctx.restore();\n      }\n\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n\n  }\n\n  LineElement.id = 'line';\n  LineElement.defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  LineElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  LineElement.descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n\n  function inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const {\n      [axis]: value\n    } = el.getProps([axis], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n  }\n\n  class PointElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.parsed = undefined;\n      this.skip = undefined;\n      this.stop = undefined;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    inRange(mouseX, mouseY, useFinalPosition) {\n      const options = this.options;\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n\n    inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n\n    inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n\n    size(options) {\n      options = options || this.options || {};\n      let radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      const borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n\n    draw(ctx, area) {\n      const options = this.options;\n\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n\n    getRange() {\n      const options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n\n  }\n\n  PointElement.id = 'point';\n  PointElement.defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  PointElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  function getBarBounds(bar, useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      width,\n      height\n    } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n    let left, right, top, bottom, half;\n\n    if (bar.horizontal) {\n      half = height / 2;\n      left = Math.min(x, base);\n      right = Math.max(x, base);\n      top = y - half;\n      bottom = y + half;\n    } else {\n      half = width / 2;\n      left = x - half;\n      right = x + half;\n      top = Math.min(y, base);\n      bottom = Math.max(y, base);\n    }\n\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  function skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n  }\n\n  function parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n      t: skipOrLimit(skip.top, o.top, 0, maxH),\n      r: skipOrLimit(skip.right, o.right, 0, maxW),\n      b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n      l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n  }\n\n  function parseBorderRadius(bar, maxW, maxH) {\n    const {\n      enableBorderRadius\n    } = bar.getProps(['enableBorderRadius']);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n      topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n      topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n      bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n      bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n  }\n\n  function boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height,\n        radius\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b,\n        radius: {\n          topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n          topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n          bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n          bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n        }\n      }\n    };\n  }\n\n  function inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n  }\n\n  function hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n  }\n\n  function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n  }\n\n  function inflateRect(rect, amount) {\n    let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n      x: rect.x + x,\n      y: rect.y + y,\n      w: rect.w + w,\n      h: rect.h + h,\n      radius: rect.radius\n    };\n  }\n\n  class BarElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.horizontal = undefined;\n      this.base = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.inflateAmount = undefined;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    draw(ctx) {\n      const {\n        inflateAmount,\n        options: {\n          borderColor,\n          backgroundColor\n        }\n      } = this;\n      const {\n        inner,\n        outer\n      } = boundingRects(this);\n      const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n\n    inRange(mouseX, mouseY, useFinalPosition) {\n      return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n\n    inXRange(mouseX, useFinalPosition) {\n      return inRange(this, mouseX, null, useFinalPosition);\n    }\n\n    inYRange(mouseY, useFinalPosition) {\n      return inRange(this, null, mouseY, useFinalPosition);\n    }\n\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        base,\n        horizontal\n      } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n\n    getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n\n  }\n\n  BarElement.id = 'bar';\n  BarElement.defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n  BarElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  var elements = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcElement: ArcElement,\n    LineElement: LineElement,\n    PointElement: PointElement,\n    BarElement: BarElement\n  });\n\n  function lttbDecimation(data, start, count, availableWidth, options) {\n    const samples = options.samples || availableWidth;\n\n    if (samples >= count) {\n      return data.slice(start, start + count);\n    }\n\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n\n    for (i = 0; i < samples - 2; i++) {\n      let avgX = 0;\n      let avgY = 0;\n      let j;\n      const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n      const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n      const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n      for (j = avgRangeStart; j < avgRangeEnd; j++) {\n        avgX += data[j].x;\n        avgY += data[j].y;\n      }\n\n      avgX /= avgRangeLength;\n      avgY /= avgRangeLength;\n      const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n      const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n      const {\n        x: pointAx,\n        y: pointAy\n      } = data[a];\n      maxArea = area = -1;\n\n      for (j = rangeOffs; j < rangeTo; j++) {\n        area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n        if (area > maxArea) {\n          maxArea = area;\n          maxAreaPoint = data[j];\n          nextA = j;\n        }\n      }\n\n      decimated[sampledIndex++] = maxAreaPoint;\n      a = nextA;\n    }\n\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n  }\n\n  function minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n\n    for (i = start; i < start + count; ++i) {\n      point = data[i];\n      x = (point.x - xMin) / dx * availableWidth;\n      y = point.y;\n      const truncX = x | 0;\n\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n          minIndex = i;\n        } else if (y > maxY) {\n          maxY = y;\n          maxIndex = i;\n        }\n\n        avgX = (countX * avgX + point.x) / ++countX;\n      } else {\n        const lastIndex = i - 1;\n\n        if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n          const intermediateIndex1 = Math.min(minIndex, maxIndex);\n          const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n          if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n            decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n              x: avgX\n            }));\n          }\n\n          if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n            decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n              x: avgX\n            }));\n          }\n        }\n\n        if (i > 0 && lastIndex !== startIndex) {\n          decimated.push(data[lastIndex]);\n        }\n\n        decimated.push(point);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n        minIndex = maxIndex = startIndex = i;\n      }\n    }\n\n    return decimated;\n  }\n\n  function cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {\n        value: data\n      });\n    }\n  }\n\n  function cleanDecimatedData(chart) {\n    chart.data.datasets.forEach(dataset => {\n      cleanDecimatedDataset(dataset);\n    });\n  }\n\n  function getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const {\n      iScale\n    } = meta;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n\n    return {\n      start,\n      count\n    };\n  }\n\n  var plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n      algorithm: 'min-max',\n      enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options) => {\n      if (!options.enabled) {\n        cleanDecimatedData(chart);\n        return;\n      }\n\n      const availableWidth = chart.width;\n      chart.data.datasets.forEach((dataset, datasetIndex) => {\n        const {\n          _data,\n          indexAxis\n        } = dataset;\n        const meta = chart.getDatasetMeta(datasetIndex);\n        const data = _data || dataset.data;\n\n        if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n          return;\n        }\n\n        if (!meta.controller.supportsDecimation) {\n          return;\n        }\n\n        const xAxis = chart.scales[meta.xAxisID];\n\n        if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n          return;\n        }\n\n        if (chart.options.parsing) {\n          return;\n        }\n\n        let {\n          start,\n          count\n        } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n        const threshold = options.threshold || 4 * availableWidth;\n\n        if (count <= threshold) {\n          cleanDecimatedDataset(dataset);\n          return;\n        }\n\n        if (isNullOrUndef(_data)) {\n          dataset._data = data;\n          delete dataset.data;\n          Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n              return this._decimated;\n            },\n            set: function (d) {\n              this._data = d;\n            }\n          });\n        }\n\n        let decimated;\n\n        switch (options.algorithm) {\n          case 'lttb':\n            decimated = lttbDecimation(data, start, count, availableWidth, options);\n            break;\n\n          case 'min-max':\n            decimated = minMaxDecimation(data, start, count, availableWidth);\n            break;\n\n          default:\n            throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n        }\n\n        dataset._decimated = decimated;\n      });\n    },\n\n    destroy(chart) {\n      cleanDecimatedData(chart);\n    }\n\n  };\n\n  function _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n\n    for (const segment of segments) {\n      let {\n        start,\n        end\n      } = segment;\n      end = _findSegmentEnd(start, end, points);\n\n      const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      const targetSegments = _boundSegments(target, bounds);\n\n      for (const tgt of targetSegments) {\n        const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n        const fillSources = _boundSegment(segment, points, subBounds);\n\n        for (const fillSource of fillSources) {\n          parts.push({\n            source: fillSource,\n            target: tgt,\n            start: {\n              [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n            },\n            end: {\n              [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n            }\n          });\n        }\n      }\n    }\n\n    return parts;\n  }\n\n  function _getBounds(property, first, last, loop) {\n    if (loop) {\n      return;\n    }\n\n    let start = first[property];\n    let end = last[property];\n\n    if (property === 'angle') {\n      start = _normalizeAngle(start);\n      end = _normalizeAngle(end);\n    }\n\n    return {\n      property,\n      start,\n      end\n    };\n  }\n\n  function _pointsFromSegments(boundary, line) {\n    const {\n      x = null,\n      y = null\n    } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(_ref5 => {\n      let {\n        start,\n        end\n      } = _ref5;\n      end = _findSegmentEnd(start, end, linePoints);\n      const first = linePoints[start];\n      const last = linePoints[end];\n\n      if (y !== null) {\n        points.push({\n          x: first.x,\n          y\n        });\n        points.push({\n          x: last.x,\n          y\n        });\n      } else if (x !== null) {\n        points.push({\n          x,\n          y: first.y\n        });\n        points.push({\n          x,\n          y: last.y\n        });\n      }\n    });\n    return points;\n  }\n\n  function _findSegmentEnd(start, end, points) {\n    for (; end > start; end--) {\n      const point = points[end];\n\n      if (!isNaN(point.x) && !isNaN(point.y)) {\n        break;\n      }\n    }\n\n    return end;\n  }\n\n  function _getEdge(a, b, prop, fn) {\n    if (a && b) {\n      return fn(a[prop], b[prop]);\n    }\n\n    return a ? a[prop] : b ? b[prop] : 0;\n  }\n\n  function _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n\n    if (isArray(boundary)) {\n      _loop = true;\n      points = boundary;\n    } else {\n      points = _pointsFromSegments(boundary, line);\n    }\n\n    return points.length ? new LineElement({\n      points,\n      options: {\n        tension: 0\n      },\n      _loop,\n      _fullLoop: _loop\n    }) : null;\n  }\n\n  function _shouldApplyFill(source) {\n    return source && source.fill !== false;\n  }\n\n  function _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [index];\n    let target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isNumberFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function _decodeFill(line, index, count) {\n    const fill = parseFillOption(line);\n\n    if (isObject(fill)) {\n      return isNaN(fill.value) ? false : fill;\n    }\n\n    let target = parseFloat(fill);\n\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n      return decodeTargetIndex(fill[0], index, target, count);\n    }\n\n    return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n  }\n\n  function decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  function _getTargetPixel(fill, scale) {\n    let pixel = null;\n\n    if (fill === 'start') {\n      pixel = scale.bottom;\n    } else if (fill === 'end') {\n      pixel = scale.top;\n    } else if (isObject(fill)) {\n      pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n      pixel = scale.getBasePixel();\n    }\n\n    return pixel;\n  }\n\n  function _getTargetValue(fill, scale, startValue) {\n    let value;\n\n    if (fill === 'start') {\n      value = startValue;\n    } else if (fill === 'end') {\n      value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n      value = fill.value;\n    } else {\n      value = scale.getBaseValue();\n    }\n\n    return value;\n  }\n\n  function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n    if (fill === undefined) {\n      fill = !!options.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    return fill;\n  }\n\n  function _buildStackLine(source) {\n    const {\n      scale,\n      index,\n      line\n    } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n      x: null,\n      y: scale.bottom\n    }, line));\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n\n      for (let j = segment.start; j <= segment.end; j++) {\n        addPointsBelow(points, sourcePoints[j], linesBelow);\n      }\n    }\n\n    return new LineElement({\n      points,\n      options: {}\n    });\n  }\n\n  function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n\n    for (let i = 0; i < metas.length; i++) {\n      const meta = metas[i];\n\n      if (meta.index === index) {\n        break;\n      }\n\n      if (!meta.hidden) {\n        below.unshift(meta.dataset);\n      }\n    }\n\n    return below;\n  }\n\n  function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n\n    for (let j = 0; j < linesBelow.length; j++) {\n      const line = linesBelow[j];\n      const {\n        first,\n        last,\n        point\n      } = findPoint(line, sourcePoint, 'x');\n\n      if (!point || first && last) {\n        continue;\n      }\n\n      if (first) {\n        postponed.unshift(point);\n      } else {\n        points.push(point);\n\n        if (!last) {\n          break;\n        }\n      }\n    }\n\n    points.push(...postponed);\n  }\n\n  function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n\n    if (!point) {\n      return {};\n    }\n\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const firstValue = linePoints[segment.start][property];\n      const lastValue = linePoints[segment.end][property];\n\n      if (_isBetween(pointValue, firstValue, lastValue)) {\n        first = pointValue === firstValue;\n        last = pointValue === lastValue;\n        break;\n      }\n    }\n\n    return {\n      first,\n      last,\n      point\n    };\n  }\n\n  class simpleArc {\n    constructor(opts) {\n      this.x = opts.x;\n      this.y = opts.y;\n      this.radius = opts.radius;\n    }\n\n    pathSegment(ctx, bounds, opts) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n\n    interpolate(point) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      const angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle\n      };\n    }\n\n  }\n\n  function _getTarget(source) {\n    const {\n      chart,\n      fill,\n      line\n    } = source;\n\n    if (isNumberFinite(fill)) {\n      return getLineByIndex(chart, fill);\n    }\n\n    if (fill === 'stack') {\n      return _buildStackLine(source);\n    }\n\n    if (fill === 'shape') {\n      return true;\n    }\n\n    const boundary = computeBoundary(source);\n\n    if (boundary instanceof simpleArc) {\n      return boundary;\n    }\n\n    return _createBoundaryLine(boundary, line);\n  }\n\n  function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n  }\n\n  function computeBoundary(source) {\n    const scale = source.scale || {};\n\n    if (scale.getPointPositionForValue) {\n      return computeCircularBoundary(source);\n    }\n\n    return computeLinearBoundary(source);\n  }\n\n  function computeLinearBoundary(source) {\n    const {\n      scale = {},\n      fill\n    } = source;\n\n    const pixel = _getTargetPixel(fill, scale);\n\n    if (isNumberFinite(pixel)) {\n      const horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? pixel : null,\n        y: horizontal ? null : pixel\n      };\n    }\n\n    return null;\n  }\n\n  function computeCircularBoundary(source) {\n    const {\n      scale,\n      fill\n    } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n\n    const value = _getTargetValue(fill, scale, start);\n\n    const target = [];\n\n    if (options.grid.circular) {\n      const center = scale.getPointPositionForValue(0, start);\n      return new simpleArc({\n        x: center.x,\n        y: center.y,\n        radius: scale.getDistanceFromCenterForValue(value)\n      });\n    }\n\n    for (let i = 0; i < length; ++i) {\n      target.push(scale.getPointPositionForValue(i, value));\n    }\n\n    return target;\n  }\n\n  function _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n\n    const {\n      line,\n      scale,\n      axis\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale,\n        axis\n      });\n      unclipArea(ctx);\n    }\n  }\n\n  function doFill(ctx, cfg) {\n    const {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale\n    } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n\n    if (property === 'x' && below !== above) {\n      clipVertical(ctx, target, area.top);\n      fill(ctx, {\n        line,\n        target,\n        color: above,\n        scale,\n        property\n      });\n      ctx.restore();\n      ctx.save();\n      clipVertical(ctx, target, area.bottom);\n    }\n\n    fill(ctx, {\n      line,\n      target,\n      color: below,\n      scale,\n      property\n    });\n    ctx.restore();\n  }\n\n  function clipVertical(ctx, target, clipY) {\n    const {\n      segments,\n      points\n    } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n\n    for (const segment of segments) {\n      const {\n        start,\n        end\n      } = segment;\n      const firstPoint = points[start];\n\n      const lastPoint = points[_findSegmentEnd(start, end, points)];\n\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  function fill(ctx, cfg) {\n    const {\n      line,\n      target,\n      property,\n      color,\n      scale\n    } = cfg;\n\n    const segments = _segments(line, target, property);\n\n    for (const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } of segments) {\n      const {\n        style: {\n          backgroundColor = color\n        } = {}\n      } = src;\n      const notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      const lineLoop = !!line.pathSegment(ctx, src);\n      let loop;\n\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n\n        const targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  }\n\n  function clipBounds(ctx, scale, bounds) {\n    const {\n      top,\n      bottom\n    } = scale.chart.chartArea;\n    const {\n      property,\n      start,\n      end\n    } = bounds || {};\n\n    if (property === 'x') {\n      ctx.beginPath();\n      ctx.rect(start, top, end - start, bottom - top);\n      ctx.clip();\n    }\n  }\n\n  function interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n\n    if (interpolatedPoint) {\n      ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n  }\n\n  var index = {\n    id: 'filler',\n\n    afterDatasetsUpdate(chart, _args, options) {\n      const count = (chart.data.datasets || []).length;\n      const sources = [];\n      let meta, i, line, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        line = meta.dataset;\n        source = null;\n\n        if (line && line.options && line instanceof LineElement) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            index: i,\n            fill: _decodeFill(line, i, count),\n            chart,\n            axis: meta.controller.options.indexAxis,\n            scale: meta.vScale,\n            line\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source || source.fill === false) {\n          continue;\n        }\n\n        source.fill = _resolveTarget(sources, i, options.propagate);\n      }\n    },\n\n    beforeDraw(chart, _args, options) {\n      const draw = options.drawTime === 'beforeDraw';\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      const area = chart.chartArea;\n\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n\n        if (!source) {\n          continue;\n        }\n\n        source.line.updateControlPoints(area, source.axis);\n\n        if (draw && source.fill) {\n          _drawfill(chart.ctx, source, area);\n        }\n      }\n    },\n\n    beforeDatasetsDraw(chart, _args, options) {\n      if (options.drawTime !== 'beforeDatasetsDraw') {\n        return;\n      }\n\n      const metasets = chart.getSortedVisibleDatasetMetas();\n\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n\n        if (_shouldApplyFill(source)) {\n          _drawfill(chart.ctx, source, chart.chartArea);\n        }\n      }\n    },\n\n    beforeDatasetDraw(chart, args, options) {\n      const source = args.meta.$filler;\n\n      if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n        return;\n      }\n\n      _drawfill(chart.ctx, source, chart.chartArea);\n    },\n\n    defaults: {\n      propagate: true,\n      drawTime: 'beforeDatasetDraw'\n    }\n  };\n\n  const getBoxSize = (labelOpts, fontSize) => {\n    let {\n      boxHeight = fontSize,\n      boxWidth = fontSize\n    } = labelOpts;\n\n    if (labelOpts.usePointStyle) {\n      boxHeight = Math.min(boxHeight, fontSize);\n      boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n\n    return {\n      boxWidth,\n      boxHeight,\n      itemHeight: Math.max(fontSize, boxHeight)\n    };\n  };\n\n  const itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\n  class Legend extends Element {\n    constructor(config) {\n      super();\n      this._added = false;\n      this.legendHitBoxes = [];\n      this._hoveredItem = null;\n      this.doughnutMode = false;\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this.legendItems = undefined;\n      this.columnSizes = undefined;\n      this.lineWidths = undefined;\n      this.maxHeight = undefined;\n      this.maxWidth = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this._margins = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n\n    update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n\n    buildLabels() {\n      const labelOpts = this.options.labels || {};\n      let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n      }\n\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n\n      this.legendItems = legendItems;\n    }\n\n    fit() {\n      const {\n        options,\n        ctx\n      } = this;\n\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n\n      const labelOpts = options.labels;\n      const labelFont = toFont(labelOpts.font);\n      const fontSize = labelFont.size;\n\n      const titleHeight = this._computeTitleHeight();\n\n      const {\n        boxWidth,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      let width, height;\n      ctx.font = labelFont.string;\n\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n\n    _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxWidth,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const lineWidths = this.lineWidths = [0];\n      const lineHeight = itemHeight + padding;\n      let totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      let row = -1;\n      let top = -lineHeight;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top,\n          row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n\n    _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxHeight,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const columnSizes = this.columnSizes = [];\n      const heightLimit = maxHeight - titleHeight;\n      let totalWidth = padding;\n      let currentColWidth = 0;\n      let currentColHeight = 0;\n      let left = 0;\n      let col = 0;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left,\n          top: currentColHeight,\n          col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n\n    adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n\n      const titleHeight = this._computeTitleHeight();\n\n      const {\n        legendHitBoxes: hitboxes,\n        options: {\n          align,\n          labels: {\n            padding\n          },\n          rtl\n        }\n      } = this;\n      const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n      if (this.isHorizontal()) {\n        let row = 0;\n\n        let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n        for (const hitbox of hitboxes) {\n          if (row !== hitbox.row) {\n            row = hitbox.row;\n            left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n          }\n\n          hitbox.top += this.top + titleHeight + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n          left += hitbox.width + padding;\n        }\n      } else {\n        let col = 0;\n\n        let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n        for (const hitbox of hitboxes) {\n          if (hitbox.col !== col) {\n            col = hitbox.col;\n            top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n          }\n\n          hitbox.top = top;\n          hitbox.left += this.left + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n          top += hitbox.height + padding;\n        }\n      }\n    }\n\n    isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n\n    draw() {\n      if (this.options.display) {\n        const ctx = this.ctx;\n        clipArea(ctx, this);\n\n        this._draw();\n\n        unclipArea(ctx);\n      }\n    }\n\n    _draw() {\n      const {\n        options: opts,\n        columnSizes,\n        lineWidths,\n        ctx\n      } = this;\n      const {\n        align,\n        labels: labelOpts\n      } = opts;\n      const defaultColor = defaults.color;\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const labelFont = toFont(labelOpts.font);\n      const {\n        color: fontColor,\n        padding\n      } = labelOpts;\n      const fontSize = labelFont.size;\n      const halfFontSize = fontSize / 2;\n      let cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      const {\n        boxWidth,\n        boxHeight,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n\n      const drawLegendBox = function (x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          const drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          const centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          const borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(v => v !== 0)) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      const fillText = function (x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      const isHorizontal = this.isHorizontal();\n\n      const titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(this.ctx, opts.textDirection);\n      const lineHeight = itemHeight + padding;\n      this.legendItems.forEach((legendItem, i) => {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        const textWidth = ctx.measureText(legendItem.text).width;\n        const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        const width = boxWidth + halfFontSize + textWidth;\n        let x = cursor.x;\n        let y = cursor.y;\n        rtlHelper.setWidth(this.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > this.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > this.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n        }\n\n        const realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n\n    drawTitle() {\n      const opts = this.options;\n      const titleOpts = opts.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const ctx = this.ctx;\n      const position = titleOpts.position;\n      const halfFontSize = titleFont.size / 2;\n      const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      let y;\n      let left = this.left;\n      let maxWidth = this.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max(...this.lineWidths);\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n\n      const x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n\n    _computeTitleHeight() {\n      const titleOpts = this.options.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n\n    _getLegendItemAt(x, y) {\n      let i, hitBox, lh;\n\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n\n    handleEvent(e) {\n      const opts = this.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        const previous = this._hoveredItem;\n        const sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n\n        this._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n\n  }\n\n  function isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n      return true;\n    }\n\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n    _element: Legend,\n\n    start(chart, _args, options) {\n      const legend = chart.legend = new Legend({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, legend, options);\n      layouts.addBox(chart, legend);\n    },\n\n    stop(chart) {\n      layouts.removeBox(chart, chart.legend);\n      delete chart.legend;\n    },\n\n    beforeUpdate(chart, _args, options) {\n      const legend = chart.legend;\n      layouts.configure(chart, legend, options);\n      legend.options = options;\n    },\n\n    afterUpdate(chart) {\n      const legend = chart.legend;\n      legend.buildLabels();\n      legend.adjustHitBoxes();\n    },\n\n    afterEvent(chart, args) {\n      if (!args.replay) {\n        chart.legend.handleEvent(args.event);\n      }\n    },\n\n    defaults: {\n      display: true,\n      position: 'top',\n      align: 'center',\n      fullSize: true,\n      reverse: false,\n      weight: 1000,\n\n      onClick(e, legendItem, legend) {\n        const index = legendItem.datasetIndex;\n        const ci = legend.chart;\n\n        if (ci.isDatasetVisible(index)) {\n          ci.hide(index);\n          legendItem.hidden = true;\n        } else {\n          ci.show(index);\n          legendItem.hidden = false;\n        }\n      },\n\n      onHover: null,\n      onLeave: null,\n      labels: {\n        color: ctx => ctx.chart.options.color,\n        boxWidth: 40,\n        padding: 10,\n\n        generateLabels(chart) {\n          const datasets = chart.data.datasets;\n          const {\n            labels: {\n              usePointStyle,\n              pointStyle,\n              textAlign,\n              color\n            }\n          } = chart.legend.options;\n          return chart._getSortedDatasetMetas().map(meta => {\n            const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n            const borderWidth = toPadding(style.borderWidth);\n            return {\n              text: datasets[meta.index].label,\n              fillStyle: style.backgroundColor,\n              fontColor: color,\n              hidden: !meta.visible,\n              lineCap: style.borderCapStyle,\n              lineDash: style.borderDash,\n              lineDashOffset: style.borderDashOffset,\n              lineJoin: style.borderJoinStyle,\n              lineWidth: (borderWidth.width + borderWidth.height) / 4,\n              strokeStyle: style.borderColor,\n              pointStyle: pointStyle || style.pointStyle,\n              rotation: style.rotation,\n              textAlign: textAlign || style.textAlign,\n              borderRadius: 0,\n              datasetIndex: meta.index\n            };\n          }, this);\n        }\n\n      },\n      title: {\n        color: ctx => ctx.chart.options.color,\n        display: false,\n        position: 'center',\n        text: ''\n      }\n    },\n    descriptors: {\n      _scriptable: name => !name.startsWith('on'),\n      labels: {\n        _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n      }\n    }\n  };\n\n  class Title extends Element {\n    constructor(config) {\n      super();\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this._padding = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n\n    update(maxWidth, maxHeight) {\n      const opts = this.options;\n      this.left = 0;\n      this.top = 0;\n\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      const lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n\n      const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n\n    isHorizontal() {\n      const pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n\n    _drawArgs(offset) {\n      const {\n        top,\n        left,\n        bottom,\n        right,\n        options\n      } = this;\n      const align = options.align;\n      let rotation = 0;\n      let maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      };\n    }\n\n    draw() {\n      const ctx = this.ctx;\n      const opts = this.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      const fontOpts = toFont(opts.font);\n      const lineHeight = fontOpts.lineHeight;\n      const offset = lineHeight / 2 + this._padding.top;\n\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = this._drawArgs(offset);\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth,\n        rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n\n  }\n\n  function createTitle(chart, titleOpts) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n    _element: Title,\n\n    start(chart, _args, options) {\n      createTitle(chart, options);\n    },\n\n    stop(chart) {\n      const titleBlock = chart.titleBlock;\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    },\n\n    beforeUpdate(chart, _args, options) {\n      const title = chart.titleBlock;\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'bold'\n      },\n      fullSize: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const map = new WeakMap();\n  var plugin_subtitle = {\n    id: 'subtitle',\n\n    start(chart, _args, options) {\n      const title = new Title({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, title, options);\n      layouts.addBox(chart, title);\n      map.set(chart, title);\n    },\n\n    stop(chart) {\n      layouts.removeBox(chart, map.get(chart));\n      map.delete(chart);\n    },\n\n    beforeUpdate(chart, _args, options) {\n      const title = map.get(chart);\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'normal'\n      },\n      fullSize: true,\n      padding: 0,\n      position: 'top',\n      text: '',\n      weight: 1500\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const positioners = {\n    average(items) {\n      if (!items.length) {\n        return false;\n      }\n\n      let i, len;\n      let x = 0;\n      let y = 0;\n      let count = 0;\n\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n\n        if (el && el.hasValue()) {\n          const pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    nearest(items, eventPosition) {\n      if (!items.length) {\n        return false;\n      }\n\n      let x = eventPosition.x;\n      let y = eventPosition.y;\n      let minDistance = Number.POSITIVE_INFINITY;\n      let i, len, nearestElement;\n\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n\n        if (el && el.hasValue()) {\n          const center = el.getCenterPoint();\n          const d = distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        const tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x,\n        y\n      };\n    }\n\n  };\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (isArray(toPush)) {\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n\n  function createTooltipItem(chart, item) {\n    const {\n      element,\n      datasetIndex,\n      index\n    } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const {\n      label,\n      value\n    } = controller.getLabelAndValue(index);\n    return {\n      chart,\n      label,\n      parsed: controller.getParsed(index),\n      raw: chart.data.datasets[datasetIndex].data[index],\n      formattedValue: value,\n      dataset: controller.getDataset(),\n      dataIndex: index,\n      datasetIndex,\n      element\n    };\n  }\n\n  function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const {\n      body,\n      footer,\n      title\n    } = tooltip;\n    const {\n      boxWidth,\n      boxHeight\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n    if (titleLineCount) {\n      height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n\n    if (combinedBodyLength) {\n      const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n      height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n\n    if (footerLineCount) {\n      height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n\n    let widthPadding = 0;\n\n    const maxLineWidth = function (line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, bodyItem => {\n      each(bodyItem.before, maxLineWidth);\n      each(bodyItem.lines, maxLineWidth);\n      each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n      width,\n      height\n    };\n  }\n\n  function determineYAlign(chart, size) {\n    const {\n      y,\n      height\n    } = size;\n\n    if (y < height / 2) {\n      return 'top';\n    } else if (y > chart.height - height / 2) {\n      return 'bottom';\n    }\n\n    return 'center';\n  }\n\n  function doesNotFitWithAlign(xAlign, chart, options, size) {\n    const {\n      x,\n      width\n    } = size;\n    const caret = options.caretSize + options.caretPadding;\n\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n      return true;\n    }\n\n    if (xAlign === 'right' && x - width - caret < 0) {\n      return true;\n    }\n  }\n\n  function determineXAlign(chart, options, size, yAlign) {\n    const {\n      x,\n      width\n    } = size;\n    const {\n      width: chartWidth,\n      chartArea: {\n        left,\n        right\n      }\n    } = chart;\n    let xAlign = 'center';\n\n    if (yAlign === 'center') {\n      xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n      xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n      xAlign = 'right';\n    }\n\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n      xAlign = 'center';\n    }\n\n    return xAlign;\n  }\n\n  function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n      xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n      yAlign\n    };\n  }\n\n  function alignX(size, xAlign) {\n    let {\n      x,\n      width\n    } = size;\n\n    if (xAlign === 'right') {\n      x -= width;\n    } else if (xAlign === 'center') {\n      x -= width / 2;\n    }\n\n    return x;\n  }\n\n  function alignY(size, yAlign, paddingAndSize) {\n    let {\n      y,\n      height\n    } = size;\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= height + paddingAndSize;\n    } else {\n      y -= height / 2;\n    }\n\n    return y;\n  }\n\n  function getBackgroundPoint(options, size, alignment, chart) {\n    const {\n      caretSize,\n      caretPadding,\n      cornerRadius\n    } = options;\n    const {\n      xAlign,\n      yAlign\n    } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n      x += Math.max(topRight, bottomRight) + caretSize;\n    }\n\n    return {\n      x: _limitValue(x, 0, chart.width - size.width),\n      y: _limitValue(y, 0, chart.height - size.height)\n    };\n  }\n\n  function getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n  }\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  function createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n      tooltip,\n      tooltipItems,\n      type: 'tooltip'\n    });\n  }\n\n  function overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n  }\n\n  class Tooltip extends Element {\n    constructor(config) {\n      super();\n      this.opacity = 0;\n      this._active = [];\n      this._eventPosition = undefined;\n      this._size = undefined;\n      this._cachedAnimations = undefined;\n      this._tooltipItems = [];\n      this.$animations = undefined;\n      this.$context = undefined;\n      this.chart = config.chart || config._chart;\n      this._chart = this.chart;\n      this.options = config.options;\n      this.dataPoints = undefined;\n      this.title = undefined;\n      this.beforeBody = undefined;\n      this.body = undefined;\n      this.afterBody = undefined;\n      this.footer = undefined;\n      this.xAlign = undefined;\n      this.yAlign = undefined;\n      this.x = undefined;\n      this.y = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.caretX = undefined;\n      this.caretY = undefined;\n      this.labelColors = undefined;\n      this.labelPointStyles = undefined;\n      this.labelTextColors = undefined;\n    }\n\n    initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n\n    _resolveAnimations() {\n      const cached = this._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      const chart = this.chart;\n      const options = this.options.setContext(this.getContext());\n      const opts = options.enabled && chart.options.animation && options.animations;\n      const animations = new Animations(this.chart, opts);\n\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n\n    getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n\n    getTitle(context, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      const title = callbacks.title.apply(this, [context]);\n      const afterTitle = callbacks.afterTitle.apply(this, [context]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n\n    getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n\n    getBody(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const bodyItems = [];\n      each(tooltipItems, context => {\n        const bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        const scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n\n    getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n\n    getFooter(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      const footer = callbacks.footer.apply(this, [tooltipItems]);\n      const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n\n    _createItems(options) {\n      const active = this._active;\n      const data = this.chart.data;\n      const labelColors = [];\n      const labelPointStyles = [];\n      const labelTextColors = [];\n      let tooltipItems = [];\n      let i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n      }\n\n      each(tooltipItems, context => {\n        const scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(this, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n        labelTextColors.push(scoped.labelTextColor.call(this, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n\n    update(changed, replay) {\n      const options = this.options.setContext(this.getContext());\n      const active = this._active;\n      let properties;\n      let tooltipItems = [];\n\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        const position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, size);\n        const alignment = determineAlignment(this.chart, options, positionAndSize);\n        const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay\n        });\n      }\n    }\n\n    drawCaret(tooltipPoint, ctx, size, options) {\n      const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n\n    getCaretPosition(tooltipPoint, size, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        caretSize,\n        cornerRadius\n      } = options;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(cornerRadius);\n      const {\n        x: ptX,\n        y: ptY\n      } = tooltipPoint;\n      const {\n        width,\n        height\n      } = size;\n      let x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1,\n        x2,\n        x3,\n        y1,\n        y2,\n        y3\n      };\n    }\n\n    drawTitle(pt, ctx, options) {\n      const title = this.title;\n      const length = title.length;\n      let titleFont, titleSpacing, i;\n\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n\n    _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      const labelColors = this.labelColors[i];\n      const labelPointStyle = this.labelPointStyles[i];\n      const {\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      const colorX = getAlignedX(this, 'left', options);\n      const rtlColorX = rtlHelper.x(colorX);\n      const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      const colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        const drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        const centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n\n    drawBody(pt, ctx, options) {\n      const {\n        body\n      } = this;\n      const {\n        bodySpacing,\n        bodyAlign,\n        displayColors,\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      let bodyLineHeight = bodyFont.lineHeight;\n      let xLinePadding = 0;\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      const fillLineOfText = function (line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      let bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n\n    drawFooter(pt, ctx, options) {\n      const footer = this.footer;\n      const length = footer.length;\n      let footerFont, i;\n\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n\n    drawBackground(pt, ctx, tooltipSize, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        x,\n        y\n      } = pt;\n      const {\n        width,\n        height\n      } = tooltipSize;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(options.cornerRadius);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n\n    _updateAnimationTarget(options) {\n      const chart = this.chart;\n      const anims = this.$animations;\n      const animX = anims && anims.x;\n      const animY = anims && anims.y;\n\n      if (animX || animY) {\n        const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, this._size);\n        const alignment = determineAlignment(chart, options, positionAndSize);\n        const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n\n    _willRender() {\n      return !!this.opacity;\n    }\n\n    draw(ctx) {\n      const options = this.options.setContext(this.getContext());\n      let opacity = this.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      this._updateAnimationTarget(options);\n\n      const tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      const pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      const padding = toPadding(options.padding);\n      const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n\n    getActiveElements() {\n      return this._active || [];\n    }\n\n    setActiveElements(activeElements, eventPosition) {\n      const lastActive = this._active;\n      const active = activeElements.map(_ref6 => {\n        let {\n          datasetIndex,\n          index\n        } = _ref6;\n        const meta = this.chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(lastActive, active);\n\n      const positionChanged = this._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n\n    handleEvent(e, replay) {\n      let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n\n      this._ignoreReplayEvents = false;\n      const options = this.options;\n      const lastActive = this._active || [];\n\n      const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n      const positionChanged = this._positionChanged(active, e);\n\n      const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        this._active = active;\n\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n\n    _getActiveElements(e, lastActive, replay, inChartArea) {\n      const options = this.options;\n\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n\n      return active;\n    }\n\n    _positionChanged(active, e) {\n      const {\n        caretX,\n        caretY,\n        options\n      } = this;\n      const position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n\n  }\n\n  Tooltip.positioners = positioners;\n  var plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n\n    afterInit(chart, _args, options) {\n      if (options) {\n        chart.tooltip = new Tooltip({\n          chart,\n          options\n        });\n      }\n    },\n\n    beforeUpdate(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n\n    reset(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n\n    afterDraw(chart) {\n      const tooltip = chart.tooltip;\n\n      if (tooltip && tooltip._willRender()) {\n        const args = {\n          tooltip\n        };\n\n        if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n          return;\n        }\n\n        tooltip.draw(chart.ctx);\n        chart.notifyPlugins('afterTooltipDraw', args);\n      }\n    },\n\n    afterEvent(chart, args) {\n      if (chart.tooltip) {\n        const useFinalPosition = args.replay;\n\n        if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n          args.changed = true;\n        }\n      }\n    },\n\n    defaults: {\n      enabled: true,\n      external: null,\n      position: 'average',\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleColor: '#fff',\n      titleFont: {\n        weight: 'bold'\n      },\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleAlign: 'left',\n      bodyColor: '#fff',\n      bodySpacing: 2,\n      bodyFont: {},\n      bodyAlign: 'left',\n      footerColor: '#fff',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFont: {\n        weight: 'bold'\n      },\n      footerAlign: 'left',\n      padding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      boxHeight: (ctx, opts) => opts.bodyFont.size,\n      boxWidth: (ctx, opts) => opts.bodyFont.size,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      boxPadding: 0,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      animation: {\n        duration: 400,\n        easing: 'easeOutQuart'\n      },\n      animations: {\n        numbers: {\n          type: 'number',\n          properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n        },\n        opacity: {\n          easing: 'linear',\n          duration: 200\n        }\n      },\n      callbacks: {\n        beforeTitle: noop,\n\n        title(tooltipItems) {\n          if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n\n            if (this && this.options && this.options.mode === 'dataset') {\n              return item.dataset.label || '';\n            } else if (item.label) {\n              return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n              return labels[item.dataIndex];\n            }\n          }\n\n          return '';\n        },\n\n        afterTitle: noop,\n        beforeBody: noop,\n        beforeLabel: noop,\n\n        label(tooltipItem) {\n          if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n          }\n\n          let label = tooltipItem.dataset.label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          const value = tooltipItem.formattedValue;\n\n          if (!isNullOrUndef(value)) {\n            label += value;\n          }\n\n          return label;\n        },\n\n        labelColor(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n          };\n        },\n\n        labelTextColor() {\n          return this.options.bodyColor;\n        },\n\n        labelPointStyle(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n          };\n        },\n\n        afterLabel: noop,\n        afterBody: noop,\n        beforeFooter: noop,\n        footer: noop,\n        afterFooter: noop\n      }\n    },\n    defaultRoutes: {\n      bodyFont: 'font',\n      footerFont: 'font',\n      titleFont: 'font'\n    },\n    descriptors: {\n      _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n      _indexable: false,\n      callbacks: {\n        _scriptable: false,\n        _indexable: false\n      },\n      animation: {\n        _fallback: false\n      },\n      animations: {\n        _fallback: 'animation'\n      }\n    },\n    additionalOptionScopes: ['interaction']\n  };\n  var plugins = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Decimation: plugin_decimation,\n    Filler: index,\n    Legend: plugin_legend,\n    SubTitle: plugin_subtitle,\n    Title: plugin_title,\n    Tooltip: plugin_tooltip\n  });\n\n  const addIfString = (labels, raw, index, addedLabels) => {\n    if (typeof raw === 'string') {\n      index = labels.push(raw) - 1;\n      addedLabels.unshift({\n        index,\n        label: raw\n      });\n    } else if (isNaN(raw)) {\n      index = null;\n    }\n\n    return index;\n  };\n\n  function findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n\n    if (first === -1) {\n      return addIfString(labels, raw, index, addedLabels);\n    }\n\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n  }\n\n  const validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\n  class CategoryScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this._startValue = undefined;\n      this._valueRange = 0;\n      this._addedLabels = [];\n    }\n\n    init(scaleOptions) {\n      const added = this._addedLabels;\n\n      if (added.length) {\n        const labels = this.getLabels();\n\n        for (const {\n          index,\n          label\n        } of added) {\n          if (labels[index] === label) {\n            labels.splice(index, 1);\n          }\n        }\n\n        this._addedLabels = [];\n      }\n\n      super.init(scaleOptions);\n    }\n\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      const labels = this.getLabels();\n      module1.runSetters(index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels), [\"Filler\"]);\n      return validIndex(index, labels.length - 1);\n    }\n\n    determineDataLimits() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this.getMinMax(true);\n\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n\n    buildTicks() {\n      const min = this.min;\n      const max = this.max;\n      const offset = this.options.offset;\n      const ticks = [];\n      let labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n\n      for (let value = min; value <= max; value++) {\n        ticks.push({\n          value\n        });\n      }\n\n      return ticks;\n    }\n\n    getLabelForValue(value) {\n      const labels = this.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n\n    configure() {\n      super.configure();\n\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n\n    getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n\n    getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n\n    getBasePixel() {\n      return this.bottom;\n    }\n\n  }\n\n  CategoryScale.id = 'category';\n  CategoryScale.defaults = {\n    ticks: {\n      callback: CategoryScale.prototype.getLabelForValue\n    }\n  };\n\n  function generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const {\n      bounds,\n      step,\n      min,\n      max,\n      precision,\n      count,\n      maxTicks,\n      maxDigits,\n      includeBounds\n    } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const {\n      min: rmin,\n      max: rmax\n    } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n      return [{\n        value: rmin\n      }, {\n        value: rmax\n      }];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxSpaces) {\n      spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n\n    if (!isNullOrUndef(precision)) {\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    if (bounds === 'ticks') {\n      niceMin = Math.floor(rmin / spacing) * spacing;\n      niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n      niceMin = rmin;\n      niceMax = rmax;\n    }\n\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n      numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n      spacing = (max - min) / numSpaces;\n      niceMin = min;\n      niceMax = max;\n    } else if (countDefined) {\n      niceMin = minDefined ? min : niceMin;\n      niceMax = maxDefined ? max : niceMax;\n      numSpaces = count - 1;\n      spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n      numSpaces = (niceMax - niceMin) / spacing;\n\n      if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n        numSpaces = Math.round(numSpaces);\n      } else {\n        numSpaces = Math.ceil(numSpaces);\n      }\n    }\n\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n\n    if (minDefined) {\n      if (includeBounds && niceMin !== min) {\n        ticks.push({\n          value: min\n        });\n\n        if (niceMin < min) {\n          j++;\n        }\n\n        if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n          j++;\n        }\n      } else if (niceMin < min) {\n        j++;\n      }\n    }\n\n    for (; j < numSpaces; ++j) {\n      ticks.push({\n        value: Math.round((niceMin + j * spacing) * factor) / factor\n      });\n    }\n\n    if (maxDefined && includeBounds && niceMax !== max) {\n      if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n        ticks[ticks.length - 1].value = max;\n      } else {\n        ticks.push({\n          value: max\n        });\n      }\n    } else if (!maxDefined || niceMax === max) {\n      ticks.push({\n        value: niceMax\n      });\n    }\n\n    return ticks;\n  }\n\n  function relativeLabelSize(value, minSpacing, _ref7) {\n    let {\n      horizontal,\n      minRotation\n    } = _ref7;\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n  }\n\n  class LinearScaleBase extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._endValue = undefined;\n      this._valueRange = 0;\n    }\n\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n\n    handleTickRangeOptions() {\n      const {\n        beginAtZero\n      } = this.options;\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this;\n\n      const setMin = v => min = minDefined ? min : v;\n\n      const setMax = v => max = maxDefined ? max : v;\n\n      if (beginAtZero) {\n        const minSign = sign(min);\n        const maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        let offset = 1;\n\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n\n        setMax(max + offset);\n\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n\n    getTickLimit() {\n      const tickOpts = this.options.ticks;\n      let {\n        maxTicksLimit,\n        stepSize\n      } = tickOpts;\n      let maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n\n    computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n\n    buildTicks() {\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n      let maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      const numericGeneratorOptions = {\n        maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      const dataRange = this._range || this;\n      const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n\n    configure() {\n      const ticks = this.ticks;\n      let start = this.min;\n      let end = this.max;\n      super.configure();\n\n      if (this.options.offset && ticks.length) {\n        const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n\n    getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n\n  }\n\n  class LinearScale extends LinearScaleBase {\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n\n    computeTickLimit() {\n      const horizontal = this.isHorizontal();\n      const length = horizontal ? this.width : this.height;\n      const minRotation = toRadians(this.options.ticks.minRotation);\n      const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      const tickFont = this._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n\n    getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n\n    getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n\n  }\n\n  LinearScale.id = 'linear';\n  LinearScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n  function isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n    return remain === 1;\n  }\n\n  function generateTicks(generationOptions, dataRange) {\n    const endExp = Math.floor(log10(dataRange.max));\n    const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    const ticks = [];\n    let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n    let exp = Math.floor(log10(tickVal));\n    let significand = Math.floor(tickVal / Math.pow(10, exp));\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push({\n        value: tickVal,\n        major: isMajor(tickVal)\n      });\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n    ticks.push({\n      value: lastTick,\n      major: isMajor(tickVal)\n    });\n    return ticks;\n  }\n\n  class LogarithmicScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._valueRange = 0;\n    }\n\n    parse(raw, index) {\n      const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n\n      this.handleTickRangeOptions();\n    }\n\n    handleTickRangeOptions() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let min = this.min;\n      let max = this.max;\n\n      const setMin = v => min = minDefined ? min : v;\n\n      const setMax = v => max = maxDefined ? max : v;\n\n      const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n\n    buildTicks() {\n      const opts = this.options;\n      const generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      const ticks = generateTicks(generationOptions, this);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n\n    getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n\n    configure() {\n      const start = this.min;\n      super.configure();\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n\n    getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n\n    getValueForPixel(pixel) {\n      const decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n\n  }\n\n  LogarithmicScale.id = 'logarithmic';\n  LogarithmicScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n  function getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      const padding = toPadding(tickOpts.backdropPadding);\n      return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [label];\n    return {\n      w: _longestText(ctx, font.string, label),\n      h: label.length * font.lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n\n  function fitWithPointLabels(scale) {\n    const orig = {\n      l: scale.left + scale._padding.left,\n      r: scale.right - scale._padding.right,\n      t: scale.top + scale._padding.top,\n      b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n    for (let i = 0; i < valueCount; i++) {\n      const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n      padding[i] = opts.padding;\n      const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n      const plFont = toFont(opts.font);\n      const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n      labelSizes[i] = textSize;\n\n      const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n      const angle = Math.round(toDegrees(angleRadians));\n      const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n      updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n  }\n\n  function updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n\n    if (hLimits.start < orig.l) {\n      x = (orig.l - hLimits.start) / sin;\n      limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n      x = (hLimits.end - orig.r) / sin;\n      limits.r = Math.max(limits.r, orig.r + x);\n    }\n\n    if (vLimits.start < orig.t) {\n      y = (orig.t - vLimits.start) / cos;\n      limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n      y = (vLimits.end - orig.b) / cos;\n      limits.b = Math.max(limits.b, orig.b + y);\n    }\n  }\n\n  function buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n    for (let i = 0; i < valueCount; i++) {\n      const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n      const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n      const size = labelSizes[i];\n      const y = yForAngle(pointLabelPosition.y, size.h, angle);\n      const textAlign = getTextAlignForAngle(angle);\n      const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n      items.push({\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n      });\n    }\n\n    return items;\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n      x -= w;\n    } else if (align === 'center') {\n      x -= w / 2;\n    }\n\n    return x;\n  }\n\n  function yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n      y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n      y -= h;\n    }\n\n    return y;\n  }\n\n  function drawPointLabels(scale, labelCount) {\n    const {\n      ctx,\n      options: {\n        pointLabels\n      }\n    } = scale;\n\n    for (let i = labelCount - 1; i >= 0; i--) {\n      const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n      const plFont = toFont(optsAtIndex.font);\n      const {\n        x,\n        y,\n        textAlign,\n        left,\n        top,\n        right,\n        bottom\n      } = scale._pointLabelItems[i];\n      const {\n        backdropColor\n      } = optsAtIndex;\n\n      if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: backdropLeft,\n            y: backdropTop,\n            w: backdropWidth,\n            h: backdropHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n      }\n\n      renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      });\n    }\n  }\n\n  function pathRadiusLine(scale, radius, circular, labelCount) {\n    const {\n      ctx\n    } = scale;\n\n    if (circular) {\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n      let pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (let i = 1; i < labelCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const {\n      color,\n      lineWidth\n    } = gridLineOpts;\n\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(gridLineOpts.borderDash);\n    ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n      label,\n      index,\n      type: 'pointLabel'\n    });\n  }\n\n  class RadialLinearScale extends LinearScaleBase {\n    constructor(cfg) {\n      super(cfg);\n      this.xCenter = undefined;\n      this.yCenter = undefined;\n      this.drawingArea = undefined;\n      this._pointLabels = [];\n      this._pointLabelItems = [];\n    }\n\n    setDimensions() {\n      const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      const w = this.width = this.maxWidth - padding.width;\n      const h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(false);\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n\n    computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n\n    generateTickLabels(ticks) {\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      }).filter((v, i) => this.chart.getDataVisibility(i));\n    }\n\n    fit() {\n      const opts = this.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n\n    getIndexAngle(index) {\n      const angleMultiplier = TAU / (this._pointLabels.length || 1);\n      const startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n\n    getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      const scalingFactor = this.drawingArea / (this.max - this.min);\n\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n\n      return (value - this.min) * scalingFactor;\n    }\n\n    getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n\n    getPointLabelContext(index) {\n      const pointLabels = this._pointLabels || [];\n\n      if (index >= 0 && index < pointLabels.length) {\n        const pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n\n    getPointPosition(index, distanceFromCenter) {\n      let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle\n      };\n    }\n\n    getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n\n    getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n\n    getPointLabelPosition(index) {\n      const {\n        left,\n        top,\n        right,\n        bottom\n      } = this._pointLabelItems[index];\n      return {\n        left,\n        top,\n        right,\n        bottom\n      };\n    }\n\n    drawBackground() {\n      const {\n        backgroundColor,\n        grid: {\n          circular\n        }\n      } = this.options;\n\n      if (backgroundColor) {\n        const ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n\n    drawGrid() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const {\n        angleLines,\n        grid\n      } = opts;\n      const labelCount = this._pointLabels.length;\n      let i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n\n      if (grid.display) {\n        this.ticks.forEach((tick, index) => {\n          if (index !== 0) {\n            offset = this.getDistanceFromCenterForValue(tick.value);\n            const optsAtIndex = grid.setContext(this.getContext(index - 1));\n            drawRadiusLine(this, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = labelCount - 1; i >= 0; i--) {\n          const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          const {\n            color,\n            lineWidth\n          } = optsAtIndex;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n\n    drawBorder() {}\n\n    drawLabels() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      const startAngle = this.getIndexAngle(0);\n      let offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach((tick, index) => {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        const optsAtIndex = tickOpts.setContext(this.getContext(index));\n        const tickFont = toFont(optsAtIndex.font);\n        offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          const padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n\n    drawTitle() {}\n\n  }\n\n  RadialLinearScale.id = 'radialLinear';\n  RadialLinearScale.defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n\n      callback(label) {\n        return label;\n      },\n\n      padding: 5,\n      centerPointLabels: false\n    }\n  };\n  RadialLinearScale.defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  RadialLinearScale.descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n  const INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: 1000\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: 60\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: 60\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: 24\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: 30\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: 4\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: 12\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: 4\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  const UNITS = Object.keys(INTERVALS);\n  _c = UNITS;\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n      return null;\n    }\n\n    const adapter = scale._adapter;\n    const {\n      parser,\n      round,\n      isoWeekday\n    } = scale._parseOpts;\n    let value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    }\n\n    if (!isNumberFinite(value)) {\n      value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n\n    if (value === null) {\n      return null;\n    }\n\n    if (round) {\n      value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n\n    return +value;\n  }\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n\n    for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      const interval = INTERVALS[UNITS[i]];\n      const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n\n  function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n      const unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n\n  function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n      ticks[time] = true;\n    } else if (timestamps.length) {\n      const {\n        lo,\n        hi\n      } = _lookup(timestamps, time);\n\n      const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n      ticks[timestamp] = true;\n    }\n  }\n\n  function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n\n    for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n      index = map[major];\n\n      if (index >= 0) {\n        ticks[index].major = true;\n      }\n    }\n\n    return ticks;\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n    const map = {};\n    const ilen = values.length;\n    let i, value;\n\n    for (i = 0; i < ilen; ++i) {\n      value = values[i];\n      map[value] = i;\n      ticks.push({\n        value,\n        major: false\n      });\n    }\n\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n  }\n\n  class TimeScale extends Scale {\n    constructor(props) {\n      super(props);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n      this._unit = 'day';\n      this._majorUnit = undefined;\n      this._offsets = {};\n      this._normalized = false;\n      this._parseOpts = undefined;\n    }\n\n    init(scaleOpts, opts) {\n      const time = scaleOpts.time || (scaleOpts.time = {});\n      const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      super.init(scaleOpts);\n      this._normalized = opts.normalized;\n    }\n\n    parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return parse(this, raw);\n    }\n\n    beforeLayout() {\n      super.beforeLayout();\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n\n    determineDataLimits() {\n      const options = this.options;\n      const adapter = this._adapter;\n      const unit = options.time.unit || 'day';\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n\n    _getLabelBounds() {\n      const arr = this.getLabelTimestamps();\n      let min = Number.POSITIVE_INFINITY;\n      let max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min,\n        max\n      };\n    }\n\n    buildTicks() {\n      const options = this.options;\n      const timeOpts = options.time;\n      const tickOpts = options.ticks;\n      const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n\n      const min = this.min;\n      const max = this.max;\n\n      const ticks = _filterBetween(timestamps, min, max);\n\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n\n    afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(tick => +tick.value));\n      }\n    }\n\n    initOffsets(timestamps) {\n      let start = 0;\n      let end = 0;\n      let first, last;\n\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      const limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start,\n        end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n\n    _generate() {\n      const adapter = this._adapter;\n      const min = this.min;\n      const max = this.max;\n      const options = this.options;\n      const timeOpts = options.time;\n      const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      const hasWeekday = isNumber(weekday) || weekday === true;\n      const ticks = {};\n      let first = min;\n      let time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n    }\n\n    getLabelForValue(value) {\n      const adapter = this._adapter;\n      const timeOpts = this.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n\n    _tickFormatFunction(time, index, ticks, format) {\n      const options = this.options;\n      const formats = options.time.displayFormats;\n      const unit = this._unit;\n      const majorUnit = this._majorUnit;\n      const minorFormat = unit && formats[unit];\n      const majorFormat = majorUnit && formats[majorUnit];\n      const tick = ticks[index];\n      const major = majorUnit && majorFormat && tick && tick.major;\n\n      const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      const formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n\n    generateTickLabels(ticks) {\n      let i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n\n    getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n\n    getPixelForValue(value) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n\n    _getLabelSize(label) {\n      const ticksOpts = this.options.ticks;\n      const tickLabelWidth = this.ctx.measureText(label).width;\n      const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      const cosRotation = Math.cos(angle);\n      const sinRotation = Math.sin(angle);\n\n      const tickFontSize = this._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n\n    _getLabelCapacity(exampleTime) {\n      const timeOpts = this.options.time;\n      const displayFormats = timeOpts.displayFormats;\n      const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n      const size = this._getLabelSize(exampleLabel);\n\n      const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n\n    getDataTimestamps() {\n      let timestamps = this._cache.data || [];\n      let i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      const metas = this.getMatchingVisibleMetas();\n\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n\n      return this._cache.data = this.normalize(timestamps);\n    }\n\n    getLabelTimestamps() {\n      const timestamps = this._cache.labels || [];\n      let i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      const labels = this.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(parse(this, labels[i]));\n      }\n\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n\n    normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n\n  }\n\n  TimeScale.id = 'time';\n  TimeScale.defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  function interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n\n    if (reverse) {\n      if (val >= table[lo].pos && val <= table[hi].pos) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'pos', val));\n      }\n\n      ({\n        pos: prevSource,\n        time: prevTarget\n      } = table[lo]);\n      ({\n        pos: nextSource,\n        time: nextTarget\n      } = table[hi]);\n    } else {\n      if (val >= table[lo].time && val <= table[hi].time) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'time', val));\n      }\n\n      ({\n        time: prevSource,\n        pos: prevTarget\n      } = table[lo]);\n      ({\n        time: nextSource,\n        pos: nextTarget\n      } = table[hi]);\n    }\n\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n  }\n\n  class TimeSeriesScale extends TimeScale {\n    constructor(props) {\n      super(props);\n      this._table = [];\n      this._minPos = undefined;\n      this._tableRange = undefined;\n    }\n\n    initOffsets() {\n      const timestamps = this._getTimestampsForTable();\n\n      const table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      super.initOffsets(timestamps);\n    }\n\n    buildLookupTable(timestamps) {\n      const {\n        min,\n        max\n      } = this;\n      const items = [];\n      const table = [];\n      let i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n\n    _getTimestampsForTable() {\n      let timestamps = this._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      const data = this.getDataTimestamps();\n      const label = this.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n\n    getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n\n  }\n\n  TimeSeriesScale.id = 'timeseries';\n  TimeSeriesScale.defaults = TimeScale.defaults;\n  var scales = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CategoryScale: CategoryScale,\n    LinearScale: LinearScale,\n    LogarithmicScale: LogarithmicScale,\n    RadialLinearScale: RadialLinearScale,\n    TimeScale: TimeScale,\n    TimeSeriesScale: TimeSeriesScale\n  });\n  const registerables = [controllers, elements, plugins, scales];\n\n  var _c;\n\n  $RefreshReg$(_c, \"UNITS\");\n}.call(this, module);","map":{"version":3,"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","names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","defaults","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","isObject","animatedProps","getOwnPropertyNames","key","option","isArray","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isNumberFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","isNumber","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","log10","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","callback","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","each","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","toFont","toPadding","lines","lineHeight","createScaleContext","createTickContext","titleAlign","position","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","sqrt","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","j","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","getValueForPixel","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","w","h","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","clipArea","renderText","unclipArea","drawTitle","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","registerDefaults","unregister","itemDefaults","merge","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","_capitalize","ScatterController","interaction","__proto__","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","handler","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","getIntersectItems","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","parseBorderRadius","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","addRoundedRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","d","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","noop","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","m","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\r\n * Chart.js v3.9.1\r\n * https://www.chartjs.org\r\n * (c) 2022 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\r\nexport { d as defaults } from './chunks/helpers.segment.mjs';\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    if (this._request) {\r\n      return;\r\n    }\r\n    this._running = true;\r\n    this._request = requestAnimFrame.call(window, () => {\r\n      this._update();\r\n      this._request = null;\r\n      if (this._running) {\r\n        this._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    let remaining = 0;\r\n    this._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        this._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        this._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    this._lastDate = date;\r\n    if (remaining === 0) {\r\n      this._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    if (this._active) {\r\n      this._notify(false);\r\n      const currentValue = this._target[this._prop];\r\n      const elapsed = date - this._start;\r\n      const remain = this._duration - elapsed;\r\n      this._start = date;\r\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      this._total += elapsed;\r\n      this._loop = !!cfg.loop;\r\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      this._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    if (this._active) {\r\n      this.tick(Date.now());\r\n      this._active = false;\r\n      this._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const elapsed = date - this._start;\r\n    const duration = this._duration;\r\n    const prop = this._prop;\r\n    const from = this._from;\r\n    const loop = this._loop;\r\n    const to = this._to;\r\n    let factor;\r\n    this._active = from !== to && (loop || (elapsed < duration));\r\n    if (!this._active) {\r\n      this._target[prop] = to;\r\n      this._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      this._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n    this._target[prop] = this._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l,\r\n    disabled: value === false\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options = {}) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return createContext(parent,\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return createContext(parent, {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  const datasetIndex = meta.controller.index;\r\n  const axis = meta.vScale && meta.vScale.axis;\r\n  if (!axis) {\r\n    return;\r\n  }\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[axis][datasetIndex];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\r\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.supportsDecimation = false;\r\n    this.$context = undefined;\r\n    this._syncList = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    this.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    if (this.index !== datasetIndex) {\r\n      clearStacks(this._cachedMeta);\r\n    }\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = this.getScaleForId(xid);\r\n    meta.yScale = this.getScaleForId(yid);\r\n    meta.rScale = this.getScaleForId(rid);\r\n    meta.iScale = this.getScaleForId(iid);\r\n    meta.vScale = this.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const dataset = this.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    const _data = this._data;\r\n    if (isObject(data)) {\r\n      this._data = convertObjectDataToArray(data);\r\n    } else if (_data !== data) {\r\n      if (_data) {\r\n        unlistenArrayEvents(_data, this);\r\n        const meta = this._cachedMeta;\r\n        clearStacks(meta);\r\n        meta._parsed = [];\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, this);\r\n      }\r\n      this._syncList = [];\r\n      this._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const meta = this._cachedMeta;\r\n    this._dataCheck();\r\n    if (this.datasetElementType) {\r\n      meta.dataset = new this.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    let stackChanged = false;\r\n    this._dataCheck();\r\n    const oldStacked = meta._stacked;\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    this._resyncElements(resetNewElements);\r\n    if (stackChanged || oldStacked !== meta._stacked) {\r\n      updateStacks(this, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(this._type);\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n    this.options = config.createResolver(scopes, this.getContext());\r\n    this._parsing = this.options.parsing;\r\n    this._cachedDataOpts = {};\r\n  }\r\n  parse(start, count) {\r\n    const {_cachedMeta: meta, _data: data} = this;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = this.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = this.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = this.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(this, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const meta = this._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = this._getOtherScale(scale);\r\n    const stack = createStack(canStack, meta, this.chart);\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, parsed;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      const otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      this.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        this.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const ctx = this._ctx;\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = this._drawStart || 0;\r\n    const count = this._drawCount || (elements.length - start);\r\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.hidden) {\r\n        continue;\r\n      }\r\n      if (element.active && drawActiveElementsOnTop) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const dataset = this.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < this._cachedMeta.data.length) {\r\n      const element = this._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(this.getContext(), index, element));\r\n      context.parsed = this.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n      context.index = context.dataIndex = index;\r\n    } else {\r\n      context = this.$context ||\r\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n      context.dataset = dataset;\r\n      context.index = context.datasetIndex = this.index;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const active = mode === 'active';\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = this.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => this.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const chart = this.chart;\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = this.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  _getSharedOptions(start, mode) {\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const previouslySharedOptions = this._sharedOptions;\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    return {sharedOptions, includeOptions};\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const data = this._data;\r\n    const elements = this._cachedMeta.data;\r\n    for (const [method, arg1, arg2] of this._syncList) {\r\n      this[method](arg1, arg2);\r\n    }\r\n    this._syncList = [];\r\n    const numMeta = elements.length;\r\n    const numData = data.length;\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      this.parse(0, count);\r\n    }\r\n    if (numData > numMeta) {\r\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      this._removeElements(numData, numMeta - numData);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new this.dataElementType();\r\n    }\r\n    if (this._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    this.parse(start, count);\r\n    if (resetNewElements) {\r\n      this.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _sync(args) {\r\n    if (this._parsing) {\r\n      this._syncList.push(args);\r\n    } else {\r\n      const [method, arg1, arg2] = args;\r\n      this[method](arg1, arg2);\r\n    }\r\n    this.chart._dataChanges.push([this.index, ...args]);\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\r\n  }\r\n  _onDataPop() {\r\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\r\n  }\r\n  _onDataShift() {\r\n    this._sync(['_removeElements', 0, 1]);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    if (count) {\r\n      this._sync(['_removeElements', start, count]);\r\n    }\r\n    const newCount = arguments.length - 2;\r\n    if (newCount) {\r\n      this._sync(['_insertElements', start, newCount]);\r\n    }\r\n  }\r\n  _onDataUnshift() {\r\n    this._sync(['_insertElements', 0, arguments.length]);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n  if (!scale._cache.$bar) {\r\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n    let values = [];\r\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\r\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(meta) {\r\n  const scale = meta.iScale;\r\n  const values = getAllScaleValues(scale, meta.type);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nfunction barSign(size, vScale, actualBase) {\r\n  if (size !== 0) {\r\n    return sign(size);\r\n  }\r\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\nfunction borderProps(properties) {\r\n  let reverse, start, end, top, bottom;\r\n  if (properties.horizontal) {\r\n    reverse = properties.base > properties.x;\r\n    start = 'left';\r\n    end = 'right';\r\n  } else {\r\n    reverse = properties.base < properties.y;\r\n    start = 'bottom';\r\n    end = 'top';\r\n  }\r\n  if (reverse) {\r\n    top = 'end';\r\n    bottom = 'start';\r\n  } else {\r\n    top = 'start';\r\n    bottom = 'end';\r\n  }\r\n  return {start, end, reverse, top, bottom};\r\n}\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n  let edge = options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    properties.borderSkipped = res;\r\n    return;\r\n  }\r\n  if (edge === true) {\r\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\r\n    return;\r\n  }\r\n  const {start, end, reverse, top, bottom} = borderProps(properties);\r\n  if (edge === 'middle' && stack) {\r\n    properties.enableBorderRadius = true;\r\n    if ((stack._top || 0) === index) {\r\n      edge = top;\r\n    } else if ((stack._bottom || 0) === index) {\r\n      edge = bottom;\r\n    } else {\r\n      res[parseEdge(bottom, start, end, reverse)] = true;\r\n      edge = top;\r\n    }\r\n  }\r\n  res[parseEdge(edge, start, end, reverse)] = true;\r\n  properties.borderSkipped = res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\r\n  properties.inflateAmount = inflateAmount === 'auto'\r\n    ? ratio === 1 ? 0.33 : 0\r\n    : inflateAmount;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = this._cachedMeta;\r\n    meta.stack = this.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {index, _cachedMeta: {vScale}} = this;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = this._getRuler();\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = this.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\r\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n      }\r\n      const options = properties.options || bars[i].options;\r\n      setBorderSkipped(properties, options, stack, index);\r\n      setInflateAmount(properties, options, ruler.ratio);\r\n      this.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const {iScale} = this._cachedMeta;\r\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\r\n      .filter(meta => meta.controller.options.grouped);\r\n    const stacked = iScale.options.stacked;\r\n    const stacks = [];\r\n    const skipNull = (meta) => {\r\n      const parsed = meta.controller.getParsed(dataIndex);\r\n      const val = parsed && parsed[meta.vScale.axis];\r\n      if (isNullOrUndef(val) || isNaN(val)) {\r\n        return true;\r\n      }\r\n    };\r\n    for (const meta of metasets) {\r\n      if (dataIndex !== undefined && skipNull(meta)) {\r\n        continue;\r\n      }\r\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\r\n        stacks.push(meta.stack);\r\n      }\r\n      if (meta.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(meta);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: this._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\r\n    const actualBase = baseValue || 0;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (Math.abs(size) < minBarLength) {\r\n      size = barSign(size, vScale, actualBase) * minBarLength;\r\n      if (value === actualBase) {\r\n        base -= size / 2;\r\n      }\r\n      const startPixel = vScale.getPixelForDecimal(0);\r\n      const endPixel = vScale.getPixelForDecimal(1);\r\n      const min = Math.min(startPixel, endPixel);\r\n      const max = Math.max(startPixel, endPixel);\r\n      base = Math.max(Math.min(base, max), min);\r\n      head = base + size;\r\n    }\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n      base += halfGrid;\r\n      size -= halfGrid;\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const scale = ruler.scale;\r\n    const options = this.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    for (; i < ilen; ++i) {\r\n      if (this.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(this._ctx);\r\n      }\r\n    }\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const parsed = super.parseArrayData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const parsed = super.parseObjectData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const data = this._cachedMeta.data;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const points = this._cachedMeta.data;\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && this.getParsed(i);\r\n      const properties = {};\r\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n    } else {\r\n      let getter = (i) => +data[i];\r\n      if (isObject(data[start])) {\r\n        const {key = 'value'} = this._parsing;\r\n        getter = (i) => +resolveObjectKey(data[i], key);\r\n      }\r\n      let i, ilen;\r\n      for (i = start, ilen = start + count; i < ilen; ++i) {\r\n        meta._parsed[i] = getter(i);\r\n      }\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        const controller = this.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const chart = this.chart;\r\n    const {chartArea} = chart;\r\n    const meta = this._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n    const chartWeight = this._getRingWeight(this.index);\r\n    const {circumference, rotation} = this._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(this.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n    this.offsetX = offsetX * outerRadius;\r\n    this.offsetY = offsetY * outerRadius;\r\n    meta.total = this.calculateTotal();\r\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const circumference = this._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n      return 0;\r\n    }\r\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : this.innerRadius;\r\n    const outerRadius = animateScale ? 0 : this.outerRadius;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    let startAngle = this._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += this._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = this._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + this.offsetX,\r\n        y: centerY + this.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n      }\r\n      startAngle += circumference;\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    let max = 0;\r\n    const chart = this.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  spacing: 0,\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.descriptors = {\r\n  _scriptable: (name) => name !== 'spacing',\r\n  _indexable: (name) => name !== 'spacing',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    this.supportsDecimation = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._chart = this.chart;\r\n    line._datasetIndex = this.index;\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = this.resolveDatasetElementOptions(mode);\r\n    if (!this.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = this.options.segment;\r\n    this.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  getMinMax() {\r\n    const meta = this._cachedMeta;\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    meta.data.forEach((element, index) => {\r\n      const parsed = this.getParsed(index).r;\r\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\r\n        if (parsed < range.min) {\r\n          range.min = parsed;\r\n        }\r\n        if (parsed > range.max) {\r\n          range.max = parsed;\r\n        }\r\n      }\r\n    });\r\n    return range;\r\n  }\r\n  _updateRadius() {\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    this.outerRadius = outerRadius - (radiusLength * this.index);\r\n    this.innerRadius = this.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = this._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / this.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += this._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n      };\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const vScale = this._cachedMeta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      if (!this.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      this.updateElement(line, undefined, properties, mode);\r\n    }\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const scale = this._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return this;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n    showLabelBackdrop: false,\r\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n    backdropPadding: 2,\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\ndefaults.describe('scale.ticks', {\r\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n  _indexable: (name) => name !== 'backdropPadding',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return createContext(parent, {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return createContext(parent, {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right, chart} = scale;\r\n  const {chartArea, scales} = chart;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  const height = bottom - top;\r\n  const width = right - left;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n    } else if (position === 'center') {\r\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n    } else {\r\n      titleY = offsetFromEdge(scale, position, offset);\r\n    }\r\n    maxWidth = right - left;\r\n  } else {\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n    } else if (position === 'center') {\r\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n    } else {\r\n      titleX = offsetFromEdge(scale, position, offset);\r\n    }\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    this.options = options.setContext(this.getContext());\r\n    this.axis = options.axis;\r\n    this._userMin = this.parse(options.min);\r\n    this._userMax = this.parse(options.max);\r\n    this._suggestedMin = this.parse(options.suggestedMin);\r\n    this._suggestedMax = this.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(this, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    min = maxDefined && min > max ? max : min;\r\n    max = minDefined && min > max ? min : max;\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    return {\r\n      left: this.paddingLeft || 0,\r\n      top: this.paddingTop || 0,\r\n      right: this.paddingRight || 0,\r\n      bottom: this.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    this.beforeUpdate();\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    this.ticks = null;\r\n    this._labelSizes = null;\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this.beforeSetDimensions();\r\n    this.setDimensions();\r\n    this.afterSetDimensions();\r\n    this._maxLength = this.isHorizontal()\r\n      ? this.width + margins.left + margins.right\r\n      : this.height + margins.top + margins.bottom;\r\n    if (!this._dataLimitsCached) {\r\n      this.beforeDataLimits();\r\n      this.determineDataLimits();\r\n      this.afterDataLimits();\r\n      this._range = _addGrace(this, grace, beginAtZero);\r\n      this._dataLimitsCached = true;\r\n    }\r\n    this.beforeBuildTicks();\r\n    this.ticks = this.buildTicks() || [];\r\n    this.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < this.ticks.length;\r\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n    this.configure();\r\n    this.beforeCalculateLabelRotation();\r\n    this.calculateLabelRotation();\r\n    this.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      this.ticks = autoSkip(this, this.ticks);\r\n      this._labelSizes = null;\r\n      this.afterAutoSkip();\r\n    }\r\n    if (samplingEnabled) {\r\n      this._convertTicksToLabels(this.ticks);\r\n    }\r\n    this.beforeFit();\r\n    this.fit();\r\n    this.afterFit();\r\n    this.afterUpdate();\r\n  }\r\n  configure() {\r\n    let reversePixels = this.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (this.isHorizontal()) {\r\n      startPixel = this.left;\r\n      endPixel = this.right;\r\n    } else {\r\n      startPixel = this.top;\r\n      endPixel = this.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    this._startPixel = startPixel;\r\n    this._endPixel = endPixel;\r\n    this._reversePixels = reversePixels;\r\n    this._length = endPixel - startPixel;\r\n    this._alignToPixels = this.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = 0;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = 0;\r\n      this.bottom = this.height;\r\n    }\r\n    this.paddingLeft = 0;\r\n    this.paddingTop = 0;\r\n    this.paddingRight = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    this.chart.notifyPlugins(name, this.getContext());\r\n    callback(this.options[name], [this]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const tickOpts = this.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const options = this.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = this.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n      this.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\r\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    this.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  afterAutoSkip() {}\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\r\n    const display = this._isVisible();\r\n    const isHorizontal = this.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = this.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = this.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && this.ticks.length) {\r\n        const {first, last, widest, highest} = this._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(this.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        this._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    this._handleMargins();\r\n    if (isHorizontal) {\r\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n      this.height = minSize.height;\r\n    } else {\r\n      this.width = minSize.width;\r\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const {ticks: {align, padding}, position} = this.options;\r\n    const isRotated = this.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n    if (this.isHorizontal()) {\r\n      const offsetLeft = this.getPixelForTick(0) - this.left;\r\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else if (align !== 'inner') {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      this.paddingTop = paddingTop + padding;\r\n      this.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    if (this._margins) {\r\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    this.beforeTickToLabelConversion();\r\n    this.generateTickLabels(ticks);\r\n    let i, ilen;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n    this.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    let labelSizes = this._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = this.options.ticks.sampleSize;\r\n      let ticks = this.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    if (this._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = this._startPixel + decimal * this._length;\r\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const ticks = this.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\r\n    }\r\n    return this.$context ||\r\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\r\n  }\r\n  _tickSize() {\r\n    const optionTicks = this.options.ticks;\r\n    const rot = toRadians(this.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = this._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return this.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const axis = this.axis;\r\n    const chart = this.chart;\r\n    const options = this.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(this.bottom);\r\n      ty1 = this.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(this.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = this.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(this.right);\r\n      tx1 = this.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(this.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = this.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n    for (i = 0; i < ticksLength; i += step) {\r\n      const optsAtIndex = grid.setContext(this.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = optsAtIndex.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(this, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    this._ticksLength = ticksLength;\r\n    this._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const axis = this.axis;\r\n    const options = this.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = this.bottom - hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = this.top + hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = this._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      let tickTextAlign = textAlign;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (textAlign === 'inner') {\r\n          if (i === ilen - 1) {\r\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\r\n          } else if (i === 0) {\r\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\r\n          } else {\r\n            tickTextAlign = 'center';\r\n          }\r\n        }\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      let backdrop;\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n        let top = y + textOffset - labelPadding.top;\r\n        let left = x - labelPadding.left;\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        }\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        }\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign: tickTextAlign,\r\n        textBaseline,\r\n        translation: [x, y],\r\n        backdrop,\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const {position, ticks} = this.options;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    } else if (ticks.align === 'inner') {\r\n      align = 'inner';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\r\n    const labelSizes = this._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        x = this.right + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += (widest / 2);\r\n        } else {\r\n          textAlign = 'right';\r\n          x += widest;\r\n        }\r\n      } else {\r\n        x = this.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = this.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        x = this.left + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x -= widest;\r\n        }\r\n      } else {\r\n        x = this.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = this.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    if (this.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = this.chart;\r\n    const position = this.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const grid = this.options.grid;\r\n    if (!this._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = this.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(this.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const grid = this.options.grid;\r\n    const ctx = this.ctx;\r\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  drawBorder() {\r\n    const {chart, ctx, options: {grid}} = this;\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n    const borderValue = this._borderValue;\r\n    let x1, x2, y1, y2;\r\n    if (this.isHorizontal()) {\r\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.borderWidth;\r\n    ctx.strokeStyle = borderOpts.borderColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  drawLabels(chartArea) {\r\n    const optionTicks = this.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = this.ctx;\r\n    const area = this._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      if (item.backdrop) {\r\n        ctx.fillStyle = item.backdrop.color;\r\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\r\n      }\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    if (!this._isVisible()) {\r\n      return;\r\n    }\r\n    this.drawBackground();\r\n    this.drawGrid(chartArea);\r\n    this.drawBorder();\r\n    this.drawTitle();\r\n    this.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const opts = this.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw: (chartArea) => {\r\n          this.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw: (chartArea) => {\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawTitle();\r\n      }\r\n    }, {\r\n      z: gz + 1,\r\n      draw: () => {\r\n        this.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw: (chartArea) => {\r\n        this.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const metas = this.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = this.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n  _maxDigits() {\r\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = this.register(proto);\r\n    }\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (this.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || this._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\r\n        this._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || this._getRegistryForType(item);\r\n          this._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass ScatterController extends DatasetController {\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {data: points = []} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (_scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    if (this.options.showLine) {\r\n      const {dataset: line, _dataset} = meta;\r\n      line._chart = this.chart;\r\n      line._datasetIndex = this.index;\r\n      line._decimated = !!_dataset._decimated;\r\n      line.points = points;\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      options.segment = this.options.segment;\r\n      this.updateElement(line, undefined, {\r\n        animated: !animationsDisabled,\r\n        options\r\n      }, mode);\r\n    }\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  addElements() {\r\n    const {showLine} = this.options;\r\n    if (!this.datasetElementType && showLine) {\r\n      this.datasetElementType = registry.getElement('line');\r\n    }\r\n    super.addElements();\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data || [];\r\n    if (!this.options.showLine) {\r\n      let max = 0;\r\n      for (let i = data.length - 1; i >= 0; --i) {\r\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n      }\r\n      return max > 0 && max;\r\n    }\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  init(chartOptions) {}\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\r\n  const items = [];\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\r\n      return;\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\r\n  let items = [];\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\r\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\r\n    if (_angleBetween(angle, startAngle, endAngle)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  let items = [];\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\r\n    if (intersect && !inRange) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\r\n    if (!pointInArea && !inRange) {\r\n      return;\r\n    }\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\r\n  if (!includeInvisible && !chart.isPointInArea(position)) {\r\n    return [];\r\n  }\r\n  return axis === 'r' && !intersect\r\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\r\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\r\n}\r\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const items = [];\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\r\n    }\r\n  });\r\n  if (intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  evaluateInteractionItems,\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      const includeInvisible = options.includeInvisible || false;\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box, pos, stack, stackWeight;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight,\r\n      stack: stack && (pos + stack),\r\n      stackWeight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction buildStacks(layouts) {\r\n  const stacks = {};\r\n  for (const wrap of layouts) {\r\n    const {stack, pos, stackWeight} = wrap;\r\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n      continue;\r\n    }\r\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\r\n    _stack.count++;\r\n    _stack.weight += stackWeight;\r\n  }\r\n  return stacks;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  const stacks = buildStacks(layouts);\r\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    const {fullSize} = layout.box;\r\n    const stack = stacks[layout.stack];\r\n    const factor = stack && layout.stackWeight / stack.weight;\r\n    if (layout.horizontal) {\r\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n      layout.height = hBoxMaxHeight;\r\n    } else {\r\n      layout.width = vBoxMaxWidth;\r\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n    }\r\n  }\r\n  return stacks;\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n  const {pos, box} = layout;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(pos)) {\r\n    if (layout.size) {\r\n      chartArea[pos] -= layout.size;\r\n    }\r\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\r\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n    layout.size = stack.size / stack.count;\r\n    chartArea[pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\nfunction setBoxDims(box, left, top, width, height) {\r\n  box.top = top;\r\n  box.left = left;\r\n  box.right = left + width;\r\n  box.bottom = top + height;\r\n  box.width = width;\r\n  box.height = height;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n  const userPadding = params.padding;\r\n  let {x, y} = chartArea;\r\n  for (const layout of boxes) {\r\n    const box = layout.box;\r\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\r\n    const weight = (layout.stackWeight / stack.weight) || 1;\r\n    if (layout.horizontal) {\r\n      const width = chartArea.w * weight;\r\n      const height = stack.size || box.height;\r\n      if (defined(stack.start)) {\r\n        y = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n      } else {\r\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n      }\r\n      stack.start = y;\r\n      stack.placed += width;\r\n      y = box.bottom;\r\n    } else {\r\n      const height = chartArea.h * weight;\r\n      const width = stack.size || box.width;\r\n      if (defined(stack.start)) {\r\n        x = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n      } else {\r\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n      }\r\n      stack.start = x;\r\n      stack.placed += height;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  autoPadding: true,\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = Math.max(width - padding.width, 0);\r\n    const availableHeight = Math.max(height - padding.height, 0);\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\r\n    });\r\n  }\r\n};\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n  updateConfig(config) {\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n  updateConfig(config) {\r\n    config.options.animation = false;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction nodeListContains(nodeList, canvas) {\r\n  for (const node of nodeList) {\r\n    if (node === canvas || node.contains(canvas)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && container.isConnected);\r\n  }\r\n}\r\n\r\nfunction _detectPlatform(canvas) {\r\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n    return BasicPlatform;\r\n  }\r\n  return DomPlatform;\r\n}\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    if (hook === 'beforeInit') {\r\n      this._init = this._createDescriptors(chart, true);\r\n      this._notify(this._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n    const result = this._notify(descriptors, chart, hook, args);\r\n    if (hook === 'afterDestroy') {\r\n      this._notify(descriptors, chart, 'stop');\r\n      this._notify(this._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const localIds = {};\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n      localIds[plugin.id] = true;\r\n    }\r\n  }\r\n  return {plugins, localIds};\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (const plugin of plugins) {\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, {plugin, local}, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  if (local && plugin.defaults) {\r\n    scopes.push(plugin.defaults);\r\n  }\r\n  return config.createResolver(scopes, context, [''], {\r\n    scriptable: false,\r\n    indexable: false,\r\n    allKeys: true\r\n  });\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    if (!isObject(scaleConf)) {\r\n      return console.error(`Invalid scale configuration for scale: ${id}`);\r\n    }\r\n    if (scaleConf._proxy) {\r\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n    }\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get platform() {\r\n    return this._config.platform;\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = Array.from(scopes);\r\n    if (array.length === 0) {\r\n      array.push(Object.create(null));\r\n    }\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nconst hasFunction = value => isObject(value)\r\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    const scriptable = isScriptable(prop);\r\n    const indexable = isIndexable(prop);\r\n    const value = (indexable || scriptable) && proxy[prop];\r\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\r\n      || (indexable && isArray(value))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.9.1\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction getCanvas(item) {\r\n  if (_isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nfunction moveNumericKeys(obj, start, move) {\r\n  const keys = Object.keys(obj);\r\n  for (const key of keys) {\r\n    const intKey = +key;\r\n    if (intKey >= start) {\r\n      const value = obj[key];\r\n      delete obj[key];\r\n      if (move > 0 || intKey > start) {\r\n        obj[intKey + move] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\r\n  if (!inChartArea || e.type === 'mouseout') {\r\n    return null;\r\n  }\r\n  if (isClick) {\r\n    return lastEvent;\r\n  }\r\n  return e;\r\n}\r\nclass Chart {\r\n  constructor(item, userConfig) {\r\n    const config = this.config = new Config(userConfig);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n    this.platform.updateConfig(config);\r\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._responsiveListeners = undefined;\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\r\n    this._dataChanges = [];\r\n    instances[this.id] = this;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(this, 'complete', onAnimationsComplete);\r\n    animator.listen(this, 'progress', onAnimationProgress);\r\n    this._initialize();\r\n    if (this.attached) {\r\n      this.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    this.notifyPlugins('beforeInit');\r\n    if (this.options.responsive) {\r\n      this.resize();\r\n    } else {\r\n      retinaScale(this, this.options.devicePixelRatio);\r\n    }\r\n    this.bindEvents();\r\n    this.notifyPlugins('afterInit');\r\n    return this;\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const options = this.options;\r\n    const canvas = this.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n    const mode = this.width ? 'resize' : 'attach';\r\n    this.width = newSize.width;\r\n    this.height = newSize.height;\r\n    this._aspectRatio = this.aspectRatio;\r\n    if (!retinaScale(this, newRatio, true)) {\r\n      return;\r\n    }\r\n    this.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [this, newSize], this);\r\n    if (this.attached) {\r\n      if (this._doResize(mode)) {\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const options = this.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = this.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: this.ctx,\r\n          chart: this\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(this, scale, scale.options);\r\n      layouts.addBox(this, scale);\r\n    });\r\n  }\r\n  _updateMetasets() {\r\n    const metasets = this._metasets;\r\n    const numData = this.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    metasets.sort((a, b) => a.index - b.index);\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        this._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const {_metasets: metasets, data: {datasets}} = this;\r\n    if (metasets.length > datasets.length) {\r\n      delete this._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        this._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const newControllers = [];\r\n    const datasets = this.data.datasets;\r\n    let i, ilen;\r\n    this._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = this.getDatasetMeta(i);\r\n      const type = dataset.type || this.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        this._destroyDatasetMeta(i);\r\n        meta = this.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n      meta.order = dataset.order || 0;\r\n      meta.index = i;\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = this.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(this, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    this._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    each(this.data.datasets, (dataset, datasetIndex) => {\r\n      this.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, this);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const config = this.config;\r\n    config.update();\r\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    const animsDisabled = this._animationsDisabled = !options.animation;\r\n    this._updateScales();\r\n    this._checkEventBindings();\r\n    this._updateHiddenIndices();\r\n    this._plugins.invalidate();\r\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = this.buildOrUpdateControllers();\r\n    this.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = this.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\r\n    this._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    this._updateDatasets(mode);\r\n    this.notifyPlugins('afterUpdate', {mode});\r\n    this._layers.sort(compare2Level('z', '_idx'));\r\n    const {_active, _lastEvent} = this;\r\n    if (_lastEvent) {\r\n      this._eventHandler(_lastEvent, true);\r\n    } else if (_active.length) {\r\n      this._updateHoverStyles(_active, _active, true);\r\n    }\r\n    this.render();\r\n  }\r\n  _updateScales() {\r\n    each(this.scales, (scale) => {\r\n      layouts.removeBox(this, scale);\r\n    });\r\n    this.ensureScalesHaveIDs();\r\n    this.buildOrUpdateScales();\r\n  }\r\n  _checkEventBindings() {\r\n    const options = this.options;\r\n    const existingEvents = new Set(Object.keys(this._listeners));\r\n    const newEvents = new Set(options.events);\r\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\r\n      this.unbindEvents();\r\n      this.bindEvents();\r\n    }\r\n  }\r\n  _updateHiddenIndices() {\r\n    const {_hiddenIndices} = this;\r\n    const changes = this._getUniformDataChanges() || [];\r\n    for (const {method, start, count} of changes) {\r\n      const move = method === '_removeElements' ? -count : count;\r\n      moveNumericKeys(_hiddenIndices, start, move);\r\n    }\r\n  }\r\n  _getUniformDataChanges() {\r\n    const _dataChanges = this._dataChanges;\r\n    if (!_dataChanges || !_dataChanges.length) {\r\n      return;\r\n    }\r\n    this._dataChanges = [];\r\n    const datasetCount = this.data.datasets.length;\r\n    const makeSet = (idx) => new Set(\r\n      _dataChanges\r\n        .filter(c => c[0] === idx)\r\n        .map((c, i) => i + ',' + c.splice(1).join(','))\r\n    );\r\n    const changeSet = makeSet(0);\r\n    for (let i = 1; i < datasetCount; i++) {\r\n      if (!setsEqual(changeSet, makeSet(i))) {\r\n        return;\r\n      }\r\n    }\r\n    return Array.from(changeSet)\r\n      .map(c => c.split(','))\r\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\r\n  }\r\n  _updateLayout(minPadding) {\r\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(this, this.width, this.height, minPadding);\r\n    const area = this.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    this._layers = [];\r\n    each(this.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      this._layers.push(...box._layers());\r\n    }, this);\r\n    this._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    this.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this.getDatasetMeta(i).controller.configure();\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const meta = this.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(this)) {\r\n      if (this.attached && !animator.running(this)) {\r\n        animator.start(this);\r\n      }\r\n    } else {\r\n      this.draw();\r\n      onAnimationsComplete({chart: this});\r\n    }\r\n  }\r\n  draw() {\r\n    let i;\r\n    if (this._resizeBeforeDraw) {\r\n      const {width, height} = this._resizeBeforeDraw;\r\n      this._resize(width, height);\r\n      this._resizeBeforeDraw = null;\r\n    }\r\n    this.clear();\r\n    if (this.width <= 0 || this.height <= 0) {\r\n      return;\r\n    }\r\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = this._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const metasets = this._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = this.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      this._drawDataset(metasets[i]);\r\n    }\r\n    this.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const ctx = this.ctx;\r\n    const clip = meta._clip;\r\n    const useClip = !clip.disabled;\r\n    const area = this.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (useClip) {\r\n      clipArea(ctx, {\r\n        left: clip.left === false ? 0 : area.left - clip.left,\r\n        right: clip.right === false ? this.width : area.right + clip.right,\r\n        top: clip.top === false ? 0 : area.top - clip.top,\r\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\r\n      });\r\n    }\r\n    meta.controller.draw();\r\n    if (useClip) {\r\n      unclipArea(ctx);\r\n    }\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  isPointInArea(point) {\r\n    return _isPointInArea(point, this.chartArea, this._minPadding);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    const metasets = this._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n      metasets.push(meta);\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateVisibility(datasetIndex, dataIndex, visible) {\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    if (defined(dataIndex)) {\r\n      meta.data[dataIndex].hidden = !visible;\r\n      this.update();\r\n    } else {\r\n      this.setDatasetVisibility(datasetIndex, visible);\r\n      anims.update(meta, {visible});\r\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n    }\r\n  }\r\n  hide(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, false);\r\n  }\r\n  show(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const meta = this._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n    }\r\n    delete this._metasets[datasetIndex];\r\n  }\r\n  _stop() {\r\n    let i, ilen;\r\n    this.stop();\r\n    animator.remove(this);\r\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._destroyDatasetMeta(i);\r\n    }\r\n  }\r\n  destroy() {\r\n    this.notifyPlugins('beforeDestroy');\r\n    const {canvas, ctx} = this;\r\n    this._stop();\r\n    this.config.clearCache();\r\n    if (canvas) {\r\n      this.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      this.platform.releaseContext(ctx);\r\n      this.canvas = null;\r\n      this.ctx = null;\r\n    }\r\n    this.notifyPlugins('destroy');\r\n    delete instances[this.id];\r\n    this.notifyPlugins('afterDestroy');\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    this.bindUserEvents();\r\n    if (this.options.responsive) {\r\n      this.bindResponsiveEvents();\r\n    } else {\r\n      this.attached = true;\r\n    }\r\n  }\r\n  bindUserEvents() {\r\n    const listeners = this._listeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const listener = (e, x, y) => {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      this._eventHandler(e);\r\n    };\r\n    each(this.options.events, (type) => _add(type, listener));\r\n  }\r\n  bindResponsiveEvents() {\r\n    if (!this._responsiveListeners) {\r\n      this._responsiveListeners = {};\r\n    }\r\n    const listeners = this._responsiveListeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(this, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    const listener = (width, height) => {\r\n      if (this.canvas) {\r\n        this.resize(width, height);\r\n      }\r\n    };\r\n    let detached;\r\n    const attached = () => {\r\n      _remove('attach', attached);\r\n      this.attached = true;\r\n      this.resize();\r\n      _add('resize', listener);\r\n      _add('detach', detached);\r\n    };\r\n    detached = () => {\r\n      this.attached = false;\r\n      _remove('resize', listener);\r\n      this._stop();\r\n      this._resize(0, 0);\r\n      _add('attach', attached);\r\n    };\r\n    if (platform.isAttached(this.canvas)) {\r\n      attached();\r\n    } else {\r\n      detached();\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    each(this._listeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._listeners = {};\r\n    each(this._responsiveListeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._responsiveListeners = undefined;\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const lastActive = this._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      this._active = active;\r\n      this._lastEvent = null;\r\n      this._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const hoverOptions = this.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const args = {\r\n      event: e,\r\n      replay,\r\n      cancelable: true,\r\n      inChartArea: this.isPointInArea(e)\r\n    };\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\r\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = this._handleEvent(e, replay, args.inChartArea);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      this.render();\r\n    }\r\n    return this;\r\n  }\r\n  _handleEvent(e, replay, inChartArea) {\r\n    const {_active: lastActive = [], options} = this;\r\n    const useFinalPosition = replay;\r\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\r\n    const isClick = _isClickEvent(e);\r\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\r\n    if (inChartArea) {\r\n      this._lastEvent = null;\r\n      callback(options.onHover, [e, active, this], this);\r\n      if (isClick) {\r\n        callback(options.onClick, [e, active, this], this);\r\n      }\r\n    }\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    this._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const hoverOptions = this.options.hover;\r\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction clipArc(ctx, element, endAngle) {\r\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\r\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\r\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n  let spacingOffset = 0;\r\n  const alpha = end - start;\r\n  if (spacing) {\r\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\r\n    spacingOffset = (alpha - adjustedAngle) / 2;\r\n  }\r\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n  const angleOffset = (alpha - beta) / 2;\r\n  const startAngle = start + angleOffset + spacingOffset;\r\n  const endAngle = end - angleOffset - spacingOffset;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  if (circular) {\r\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n    if (outerEnd > 0) {\r\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n    }\r\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n    ctx.lineTo(p4.x, p4.y);\r\n    if (innerEnd > 0) {\r\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n    }\r\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n    if (innerStart > 0) {\r\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n    }\r\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n    ctx.lineTo(p8.x, p8.y);\r\n    if (outerStart > 0) {\r\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n    }\r\n  } else {\r\n    ctx.moveTo(x, y);\r\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\r\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerStartX, outerStartY);\r\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\r\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\r\n    ctx.lineTo(outerEndX, outerEndY);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element, offset, spacing, circular) {\r\n  const {fullCircles, startAngle, circumference} = element;\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + circumference % TAU;\r\n      if (circumference % TAU === 0) {\r\n        endAngle += TAU;\r\n      }\r\n    }\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n  ctx.fill();\r\n  return endAngle;\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    clipArc(ctx, element, startAngle + TAU);\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\r\n  const {options} = element;\r\n  const {borderWidth, borderJoinStyle} = options;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = borderWidth * 2;\r\n    ctx.lineJoin = borderJoinStyle || 'round';\r\n  } else {\r\n    ctx.lineWidth = borderWidth;\r\n    ctx.lineJoin = borderJoinStyle || 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element, endAngle);\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const rAdjust = this.options.spacing / 2;\r\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\r\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference',\r\n    ], useFinalPosition);\r\n    const {offset, spacing} = this.options;\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const {options, circumference} = this;\r\n    const offset = (options.offset || 0) / 2;\r\n    const spacing = (options.spacing || 0) / 2;\r\n    const circular = options.circular;\r\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    let radiusOffset = 0;\r\n    if (offset) {\r\n      radiusOffset = offset / 2;\r\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\r\n      if (this.circumference >= PI) {\r\n        radiusOffset = offset;\r\n      }\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\r\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderJoinStyle: undefined,\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  spacing: 0,\r\n  angle: undefined,\r\n  circular: true,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && !line.options.segment) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._chart = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    this._datasetIndex = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea, indexAxis) {\r\n    const options = this.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n      this._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    this._points = points;\r\n    delete this._segments;\r\n    delete this._path;\r\n    this._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const options = this.options;\r\n    const value = point[property];\r\n    const points = this.points;\r\n    const segments = _boundSegments(this, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const segments = this.segments;\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    let loop = this._loop;\r\n    start = start || 0;\r\n    count = count || (this.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const options = this.options || {};\r\n    const points = this.points || [];\r\n    if (points.length && options.borderWidth) {\r\n      ctx.save();\r\n      draw(ctx, this, start, count);\r\n      ctx.restore();\r\n    }\r\n    if (this.animated) {\r\n      this._pointsUpdated = false;\r\n      this._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx, area) {\r\n    const options = this.options;\r\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, this.x, this.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : _limitValue(value, min, max);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = bar.borderSkipped;\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = bar.borderSkipped;\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\r\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n  const x = rect.x !== refRect.x ? -amount : 0;\r\n  const y = rect.y !== refRect.y ? -amount : 0;\r\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n  return {\r\n    x: rect.x + x,\r\n    y: rect.y + y,\r\n    w: rect.w + w,\r\n    h: rect.h + h,\r\n    radius: rect.radius\r\n  };\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.inflateAmount = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n      ctx.clip();\r\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n      ctx.fillStyle = borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  inflateAmount: 'auto',\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (!meta.controller.supportsDecimation) {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      const threshold = options.threshold || 4 * availableWidth;\r\n      if (count <= threshold) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    let {start, end} = segment;\r\n    end = _findSegmentEnd(start, end, points);\r\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[start],\r\n        end: points[end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction _getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach(({start, end}) => {\r\n    end = _findSegmentEnd(start, end, linePoints);\r\n    const first = linePoints[start];\r\n    const last = linePoints[end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction _findSegmentEnd(start, end, points) {\r\n  for (;end > start; end--) {\r\n    const point = points[end];\r\n    if (!isNaN(point.x) && !isNaN(point.y)) {\r\n      break;\r\n    }\r\n  }\r\n  return end;\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\n\r\nfunction _createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = _pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction _shouldApplyFill(source) {\r\n  return source && source.fill !== false;\r\n}\r\n\r\nfunction _resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    return decodeTargetIndex(fill[0], index, target, count);\r\n  }\r\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction decodeTargetIndex(firstCh, index, target, count) {\r\n  if (firstCh === '-' || firstCh === '+') {\r\n    target = index + target;\r\n  }\r\n  if (target === index || target < 0 || target >= count) {\r\n    return false;\r\n  }\r\n  return target;\r\n}\r\nfunction _getTargetPixel(fill, scale) {\r\n  let pixel = null;\r\n  if (fill === 'start') {\r\n    pixel = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    pixel = scale.top;\r\n  } else if (isObject(fill)) {\r\n    pixel = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    pixel = scale.getBasePixel();\r\n  }\r\n  return pixel;\r\n}\r\nfunction _getTargetValue(fill, scale, startValue) {\r\n  let value;\r\n  if (fill === 'start') {\r\n    value = startValue;\r\n  } else if (fill === 'end') {\r\n    value = scale.options.reverse ? scale.min : scale.max;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  return value;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\n\r\nfunction _buildStackLine(source) {\r\n  const {scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(scale, index);\r\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nfunction getLinesBelow(scale, index) {\r\n  const below = [];\r\n  const metas = scale.getMatchingVisibleMetas('line');\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (!meta.hidden) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (_isBetween(pointValue, firstValue, lastValue)) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\n\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\n\r\nfunction _getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return _buildStackLine(source);\r\n  }\r\n  if (fill === 'shape') {\r\n    return true;\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return _createBoundaryLine(boundary, line);\r\n}\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  const pixel = _getTargetPixel(fill, scale);\r\n  if (isNumberFinite(pixel)) {\r\n    const horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? pixel : null,\r\n      y: horizontal ? null : pixel\r\n    };\r\n  }\r\n  return null;\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const value = _getTargetValue(fill, scale, start);\r\n  const target = [];\r\n  if (options.grid.circular) {\r\n    const center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (let i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\n\r\nfunction _drawfill(ctx, source, area) {\r\n  const target = _getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    clipVertical(ctx, target, area.top);\r\n    fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    clipVertical(ctx, target, area.bottom);\r\n  }\r\n  fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction clipVertical(ctx, target, clipY) {\r\n  const {segments, points} = target;\r\n  let first = true;\r\n  let lineLoop = false;\r\n  ctx.beginPath();\r\n  for (const segment of segments) {\r\n    const {start, end} = segment;\r\n    const firstPoint = points[start];\r\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\r\n    if (first) {\r\n      ctx.moveTo(firstPoint.x, firstPoint.y);\r\n      first = false;\r\n    } else {\r\n      ctx.lineTo(firstPoint.x, clipY);\r\n      ctx.lineTo(firstPoint.x, firstPoint.y);\r\n    }\r\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\r\n    if (lineLoop) {\r\n      ctx.closePath();\r\n    } else {\r\n      ctx.lineTo(lastPoint.x, clipY);\r\n    }\r\n  }\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    const notShape = target !== true;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    let loop;\r\n    if (notShape) {\r\n      if (lineLoop) {\r\n        ctx.closePath();\r\n      } else {\r\n        interpolatedLineTo(ctx, target, end, property);\r\n      }\r\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n      loop = lineLoop && targetLoop;\r\n      if (!loop) {\r\n        interpolatedLineTo(ctx, target, start, property);\r\n      }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\n\r\nvar index = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: _decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = _resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n      source.line.updateControlPoints(area, source.axis);\r\n      if (draw && source.fill) {\r\n        _drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (_shouldApplyFill(source)) {\r\n        _drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    _drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins;\r\n    this.setDimensions();\r\n    this.buildLabels();\r\n    this.fit();\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = this._margins.left;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = this._margins.top;\r\n      this.bottom = this.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const labelOpts = this.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\r\n    }\r\n    if (this.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    this.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const {options, ctx} = this;\r\n    if (!options.display) {\r\n      this.width = this.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (this.isHorizontal()) {\r\n      width = this.maxWidth;\r\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = this.maxHeight;\r\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const lineWidths = this.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const columnSizes = this.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let col = 0;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    if (!this.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\r\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n        }\r\n        hitbox.top += this.top + titleHeight + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += this.left + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    if (this.options.display) {\r\n      const ctx = this.ctx;\r\n      clipArea(ctx, this);\r\n      this._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    this.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxHeight * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n      });\r\n    };\r\n    const isHorizontal = this.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n        y: this.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: this.left + padding,\r\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(this.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + halfFontSize + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(this.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > this.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > this.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(this.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const opts = this.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const ctx = this.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = this.left;\r\n    let maxWidth = this.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...this.lineWidths);\r\n      y = this.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n    } else {\r\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    let i, hitBox, lh;\r\n    if (_isBetween(x, this.left, this.right)\r\n      && _isBetween(y, this.top, this.bottom)) {\r\n      lh = this.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\r\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\r\n          return this.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const opts = this.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\r\n      const previous = this._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, this], this);\r\n      }\r\n      this._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, this], this);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, this], this);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const opts = this.options;\r\n    this.left = 0;\r\n    this.top = 0;\r\n    if (!opts.display) {\r\n      this.width = this.height = this.right = this.bottom = 0;\r\n      return;\r\n    }\r\n    this.width = this.right = maxWidth;\r\n    this.height = this.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    this._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n    if (this.isHorizontal()) {\r\n      this.height = textSize;\r\n    } else {\r\n      this.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + this._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst map = new WeakMap();\r\nvar plugin_subtitle = {\r\n  id: 'subtitle',\r\n  start(chart, _args, options) {\r\n    const title = new Title({\r\n      ctx: chart.ctx,\r\n      options,\r\n      chart\r\n    });\r\n    layouts.configure(chart, title, options);\r\n    layouts.addBox(chart, title);\r\n    map.set(chart, title);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, map.get(chart));\r\n    map.delete(chart);\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = map.get(chart);\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'normal',\r\n    },\r\n    fullSize: true,\r\n    padding: 0,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 1500\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip.chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\r\n  } else if (xAlign === 'right') {\r\n    x += Math.max(topRight, bottomRight) + caretSize;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return createContext(parent, {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.chart = config.chart || config._chart;\r\n    this._chart = this.chart;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const cached = this._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = this.chart;\r\n    const options = this.options.setContext(this.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(this.chart, opts);\r\n    if (opts._cacheable) {\r\n      this._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    return this.$context ||\r\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\r\n    const title = callbacks.title.apply(this, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const active = this._active;\r\n    const data = this.chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(this, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\r\n    });\r\n    this.labelColors = labelColors;\r\n    this.labelPointStyles = labelPointStyles;\r\n    this.labelTextColors = labelTextColors;\r\n    this.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const options = this.options.setContext(this.getContext());\r\n    const active = this._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (this.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(this, active, this._eventPosition);\r\n      tooltipItems = this._createItems(options);\r\n      this.title = this.getTitle(tooltipItems, options);\r\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n      this.body = this.getBody(tooltipItems, options);\r\n      this.afterBody = this.getAfterBody(tooltipItems, options);\r\n      this.footer = this.getFooter(tooltipItems, options);\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\r\n      this.xAlign = alignment.xAlign;\r\n      this.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    this._tooltipItems = tooltipItems;\r\n    this.$context = undefined;\r\n    if (properties) {\r\n      this._resolveAnimations().update(this, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {caretSize, cornerRadius} = options;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const title = this.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const labelColors = this.labelColors[i];\r\n    const labelPointStyle = this.labelPointStyles[i];\r\n    const {boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(this, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = this.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const {body} = this;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(this.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = this.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(this.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const footer = this.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + topLeft, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - topRight, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - bottomRight);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + bottomLeft, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + topLeft);\r\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const chart = this.chart;\r\n    const anims = this.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, this._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        this.xAlign = alignment.xAlign;\r\n        this.yAlign = alignment.yAlign;\r\n        this.width = size.width;\r\n        this.height = size.height;\r\n        this.caretX = position.x;\r\n        this.caretY = position.y;\r\n        this._resolveAnimations().update(this, point);\r\n      }\r\n    }\r\n  }\r\n  _willRender() {\r\n    return !!this.opacity;\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options.setContext(this.getContext());\r\n    let opacity = this.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    this._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n    const pt = {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      this.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      this.drawTitle(pt, ctx, options);\r\n      this.drawBody(pt, ctx, options);\r\n      this.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const lastActive = this._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = this._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      this._active = active;\r\n      this._eventPosition = eventPosition;\r\n      this._ignoreReplayEvents = true;\r\n      this.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay, inChartArea = true) {\r\n    if (replay && this._ignoreReplayEvents) {\r\n      return false;\r\n    }\r\n    this._ignoreReplayEvents = false;\r\n    const options = this.options;\r\n    const lastActive = this._active || [];\r\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\r\n    const positionChanged = this._positionChanged(active, e);\r\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      this._active = active;\r\n      if (options.enabled || options.external) {\r\n        this._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        this.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, replay, inChartArea) {\r\n    const options = this.options;\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n    if (options.reverse) {\r\n      active.reverse();\r\n    }\r\n    return active;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    if (tooltip && tooltip._willRender()) {\r\n      const args = {\r\n        tooltip\r\n      };\r\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n        return;\r\n      }\r\n      tooltip.draw(chart.ctx);\r\n      chart.notifyPlugins('afterTooltipDraw', args);\r\n    }\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    boxPadding: 0,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: index,\r\nLegend: plugin_legend,\r\nSubTitle: plugin_subtitle,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index, addedLabels) => {\r\n  if (typeof raw === 'string') {\r\n    index = labels.push(raw) - 1;\r\n    addedLabels.unshift({index, label: raw});\r\n  } else if (isNaN(raw)) {\r\n    index = null;\r\n  }\r\n  return index;\r\n};\r\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index, addedLabels);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n    this._addedLabels = [];\r\n  }\r\n  init(scaleOptions) {\r\n    const added = this._addedLabels;\r\n    if (added.length) {\r\n      const labels = this.getLabels();\r\n      for (const {index, label} of added) {\r\n        if (labels[index] === label) {\r\n          labels.splice(index, 1);\r\n        }\r\n      }\r\n      this._addedLabels = [];\r\n    }\r\n    super.init(scaleOptions);\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this.getMinMax(true);\r\n    if (this.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = this.getLabels().length - 1;\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const offset = this.options.offset;\r\n    const ticks = [];\r\n    let labels = this.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    this._startValue = this.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const labels = this.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    super.configure();\r\n    if (!this.isHorizontal()) {\r\n      this._reversePixels = !this._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    if (typeof value !== 'number') {\r\n      value = this.parse(value);\r\n    }\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  if (bounds === 'ticks') {\r\n    niceMin = Math.floor(rmin / spacing) * spacing;\r\n    niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  } else {\r\n    niceMin = rmin;\r\n    niceMax = rmax;\r\n  }\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  const decimalPlaces = Math.max(\r\n    _decimalPlaces(spacing),\r\n    _decimalPlaces(niceMin)\r\n  );\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    if (includeBounds && niceMin !== min) {\r\n      ticks.push({value: min});\r\n      if (niceMin < min) {\r\n        j++;\r\n      }\r\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n        j++;\r\n      }\r\n    } else if (niceMin < min) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined && includeBounds && niceMax !== max) {\r\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else if (!maxDefined || niceMax === max) {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\r\n  const rad = toRadians(minRotation);\r\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n  const length = 0.75 * minSpacing * ('' + value).length;\r\n  return Math.min(minSpacing / ratio, length);\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {beginAtZero} = this.options;\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      let offset = 1;\r\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\r\n        offset = Math.abs(max * 0.05);\r\n      }\r\n      setMax(max + offset);\r\n      if (!beginAtZero) {\r\n        setMin(min - offset);\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const tickOpts = this.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n      if (maxTicks > 1000) {\r\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\r\n        maxTicks = 1000;\r\n      }\r\n    } else {\r\n      maxTicks = this.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = this.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      bounds: opts.bounds,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: this._maxDigits(),\r\n      horizontal: this.isHorizontal(),\r\n      minRotation: tickOpts.minRotation || 0,\r\n      includeBounds: tickOpts.includeBounds !== false\r\n    };\r\n    const dataRange = this._range || this;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const ticks = this.ticks;\r\n    let start = this.min;\r\n    let end = this.max;\r\n    super.configure();\r\n    if (this.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    this._startValue = start;\r\n    this._endValue = end;\r\n    this._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? min : 0;\r\n    this.max = isNumberFinite(max) ? max : 1;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const horizontal = this.isHorizontal();\r\n    const length = horizontal ? this.width : this.height;\r\n    const minRotation = toRadians(this.options.ticks.minRotation);\r\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n    const tickFont = this._resolveTickFontOptions(0);\r\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (this.options.beginAtZero) {\r\n      this._zero = true;\r\n    }\r\n    this.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let min = this.min;\r\n    let max = this.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const generationOptions = {\r\n      min: this._userMin,\r\n      max: this._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, this);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined\r\n      ? '0'\r\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n  configure() {\r\n    const start = this.min;\r\n    super.configure();\r\n    this._startValue = log10(start);\r\n    this._valueRange = log10(this.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    if (value === undefined || value === 0) {\r\n      value = this.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return this.getPixelForDecimal(value === this.min\r\n      ? 0\r\n      : (log10(value) - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const decimal = this.getDecimalForPixel(pixel);\r\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, font, label) {\r\n  label = isArray(label) ? label : [label];\r\n  return {\r\n    w: _longestText(ctx, font.string, label),\r\n    h: label.length * font.lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const orig = {\r\n    l: scale.left + scale._padding.left,\r\n    r: scale.right - scale._padding.right,\r\n    t: scale.top + scale._padding.top,\r\n    b: scale.bottom - scale._padding.bottom\r\n  };\r\n  const limits = Object.assign({}, orig);\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const pointLabelOpts = scale.options.pointLabels;\r\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\r\n    padding[i] = opts.padding;\r\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\r\n    const plFont = toFont(opts.font);\r\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\r\n    const angle = Math.round(toDegrees(angleRadians));\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\r\n  }\r\n  scale.setCenterPoint(\r\n    orig.l - limits.l,\r\n    limits.r - orig.r,\r\n    orig.t - limits.t,\r\n    limits.b - orig.b\r\n  );\r\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\r\n  const sin = Math.abs(Math.sin(angle));\r\n  const cos = Math.abs(Math.cos(angle));\r\n  let x = 0;\r\n  let y = 0;\r\n  if (hLimits.start < orig.l) {\r\n    x = (orig.l - hLimits.start) / sin;\r\n    limits.l = Math.min(limits.l, orig.l - x);\r\n  } else if (hLimits.end > orig.r) {\r\n    x = (hLimits.end - orig.r) / sin;\r\n    limits.r = Math.max(limits.r, orig.r + x);\r\n  }\r\n  if (vLimits.start < orig.t) {\r\n    y = (orig.t - vLimits.start) / cos;\r\n    limits.t = Math.min(limits.t, orig.t - y);\r\n  } else if (vLimits.end > orig.b) {\r\n    y = (vLimits.end - orig.b) / cos;\r\n    limits.b = Math.max(limits.b, orig.b + y);\r\n  }\r\n}\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n  const items = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const opts = scale.options;\r\n  const extra = getTickBackdropHeight(opts) / 2;\r\n  const outerDistance = scale.drawingArea;\r\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\r\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\r\n    const size = labelSizes[i];\r\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n    items.push({\r\n      x: pointLabelPosition.x,\r\n      y,\r\n      textAlign,\r\n      left,\r\n      top: y,\r\n      right: left + size.w,\r\n      bottom: y + size.h\r\n    });\r\n  }\r\n  return items;\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction leftForTextAlign(x, w, align) {\r\n  if (align === 'right') {\r\n    x -= w;\r\n  } else if (align === 'center') {\r\n    x -= (w / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction yForAngle(y, h, angle) {\r\n  if (angle === 90 || angle === 270) {\r\n    y -= (h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    y -= h;\r\n  }\r\n  return y;\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      const backdropLeft = left - padding.left;\r\n      const backdropTop = top - padding.top;\r\n      const backdropWidth = right - left + padding.width;\r\n      const backdropHeight = bottom - top + padding.height;\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: backdropLeft,\r\n          y: backdropTop,\r\n          w: backdropWidth,\r\n          h: backdropHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\r\n      }\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction createPointLabelContext(parent, index, label) {\r\n  return createContext(parent, {\r\n    label,\r\n    index,\r\n    type: 'pointLabel'\r\n  });\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\r\n    const w = this.width = this.maxWidth - padding.width;\r\n    const h = this.height = this.maxHeight - padding.height;\r\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\r\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\r\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(false);\r\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n    this._pointLabels = this.getLabels()\r\n      .map((value, index) => {\r\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\r\n        return label || label === 0 ? label : '';\r\n      })\r\n      .filter((v, i) => this.chart.getDataVisibility(i));\r\n  }\r\n  fit() {\r\n    const opts = this.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(this);\r\n    } else {\r\n      this.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\r\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\r\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = this.drawingArea / (this.max - this.min);\r\n    if (this.options.reverse) {\r\n      return (this.max - value) * scalingFactor;\r\n    }\r\n    return (value - this.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n  }\r\n  getPointLabelContext(index) {\r\n    const pointLabels = this._pointLabels || [];\r\n    if (index >= 0 && index < pointLabels.length) {\r\n      const pointLabel = pointLabels[index];\r\n      return createPointLabelContext(this.getContext(), index, pointLabel);\r\n    }\r\n  }\r\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\r\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const {backgroundColor, grid: {circular}} = this.options;\r\n    if (backgroundColor) {\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = this._pointLabels.length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(this, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      this.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = this.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\r\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = labelCount - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\r\n        position = this.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.xCenter, this.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawBorder() {}\r\n  drawLabels() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = this.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(this.xCenter, this.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    this.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        ctx.font = tickFont.string;\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5,\r\n    centerPointLabels: false\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n    adapter.init(opts);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const options = this.options;\r\n    const adapter = this._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(this._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(this.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    this.min = Math.min(min, max - 1);\r\n    this.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      this.min = this._userMin || timestamps[0];\r\n      this.max = this._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\r\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\r\n      : determineMajorUnit(this._unit);\r\n    this.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n  }\r\n  afterAutoSkip() {\r\n    if (this.options.offsetAfterAutoskip) {\r\n      this.initOffsets(this.ticks.map(tick => +tick.value));\r\n    }\r\n  }\r\n  initOffsets(timestamps) {\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (this.options.offset && timestamps.length) {\r\n      first = this.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const adapter = this._adapter;\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const adapter = this._adapter;\r\n    const timeOpts = this.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const options = this.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const majorUnit = this._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForValue(value);\r\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return this.min + pos * (this.max - this.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const ticksOpts = this.options.ticks;\r\n    const tickLabelWidth = this.ctx.measureText(label).width;\r\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = this._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const timeOpts = this.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\r\n    const size = this._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    let timestamps = this._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    if (this._normalized && metas.length) {\r\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n    }\r\n    return (this._cache.data = this.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const timestamps = this._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = this.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(this, labels[i]));\r\n    }\r\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let lo = 0;\r\n  let hi = table.length - 1;\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    if (val >= table[lo].pos && val <= table[hi].pos) {\r\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\r\n    }\r\n    ({pos: prevSource, time: prevTarget} = table[lo]);\r\n    ({pos: nextSource, time: nextTarget} = table[hi]);\r\n  } else {\r\n    if (val >= table[lo].time && val <= table[hi].time) {\r\n      ({lo, hi} = _lookupByKey(table, 'time', val));\r\n    }\r\n    ({time: prevSource, pos: prevTarget} = table[lo]);\r\n    ({time: nextSource, pos: nextTarget} = table[hi]);\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._minPos = undefined;\r\n    this._tableRange = undefined;\r\n  }\r\n  initOffsets() {\r\n    const timestamps = this._getTimestampsForTable();\r\n    const table = this._table = this.buildLookupTable(timestamps);\r\n    this._minPos = interpolate(table, this.min);\r\n    this._tableRange = interpolate(table, this.max) - this._minPos;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const {min, max} = this;\r\n    const items = [];\r\n    const table = [];\r\n    let i, ilen, prev, curr, next;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr >= min && curr <= max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    if (items.length < 2) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      next = items[i + 1];\r\n      prev = items[i - 1];\r\n      curr = items[i];\r\n      if (Math.round((next + prev) / 2) !== curr) {\r\n        table.push({time: curr, pos: i / (ilen - 1)});\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n  _getTimestampsForTable() {\r\n    let timestamps = this._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = this.getDataTimestamps();\r\n    const label = this.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = this.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = this._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getDecimalForValue(value) {\r\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst registerables = [\r\n  controllers,\r\n  elements,\r\n  plugins,\r\n  scales,\r\n];\r\n\r\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\r\n"]},"sourceType":"module","externalDependencies":{},"hash":"c27b3e3730d7e8c04fe760688e240e13da71e8cb"}
