{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\ntp.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/montiapm:agent/lib/ntp.js","filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\ntp.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","root":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\ntp.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/ntp.js"}},"code":"var logger = getLogger();\n\nNtp = function (endpoint) {\n  this.path = '/simplentp/sync';\n  this.setEndpoint(endpoint);\n  this.diff = 0;\n  this.synced = false;\n  this.reSyncCount = 0;\n  this.reSync = new Retry({\n    baseTimeout: 1000 * 60,\n    maxTimeout: 1000 * 60 * 10,\n    minCount: 0\n  });\n};\n\nNtp._now = function () {\n  var now = Date.now();\n\n  if (typeof now == 'number') {\n    return now;\n  } else if (now instanceof Date) {\n    // some extenal JS libraries override Date.now and returns a Date object\n    // which directly affect us. So we need to prepare for that\n    return now.getTime();\n  } else {\n    // trust me. I've seen now === undefined\n    return new Date().getTime();\n  }\n};\n\nNtp.prototype.setEndpoint = function (endpoint) {\n  this.endpoint = endpoint ? endpoint + this.path : null;\n};\n\nNtp.prototype.getTime = function () {\n  return Ntp._now() + Math.round(this.diff);\n};\n\nNtp.prototype.syncTime = function (localTime) {\n  return localTime + Math.ceil(this.diff);\n};\n\nNtp.prototype.sync = function () {\n  if (this.endpoint === null) {\n    return;\n  }\n\n  logger('init sync');\n  var self = this;\n  var retryCount = 0;\n  var retry = new Retry({\n    baseTimeout: 1000 * 20,\n    maxTimeout: 1000 * 60,\n    minCount: 1,\n    minTimeout: 0\n  });\n  syncTime();\n\n  function syncTime() {\n    if (retryCount < 5) {\n      logger('attempt time sync with server', retryCount); // if we send 0 to the retryLater, cacheDns will run immediately\n\n      retry.retryLater(retryCount++, cacheDns);\n    } else {\n      logger('maximum retries reached');\n      self.reSync.retryLater(self.reSyncCount++, function () {\n        var args = [].slice.call(arguments);\n        self.sync.apply(self, args);\n      });\n    }\n  } // first attempt is to cache dns. So, calculation does not\n  // include DNS resolution time\n\n\n  function cacheDns() {\n    self.getServerTime(function (err) {\n      if (!err) {\n        calculateTimeDiff();\n      } else {\n        syncTime();\n      }\n    });\n  }\n\n  function calculateTimeDiff() {\n    var clientStartTime = new Date().getTime();\n    self.getServerTime(function (err, serverTime) {\n      if (!err && serverTime) {\n        // (Date.now() + clientStartTime)/2 : Midpoint between req and res\n        var networkTime = (new Date().getTime() - clientStartTime) / 2;\n        var serverStartTime = serverTime - networkTime;\n        self.diff = serverStartTime - clientStartTime;\n        self.synced = true; // we need to send 1 into retryLater.\n\n        self.reSync.retryLater(self.reSyncCount++, function () {\n          var args = [].slice.call(arguments);\n          self.sync.apply(self, args);\n        });\n        logger('successfully updated diff value', self.diff);\n      } else {\n        syncTime();\n      }\n    });\n  }\n};\n\nNtp.prototype.getServerTime = function (callback) {\n  var self = this;\n\n  if (self.endpoint === null) {\n    throw new Error('getServerTime requires the endpoint to be set');\n  }\n\n  if (Meteor.isServer) {\n    Kadira.coreApi.get(self.path, {\n      noRetries: true\n    }).then(content => {\n      var serverTime = parseInt(content);\n      callback(null, serverTime);\n    }).catch(err => {\n      callback(err);\n    });\n  } else {\n    httpRequest('GET', self.endpoint + \"?noCache=\".concat(new Date().getTime(), \"-\").concat(Math.random()), function (err, res) {\n      if (err) {\n        callback(err);\n      } else {\n        var serverTime = parseInt(res.content);\n        callback(null, serverTime);\n      }\n    });\n  }\n};\n\nfunction getLogger() {\n  if (Meteor.isServer) {\n    return Npm.require('debug')(\"kadira:ntp\");\n  } else {\n    return function (message) {\n      try {\n        var canLogKadira = global.localStorage.getItem('LOG_KADIRA') !== null && typeof console !== 'undefined';\n      } catch (e) {} //older browsers can sometimes throw because of getItem\n\n\n      if (canLogKadira) {\n        if (message) {\n          message = \"kadira:ntp \" + message;\n          arguments[0] = message;\n        }\n\n        console.log.apply(console, arguments);\n      }\n    };\n  }\n}","map":{"version":3,"sources":["packages/montiapm:agent/lib/ntp.js"],"names":["logger","getLogger","Ntp","endpoint","path","setEndpoint","diff","synced","reSyncCount","reSync","Retry","baseTimeout","maxTimeout","minCount","_now","now","Date","getTime","prototype","Math","round","syncTime","localTime","ceil","sync","self","retryCount","retry","minTimeout","retryLater","cacheDns","args","slice","call","arguments","apply","getServerTime","err","calculateTimeDiff","clientStartTime","serverTime","networkTime","serverStartTime","callback","Error","Meteor","isServer","Kadira","coreApi","get","noRetries","then","content","parseInt","catch","httpRequest","random","res","Npm","require","message","canLogKadira","global","localStorage","getItem","console","e","log"],"mappings":"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","sourcesContent":["var logger = getLogger();\n\nNtp = function (endpoint) {\n  this.path = '/simplentp/sync';\n  this.setEndpoint(endpoint);\n  this.diff = 0;\n  this.synced = false;\n  this.reSyncCount = 0;\n  this.reSync = new Retry({\n    baseTimeout: 1000*60,\n    maxTimeout: 1000*60*10,\n    minCount: 0\n  });\n}\n\nNtp._now = function() {\n  var now = Date.now();\n  if(typeof now == 'number') {\n    return now;\n  } else if(now instanceof Date) {\n    // some extenal JS libraries override Date.now and returns a Date object\n    // which directly affect us. So we need to prepare for that\n    return now.getTime();\n  } else {\n    // trust me. I've seen now === undefined\n    return (new Date()).getTime();\n  }\n};\n\nNtp.prototype.setEndpoint = function(endpoint) {\n  this.endpoint = endpoint ? endpoint + this.path : null;\n};\n\nNtp.prototype.getTime = function() {\n  return Ntp._now() + Math.round(this.diff);\n};\n\nNtp.prototype.syncTime = function(localTime) {\n  return localTime + Math.ceil(this.diff);\n};\n\nNtp.prototype.sync = function() {\n  if (this.endpoint === null) {\n    return;\n  }\n\n  logger('init sync');\n  var self = this;\n  var retryCount = 0;\n  var retry = new Retry({\n    baseTimeout: 1000*20,\n    maxTimeout: 1000*60,\n    minCount: 1,\n    minTimeout: 0\n  });\n  syncTime();\n\n  function syncTime () {\n    if(retryCount<5) {\n      logger('attempt time sync with server', retryCount);\n      // if we send 0 to the retryLater, cacheDns will run immediately\n      retry.retryLater(retryCount++, cacheDns);\n    } else {\n      logger('maximum retries reached');\n      self.reSync.retryLater(self.reSyncCount++, function () {\n        var args = [].slice.call(arguments);\n        self.sync.apply(self, args);\n      });\n    }\n  }\n\n  // first attempt is to cache dns. So, calculation does not\n  // include DNS resolution time\n  function cacheDns () {\n    self.getServerTime(function(err) {\n      if(!err) {\n        calculateTimeDiff();\n      } else {\n        syncTime();\n      }\n    });\n  }\n\n  function calculateTimeDiff () {\n    var clientStartTime = (new Date()).getTime();\n    self.getServerTime(function(err, serverTime) {\n      if(!err && serverTime) {\n        // (Date.now() + clientStartTime)/2 : Midpoint between req and res\n        var networkTime = ((new Date()).getTime() - clientStartTime)/2\n        var serverStartTime = serverTime - networkTime;\n        self.diff = serverStartTime - clientStartTime;\n        self.synced = true;\n        // we need to send 1 into retryLater.\n        self.reSync.retryLater(self.reSyncCount++, function () {\n          var args = [].slice.call(arguments);\n          self.sync.apply(self, args);\n        });\n        logger('successfully updated diff value', self.diff);\n      } else {\n        syncTime();\n      }\n    });\n  }\n}\n\nNtp.prototype.getServerTime = function(callback) {\n  var self = this;\n\n  if (self.endpoint === null) {\n    throw new Error('getServerTime requires the endpoint to be set');\n  }\n\n  if(Meteor.isServer) {\n    Kadira.coreApi.get(self.path, { noRetries: true }).then(content => {\n      var serverTime = parseInt(content);\n      callback(null, serverTime);\n    })\n      .catch(err => {\n        callback(err);\n      });\n  } else {\n    httpRequest('GET', self.endpoint + `?noCache=${new Date().getTime()}-${Math.random()}`, function(err, res) {\n      if (err) {\n        callback(err);\n      } else {\n        var serverTime = parseInt(res.content);\n        callback(null, serverTime);\n      }\n    });\n  }\n};\n\nfunction getLogger() {\n  if(Meteor.isServer) {\n    return Npm.require('debug')(\"kadira:ntp\");\n  } else {\n    return function(message) {\n      try {\n        var canLogKadira = global.localStorage.getItem('LOG_KADIRA') !== null && typeof console !== 'undefined';\n      } catch (e) { } //older browsers can sometimes throw because of getItem\n      if (canLogKadira) {\n        if (message) {\n          message = \"kadira:ntp \" + message;\n          arguments[0] = message;\n        }\n        console.log.apply(console, arguments);\n      }\n    }\n  }\n}\n"]},"sourceType":"module","externalDependencies":{},"hash":"2fbc139522e402444d567791174d75f9bc491d81"}
