{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\hijack\\async.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/hijack/async.js","filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\hijack\\async.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","root":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\zianz\\OneDrive\\Documents\\GitHub\\X\\app\\packages\\montiapm:agent\\lib\\hijack\\async.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/hijack/async.js"}},"code":"module.export({\n  wrapFibers: () => wrapFibers,\n  getFiberMetrics: () => getFiberMetrics,\n  resetFiberMetrics: () => resetFiberMetrics\n});\n\nvar Fibers = Npm.require('fibers');\n\nvar EventSymbol = Symbol();\nvar StartTracked = Symbol();\nvar activeFibers = 0;\nvar wrapped = false;\n\nfunction wrapFibers() {\n  if (wrapped) {\n    return;\n  }\n\n  wrapped = true;\n  var originalYield = Fibers.yield;\n\n  Fibers.yield = function () {\n    var kadiraInfo = Kadira._getInfo();\n\n    if (kadiraInfo) {\n      var eventId = Kadira.tracer.event(kadiraInfo.trace, 'async');\n\n      if (eventId) {\n        // The event unique to this fiber\n        // Using a symbol since Meteor doesn't copy symbols to new fibers created\n        // for promises. This is needed so the correct event is ended when a fiber runs after being yielded.\n        Fibers.current[EventSymbol] = eventId;\n      }\n    }\n\n    return originalYield();\n  };\n\n  var originalRun = Fibers.prototype.run;\n  var originalThrowInto = Fibers.prototype.throwInto;\n\n  function ensureFiberCounted(fiber) {\n    // If fiber.started is true, and StartTracked is false\n    // then the fiber was probably initially ran before we wrapped Fibers.run\n    if (!fiber.started || !fiber[StartTracked]) {\n      activeFibers += 1;\n      fiber[StartTracked] = true;\n    }\n  }\n\n  Fibers.prototype.run = function (val) {\n    ensureFiberCounted(this);\n\n    if (this[EventSymbol]) {\n      var kadiraInfo = Kadira._getInfo(this);\n\n      if (kadiraInfo) {\n        Kadira.tracer.eventEnd(kadiraInfo.trace, this[EventSymbol]);\n        this[EventSymbol] = null;\n      }\n    } else if (!this.__kadiraInfo && Fibers.current && Fibers.current.__kadiraInfo) {\n      // Copy kadiraInfo when packages or user code creates a new fiber\n      // Done by many apps and packages in connect middleware since older\n      // versions of Meteor did not do it automatically\n      this.__kadiraInfo = Fibers.current.__kadiraInfo;\n    }\n\n    let result;\n\n    try {\n      result = originalRun.call(this, val);\n    } finally {\n      if (!this.started) {\n        activeFibers -= 1;\n        this[StartTracked] = false;\n      }\n    }\n\n    return result;\n  };\n\n  Fibers.prototype.throwInto = function (val) {\n    ensureFiberCounted(this); // TODO: this should probably end the current async event since in some places\n    // Meteor calls throwInto instead of run after a fiber is yielded. For example,\n    // when a promise is awaited and rejects an error.\n\n    let result;\n\n    try {\n      result = originalThrowInto.call(this, val);\n    } finally {\n      if (!this.started) {\n        activeFibers -= 1;\n        this[StartTracked] = false;\n      }\n    }\n\n    return result;\n  };\n}\n\nlet activeFiberTotal = 0;\nlet activeFiberCount = 0;\nlet previousTotalCreated = 0;\nsetInterval(() => {\n  activeFiberTotal += activeFibers;\n  activeFiberCount += 1;\n}, 1000);\n\nfunction getFiberMetrics() {\n  return {\n    created: Fibers.fibersCreated - previousTotalCreated,\n    active: activeFiberTotal / activeFiberCount,\n    poolSize: Fibers.poolSize\n  };\n}\n\nfunction resetFiberMetrics() {\n  activeFiberTotal = 0;\n  activeFiberCount = 0;\n  previousTotalCreated = Fibers.fibersCreated;\n}","map":{"version":3,"sources":["packages/montiapm:agent/lib/hijack/async.js"],"names":["module","export","wrapFibers","getFiberMetrics","resetFiberMetrics","Fibers","Npm","require","EventSymbol","Symbol","StartTracked","activeFibers","wrapped","originalYield","yield","kadiraInfo","Kadira","_getInfo","eventId","tracer","event","trace","current","originalRun","prototype","run","originalThrowInto","throwInto","ensureFiberCounted","fiber","started","val","eventEnd","__kadiraInfo","result","call","activeFiberTotal","activeFiberCount","previousTotalCreated","setInterval","created","fibersCreated","active","poolSize"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,UAAU,EAAC,MAAIA,UAAhB;AAA2BC,EAAAA,eAAe,EAAC,MAAIA,eAA/C;AAA+DC,EAAAA,iBAAiB,EAAC,MAAIA;AAArF,CAAd;;AAAA,IAAIC,MAAM,GAAGC,GAAG,CAACC,OAAJ,CAAY,QAAZ,CAAb;;AACA,IAAIC,WAAW,GAAGC,MAAM,EAAxB;AACA,IAAIC,YAAY,GAAGD,MAAM,EAAzB;AAEA,IAAIE,YAAY,GAAG,CAAnB;AACA,IAAIC,OAAO,GAAG,KAAd;;AAEO,SAASV,UAAT,GAAsB;AAC3B,MAAIU,OAAJ,EAAa;AACX;AACD;;AACDA,EAAAA,OAAO,GAAG,IAAV;AAEA,MAAIC,aAAa,GAAGR,MAAM,CAACS,KAA3B;;AACAT,EAAAA,MAAM,CAACS,KAAP,GAAe,YAAY;AACzB,QAAIC,UAAU,GAAGC,MAAM,CAACC,QAAP,EAAjB;;AACA,QAAIF,UAAJ,EAAgB;AACd,UAAIG,OAAO,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoBL,UAAU,CAACM,KAA/B,EAAsC,OAAtC,CAAd;;AACA,UAAIH,OAAJ,EAAa;AACX;AACA;AACA;AACAb,QAAAA,MAAM,CAACiB,OAAP,CAAed,WAAf,IAA8BU,OAA9B;AACD;AACF;;AAED,WAAOL,aAAa,EAApB;AACD,GAbD;;AAeA,MAAIU,WAAW,GAAGlB,MAAM,CAACmB,SAAP,CAAiBC,GAAnC;AACA,MAAIC,iBAAiB,GAAGrB,MAAM,CAACmB,SAAP,CAAiBG,SAAzC;;AAEA,WAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC;AACA;AACA,QAAI,CAACA,KAAK,CAACC,OAAP,IAAkB,CAACD,KAAK,CAACnB,YAAD,CAA5B,EAA4C;AAC1CC,MAAAA,YAAY,IAAI,CAAhB;AACAkB,MAAAA,KAAK,CAACnB,YAAD,CAAL,GAAsB,IAAtB;AACD;AACF;;AAEDL,EAAAA,MAAM,CAACmB,SAAP,CAAiBC,GAAjB,GAAuB,UAAUM,GAAV,EAAe;AACpCH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;;AAEA,QAAI,KAAKpB,WAAL,CAAJ,EAAuB;AACrB,UAAIO,UAAU,GAAGC,MAAM,CAACC,QAAP,CAAgB,IAAhB,CAAjB;;AACA,UAAIF,UAAJ,EAAgB;AACdC,QAAAA,MAAM,CAACG,MAAP,CAAca,QAAd,CAAuBjB,UAAU,CAACM,KAAlC,EAAyC,KAAKb,WAAL,CAAzC;AACA,aAAKA,WAAL,IAAoB,IAApB;AACD;AACF,KAND,MAMO,IAAI,CAAC,KAAKyB,YAAN,IAAsB5B,MAAM,CAACiB,OAA7B,IAAwCjB,MAAM,CAACiB,OAAP,CAAeW,YAA3D,EAAyE;AAC9E;AACA;AACA;AACA,WAAKA,YAAL,GAAoB5B,MAAM,CAACiB,OAAP,CAAeW,YAAnC;AACD;;AAED,QAAIC,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAGX,WAAW,CAACY,IAAZ,CAAiB,IAAjB,EAAuBJ,GAAvB,CAAT;AACD,KAFD,SAEU;AACR,UAAI,CAAC,KAAKD,OAAV,EAAmB;AACjBnB,QAAAA,YAAY,IAAI,CAAhB;AACA,aAAKD,YAAL,IAAqB,KAArB;AACD;AACF;;AAED,WAAOwB,MAAP;AACD,GA3BD;;AA6BA7B,EAAAA,MAAM,CAACmB,SAAP,CAAiBG,SAAjB,GAA6B,UAAUI,GAAV,EAAe;AAC1CH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAD0C,CAG1C;AACA;AACA;;AAEA,QAAIM,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAGR,iBAAiB,CAACS,IAAlB,CAAuB,IAAvB,EAA6BJ,GAA7B,CAAT;AACD,KAFD,SAEU;AACR,UAAI,CAAC,KAAKD,OAAV,EAAmB;AACjBnB,QAAAA,YAAY,IAAI,CAAhB;AACA,aAAKD,YAAL,IAAqB,KAArB;AACD;AACF;;AAED,WAAOwB,MAAP;AACD,GAlBD;AAmBD;;AAED,IAAIE,gBAAgB,GAAG,CAAvB;AACA,IAAIC,gBAAgB,GAAG,CAAvB;AACA,IAAIC,oBAAoB,GAAG,CAA3B;AAEAC,WAAW,CAAC,MAAM;AAChBH,EAAAA,gBAAgB,IAAIzB,YAApB;AACA0B,EAAAA,gBAAgB,IAAI,CAApB;AACD,CAHU,EAGR,IAHQ,CAAX;;AAKO,SAASlC,eAAT,GAA2B;AAChC,SAAO;AACLqC,IAAAA,OAAO,EAAEnC,MAAM,CAACoC,aAAP,GAAuBH,oBAD3B;AAELI,IAAAA,MAAM,EAAEN,gBAAgB,GAAGC,gBAFtB;AAGLM,IAAAA,QAAQ,EAAEtC,MAAM,CAACsC;AAHZ,GAAP;AAKD;;AAEM,SAASvC,iBAAT,GAA6B;AAClCgC,EAAAA,gBAAgB,GAAG,CAAnB;AACAC,EAAAA,gBAAgB,GAAG,CAAnB;AACAC,EAAAA,oBAAoB,GAAGjC,MAAM,CAACoC,aAA9B;AACD","sourcesContent":["var Fibers = Npm.require('fibers');\nvar EventSymbol = Symbol();\nvar StartTracked = Symbol();\n\nvar activeFibers = 0;\nvar wrapped = false;\n\nexport function wrapFibers() {\n  if (wrapped) {\n    return;\n  }\n  wrapped = true;\n\n  var originalYield = Fibers.yield;\n  Fibers.yield = function () {\n    var kadiraInfo = Kadira._getInfo();\n    if (kadiraInfo) {\n      var eventId = Kadira.tracer.event(kadiraInfo.trace, 'async');\n      if (eventId) {\n        // The event unique to this fiber\n        // Using a symbol since Meteor doesn't copy symbols to new fibers created\n        // for promises. This is needed so the correct event is ended when a fiber runs after being yielded.\n        Fibers.current[EventSymbol] = eventId;\n      }\n    }\n\n    return originalYield();\n  };\n\n  var originalRun = Fibers.prototype.run;\n  var originalThrowInto = Fibers.prototype.throwInto;\n\n  function ensureFiberCounted(fiber) {\n    // If fiber.started is true, and StartTracked is false\n    // then the fiber was probably initially ran before we wrapped Fibers.run\n    if (!fiber.started || !fiber[StartTracked]) {\n      activeFibers += 1;\n      fiber[StartTracked] = true;\n    }\n  }\n\n  Fibers.prototype.run = function (val) {\n    ensureFiberCounted(this);\n\n    if (this[EventSymbol]) {\n      var kadiraInfo = Kadira._getInfo(this);\n      if (kadiraInfo) {\n        Kadira.tracer.eventEnd(kadiraInfo.trace, this[EventSymbol]);\n        this[EventSymbol] = null;\n      }\n    } else if (!this.__kadiraInfo && Fibers.current && Fibers.current.__kadiraInfo) {\n      // Copy kadiraInfo when packages or user code creates a new fiber\n      // Done by many apps and packages in connect middleware since older\n      // versions of Meteor did not do it automatically\n      this.__kadiraInfo = Fibers.current.__kadiraInfo;\n    }\n\n    let result;\n    try {\n      result = originalRun.call(this, val);\n    } finally {\n      if (!this.started) {\n        activeFibers -= 1;\n        this[StartTracked] = false;\n      }\n    }\n\n    return result;\n  };\n\n  Fibers.prototype.throwInto = function (val) {\n    ensureFiberCounted(this);\n\n    // TODO: this should probably end the current async event since in some places\n    // Meteor calls throwInto instead of run after a fiber is yielded. For example,\n    // when a promise is awaited and rejects an error.\n\n    let result;\n    try {\n      result = originalThrowInto.call(this, val);\n    } finally {\n      if (!this.started) {\n        activeFibers -= 1;\n        this[StartTracked] = false;\n      }\n    }\n\n    return result;\n  };\n}\n\nlet activeFiberTotal = 0;\nlet activeFiberCount = 0;\nlet previousTotalCreated = 0;\n\nsetInterval(() => {\n  activeFiberTotal += activeFibers;\n  activeFiberCount += 1;\n}, 1000);\n\nexport function getFiberMetrics() {\n  return {\n    created: Fibers.fibersCreated - previousTotalCreated,\n    active: activeFiberTotal / activeFiberCount,\n    poolSize: Fibers.poolSize\n  }\n}\n\nexport function resetFiberMetrics() {\n  activeFiberTotal = 0;\n  activeFiberCount = 0;\n  previousTotalCreated = Fibers.fibersCreated;\n}\n"]},"sourceType":"module","externalDependencies":{},"hash":"e9fb390085ff155d489b3fcab8993ad1118b4832"}
